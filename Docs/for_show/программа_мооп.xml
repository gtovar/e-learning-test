<?xml version="1.0" encoding="windows-1251"?><disciplineProgram><title>Методы объектно-ориентированного программирования</title><applicationDomain title="Область применения"><![CDATA[<p>Данная дисциплина относится к дисциплинам федерального компонента, преподается во втором семестре.</p><p></p>]]></applicationDomain><purposes title="Цели и задачи дисциплины"><![CDATA[<p>Содержание дисциплины направлено на ознакомление студентов с особенностями программирования на языке С и с понятиями программирования в рамках объектной модели с применением языка С++. В первой части темы курса включают особенности применения в языке С простых типов данных, управляющих структур, массивов и структур данных, функций. Во второй части курса рассматриваются парадигмы объектно-ориентированного программирования, особенности построения конструкторов и деструкторов объектов, механизмы наследования и полиморфизмы, использование шаблонов, виртуальных классов и методов.</p><p>Курс ставит своей целью усвоение студентами понятий, связанных с  разработкой ПО, и развивает базовые навыки в программировании на примере языка, поддерживающего объектно-ориентированную парадигму.</p><p></p>]]></purposes><requirements title="Требования к уровню освоения содержания дисциплины"><![CDATA[<p>В результате изучения студенты должны:</p><p>Знать особенности синтаксических конструкций языка С, основные понятия объектно-ориентированного программирования и особенности их реализаций в языке С++.</p><p>Уметь проводить анализ практических задач с целью выделения и дальнейшего программирования функций, объектов и классов.</p><p>Иметь представление (навыки) организации взаимодействия функций и объектов в процессе выполнения программ, применения шаблонов функций, классов и методов классов.</p><p></p>]]></requirements><disciplineVolume title="Объем дисциплины и виды учебной работы"><![CDATA[<p><table><thead><tr><td>Виды учебной работы</td><td>Всего часов</td><td>Семестры</td></tr></thead><tbody><tr><td>Общая трудоемкость дисциплины</td><td>115</td><td>2</td></tr><tr><td>Аудиторные занятия</td><td>96</td><td></td></tr><tr><td>Лекции</td><td>48</td><td></td></tr><tr><td>Практические занятия (ПЗ)</td><td>48</td><td></td></tr><tr><td>Семинары (С)</td><td></td><td></td></tr><tr><td>Лабораторные работы (ЛР)</td><td></td><td></td></tr><tr><td>Другие виды аудиторных занятий</td><td></td><td></td></tr><tr><td>Самостоятельная работа</td><td>19</td><td></td></tr><tr><td>Курсовой проект (работа)</td><td></td><td></td></tr><tr><td>Расчетно-графическая работа</td><td></td><td></td></tr><tr><td>Реферат</td><td></td><td></td></tr><tr><td>Другие виды самостоятельной работы</td><td></td><td></td></tr><tr><td>Вид итогового контроля (зачет, экзамен)</td><td>экзамен</td><td></td></tr></tbody></table></p>]]></disciplineVolume><disciplineContent title="Содержание дисциплины"><disciplineRazdels title="Разделы дисциплины и виды занятий"><![CDATA[<p><table><thead><tr><td>№п/п</td><td>Раздел дисциплины</td><td>Лекции</td><td>ПЗ (или С)</td><td>ЛР</td></tr></thead><tbody><tr><td>1</td><td>Введение в язык </td><td>*</td><td></td><td></td></tr><tr><td>2</td><td>Начала С</td><td>*</td><td></td><td></td></tr><tr><td>3</td><td>Организация ввода/вывода в C. Работа с файлами. </td><td>*</td><td></td><td></td></tr><tr><td>4</td><td>Указатели и массивы. Ссылки. Структуры</td><td>*</td><td></td><td></td></tr><tr><td>5</td><td>Функции языка C</td><td>*</td><td></td><td></td></tr><tr><td>6</td><td>Средства компоновки программы</td><td>*</td><td></td><td></td></tr><tr><td>7</td><td>Введение в ООП</td><td>*</td><td></td><td></td></tr><tr><td>8</td><td>Классы и объекты</td><td>*</td><td></td><td></td></tr><tr><td>9</td><td>Конструкторы и деструкторы</td><td>*</td><td></td><td></td></tr><tr><td>10</td><td>Наследование</td><td>*</td><td></td><td></td></tr><tr><td>11</td><td>Полиморфизм</td><td>*</td><td></td><td></td></tr><tr><td>12</td><td>Использование шаблонов</td><td>*</td><td></td><td></td></tr><tr><td>13</td><td>Пример: класс TSet</td><td>*</td><td></td><td></td></tr></tbody></table></p>]]></disciplineRazdels><disciplineRazdelsContent title="Содержание разделов дисциплины" /><topics><topic level="1" title="Введение в язык" /><topic level="2" title="Язык C: краткая историческая справка. Место языка в разработке современного прикладного и системного ПО. Общая характеристика и основные отличия PASCAL от C: отсутствие вложенности функций, механизм работы с объектными модулями, расширенные средства работы с указателями, препроцессорные операции." /><topic level="1" title="Начала С" /><topic level="2" title="Числовые типы данных. Константы. Объявления и инициирование переменных. Специфика объявлений в C и в C++. Объявления констант (const и #define)." /><topic level="2" title="Операции с числовыми типами. Выражения. Смешанные выражения. Преобразования и приведение типов. Оператор присваивания. Округления (floor, ceil). Некоторые стандартные функции библиотечного раздела math.h." /><topic level="2" title="Перечисленный тип данных enum." /><topic level="2" title="Символьные данные в PASCAL и C. Символьные константы. Объявление и инициализация символьных данных. Операции над символьными данными." /><topic level="2" title="Строковые данные в PASCAL и C. Объявление и инициализация строковых данных. Типы Char[] и string. Функции библиотеки string.h. Тип AnsiString. Методы класса AnsiString." /><topic level="2" title="Операторы if-then-else, while, do-while, for, switch. Операторы break, continue." /><topic level="2" title="Комментарии в программах на C и C++." /><topic level="1" title="Организация ввода/вывода в C. Работа с файлами." /><topic level="2" title="Форматный и потоковый ввод/вывод числовой информации (библиотечные разделы stdio.h и iostream.h). Обзор работы с файлами. Файловая система. Форматный и бесформатный обмены с файлами и устройствами. Форматные преобразования в оперативной памяти (sprintf, sscanf). Текстовые (строковые), записеориентированные и двоичные файлы" /><topic level="1" title="Указатели и массивы. Ссылки. Структуры" /><topic level="2" title="Указатели. Константные указатели. Массивы. Многомерные массивы. Массивы как указатели. Передача массивов в функции. Ссылки. Использование ссылок." /><topic level="2" title="Конструкции struct, union, битовые поля. Классы памяти. Стек и куча. Операторы new, delete." /><topic level="1" title="Функции языка C" /><topic level="2" title="Структура программы на PASCAL и C. Функции C. Функция main. Блок." /><topic level="2" title="Определение и вызов функции. Прототипы и аргументы по умолчанию. Перегружаемые функции. Встраивание и макрорасширение. Функции с переменным числом параметров. Область видимости. Сокрытие имени. Описатель extern." /><topic level="2" title="Рекурсия и механизм ее реализации (на примере)." /><topic level="1" title="Средства компоновки программы" /><topic level="2" title="Многофайловая программа. Модули. Заголовочные файлы. Директива #include. Директивы #define, #ifdef, #ifnotdef." /><topic level="2" title="Проектирование приложения. Анализ задачи: информационная и алгоритмическая модели. Компоновка файлов проекта." /><topic level="1" title="Введение в ООП" /><topic level="2" title="Немного истории: модульное программирование, структурное программирование, ООП. Парадигмы ООП (на примере)." /><topic level="1" title="Классы и объекты" /><topic level="2" title="Описание класса. Элементы класса (поля и методы). Спецификаторы доступа public и private. Локальные и глобальные классы. Пример объявления класса. Реализация, операция разрешения видимости (::) и встроенные (inline) методы." /><topic level="2" title="Описание объектов. Доступ к элементам объекта (. и >). Константный метод. Константный объект. Использование указателя this." /><topic level="2" title="Статические элементы класса (статические поля и методы)." /><topic level="2" title="Дружественные функции и классы." /><topic level="1" title="Конструкторы и деструкторы" /><topic level="2" title="Конструкторы. Свойства конструкторов. Перегрузка конструкторов. Реализация конструкторов, инициализация полей. Конструкторы по умолчанию, инициаторы, копирования, преобразования." /><topic level="2" title="Деструкторы" /><topic level="2" title="Пример: объявление класса, реализация, демонстрация работы конструкторов, деструктора, методов класса." /><topic level="1" title="Наследование" /><topic level="2" title="Порожденные классы. Спецификатор protected. Ключи доступа (private-, protected-, public-наследование). Простое наследование." /><topic level="2" title="Правила наследования методов (конструкторы, операция присваивания, деструкторы). Переопределение методов." /><topic level="2" title="Пример: объявления классов, реализация, демонстрация работы конструкторов, деструкторов, методов классов." /><topic level="2" title="Виртуальные методы. Раннее и позднее связывание. Правила использования виртуальных методов. Виртуальность деструкторов." /><topic level="2" title="Пример: объявления классов с виртуальными методами, реализация, демонстрация работы виртуальных методов и деструкторов." /><topic level="2" title="Чисто виртуальные (абстрактные) методы и абстрактные классы. Пример применения абстрактных классов в цепочке наследования" /><topic level="1" title="Полиморфизм" /><topic level="2" title="Перегрузка операций (унарные операции, бинарные операции, присваивание, new и delete). Перегрузка операции приведения типа. Перегрузка операции вызова функции. Перегрузка операции индексирования." /><topic level="2" title="Пример: разработка класса “Двумерный динамический массив”. Проектирование класса. Скрытие данных. Механизмы для доступа. Перегрузка операции индексирования." /><topic level="1" title="Использование шаблонов" /><topic level="2" title="Шаблоны классов. Синтаксис описания шаблона. Правила описания шаблонов. Использование шаблонов классов. Инстанцирование. Специализация. Пример шаблона: Стек с типовым указателем, родовым указателем и шаблоном. Достоинства и недостатки шаблонов." /><topic level="1" title="Пример: класс TSet" /><topic level="2" title="Характеристический вектор множества и его представление в виде битовой строки. Поэтапное проектирование структуры хранения битовой строки. Спецификация класса TBitField и реализация методов. Разработка класса TSet для представления множеств с использованием структуры данных типа битовая строка." /></topics></disciplineContent><labPractice title="Лабораторный практикум"><![CDATA[<p><table><thead><tr><td>№п/п</td><td>№ раздела дисциплины</td><td>Наименование лабораторных работ</td></tr></thead><tbody><tr><td></td><td></td><td>Знакомство с С </td></tr><tr><td></td><td></td><td>Решение систем линейных уравнений методом Гаусса </td></tr><tr><td></td><td></td><td>Решение нелинейных алгебраических уравнений </td></tr><tr><td></td><td></td><td>Структуры хранения матриц специального типа </td></tr><tr><td></td><td></td><td>Построение графика функции </td></tr><tr><td></td><td></td><td>Разработка графического редактора (факультатив)</td></tr></tbody></table></p>]]></labPractice><disciplineMaintenance title="Учебно-методическое обеспечение дисциплины"><literature title="Рекомендуемая литература"><![CDATA[<p>а) основная литература:<ol><li>Павловская Т.А. C/C++ Программирование на языке высокого уровня.</li><li>Ален И. Голуб. Правила программирования на C/C++.</li><li>Страустрап. Введение в язык С++. http://www.helloworld.ru/texts/comp/lang/c/c3/aglav.htm</li></ol></p>]]><![CDATA[<p>б) дополнительная литература:<ol><li>Кетков Ю.Л., Кетков А.Ю., Практика программирования: Бейсик, Си, Паскаль. Самоучитель. – СПб.: БХВ-Петербург, 2002. – 480 с.</li><li>Лаптев В. С++. Экспесс-курс. – СПб.: БХВ – Петербург, 2004 – 512с.</li><li>Страустрап. Справочное руководство по C++. http://www.helloworld.ru/texts/comp/lang/c/c4/</li><li>Липпман.C++ для начинающих. http://c-plus-plus.narod.ru/docs/books.html</li><li>Ю.Ю.Громов, С.И.Татаренко. Программирование на языке СИ: Учебное пособие. -Тамбов,1995.- 169 с. http://www.helloworld.ru/texts/comp/lang/c/c/dir.htm</li><li></li></ol></p>]]></literature></disciplineMaintenance><questions title="Вопросы для контроля"><![CDATA[<p><ol><li></li><li>Общая характеристика языка С и его характерные отличия от языка PASCAL.</li><li>Структура программы на языке С. Подключение библиотек, Организация ввода-вывода с помощью библиотеки iostream.</li><li>Модуль в языке С. Организация многофайловой программы, заголовочные файлы, директива #include, прототипы функций.</li><li>Оператор присваивания и оператор ветвления. Особенности оператора присваивания и вычисления условий в языке С. Примеры операторов присваивания и ветвления.</li><li>Объявление массивов с языке С. Организация циклов. Цикл с предусловием и постусловием. Цикл for и его связь с циклом while. Примеры.</li><li>Оператор переключатель. Инструкция break. Примеры применения оператора переключателя.</li><li>Числовые типы данных языка С. Целочисленные (десятичные, восьми и шестнадцатеричные) и действительные константы. Именованные константы и способы их задания в языке С.</li><li>Перечисленный тип в языке С. Особенности, возможности и примеры его использования.</li><li>Понятие блока в языке С. Объявления и инициализация переменных и массивов в С.</li><li>Обзор операций языка С. Приоритеты операций. Операции низкого и высокого уровней. Примеры операций.</li><li>Выражения в языке С. Правила вычисления выражений. Приоритеты операций и правило ассоциативности. Приведение типов в С и С++. Операция последования (скобки).</li><li>Символьный тип в языке С. Символьные константы. Представление строк в С. Библиотека string. Примеры функций библиотеки string.</li><li>Указатели и ссылки в языке С. Константные указатели и ссылки. Операции с указателями и ссылками.</li><li>Массив как указатель в языке С. Особенности индексации массива при записи кода. Массив как параметр функции. Многомерные массивы.</li><li>Функции в языке С. Объявление, описание и вызов. Особенности передачи параметров (по значению, ссылке, указателем, константной ссылке). Перегрузка функций и параметры по умолчанию.</li><li>Функции в языке С. Встраиваемые функции и макросы. Передача функции как параметр. Функция как указатель на функцию. Массив указателей на функции.</li><li>Структуры в языке С. Объявление типа и переменных. Использование элементов структур. Вложенные структуры и массивы. Примеры построения вложенных структур и массивов.</li><li>Объединения в языке С. Объявление типа и переменных. Использование элементов объединений. Битовые поля.</li><li>Классы и типы памяти. Время жизни и область видимости объектов. Локальные и глобальные объекты. Механизм управления стеком.</li><li>Классы и типы памяти. Время жизни и область видимости объектов. Локальные и глобальные объекты. Механизм управления кучей.</li><li>Форматный вывод и ввод. Функции printf и scanf библиотеки stdio.</li><li>Форматные преобразования в памяти. Функции sprintf и sscanf библиотеки stdio.</li><li>Работа с текстовыми файлами. Функции fopen, fclose, fprintf, fscanf библиотеки stdio.</li><li>Работа с записеориентированными файлами. Функции fopen, fclose, fprintf, fscanf библиотеки stdio.</li><li>Работа с бинарными файлами. Функции fopen, fclose, fwrite, fread, fseek библиотеки stdio.</li><li>Технологические основы языков программирования высокого уровня. Структурное и модульное программирование.</li><li>Технологические основы языков программирования высокого уровня. Простые и сложные задачи. Причины возникновения сложности. Решение проблемы сложности задач.</li><li>ООП и объектная модель. Основные принципы объектной модели.</li><li>Анализ, проектирование и программирование. Объектный подход, алгоритмическая и объектно-ориентированная декомпозиция. Достоинства и недостатки ООП.</li><li>Абстрактные типы данных. Понятие класса. Инкапсуляция. Объявление класса. Поля и методы. Секции public и private. Скрытие данных.</li><li>Объявление класса. Поля и методы. Секции public и private. Скрытие данных. Пример разработки класса “Комплексное число”. Реализация методов класса. Встроенные методы.</li><li>Константные поля. Константные методы. Использование константных ссылок в списке параметров методов класса. Пример разработки класса “Комплексное число”.</li><li>Способы создания объектов. Доступ к данным и методам объекта. Указатель this.</li><li>Статическое и динамическое создание объектов внутри методов. Ссылки в заголовках методов. Примеры.</li><li>Создание объектов. Конструкторы. Виды конструкторов.</li><li>Конструктор копирования. Пример разработки конструктора копирования.</li><li>Уничтожение объектов. Деструкторы.</li><li>Статические поля и методы класса. Дружественные функции и классы.</li><li>Пример разработки класса “Вектор”. Реализация операций без использования перегрузки.</li><li>Перегрузка операций. Особенности перегрузки для унарных, бинарных операций. Перегрузка операции [].</li><li>Перегрузка операций. Перегрузка операции присваивания. Операция присваивания и конструктор копирования.</li><li>Суть проблемы моделирования. Инкапсуляция, модульность и иерархия как средства решения проблемы. Виды иерархий. Наследование и агрегация. Реализация агрегации в C++. Пример.</li><li>Наследование в C++. Простое (одиночное) наследование. Public, private и protected-наследование. Некоторые правила наследования.</li><li>Наследование в C++. Простое (одиночное) наследование. Пример последовательного проектирования иерархии классов геометрических фигур. Перекрытие (замещение) методов.</li><li>Раннее и позднее связывание. Механизм виртуальных методов.</li><li>Механизм виртуальных методов. Применение виртуальных методов для разработки классов “Точка” и “Круг”.</li><li>Чисто виртуальные методы и абстрактные классы. Абстрактный класс в примере “Геометрические фигуры”.</li><li>Множественное наследование. Виртуальное наследование.</li><li>Перегрузка функций в C++. Сигнатура. Алгоритм проверки соответствия сигнатуре.</li><li>Шаблоны функций. Шаблоны классов. Инстанцирование и специализация.</li><li></li></ol></p>]]></questions><markCriterias title="Критерии оценок"><![CDATA[<p><table><tr><td>Зачтено</td><td>текст</td></tr><tr><td>Незачтено</td><td>текст</td></tr></table><table><tr><td>Превосходно</td><td>текст</td></tr><tr><td>Отлично</td><td>текст</td></tr><tr><td>Очень хорошо</td><td>текст</td></tr><tr><td>Хорошо</td><td>текст</td></tr><tr><td>Удовлетворительно</td><td>текст</td></tr><tr><td>Неудовлетворительно</td><td>текст </td></tr><tr><td>Плохо</td><td>текст</td></tr></table></p>]]></markCriterias><reporting title="Примерная тематика курсовых работ и критерии их оценки"><![CDATA[<p></p>]]></reporting><additional><![CDATA[<p>Программа составлена в соответствии с Государственным</p><p>образовательным стандартом по специальности (направлению) «_______».</p><p></p><p>Авторы программы:</p><p>_________________ Карпенко С.Н.,</p><p>(подпись)</p><p></p><p>_________________ Мееров И.Б.,</p><p>(подпись)</p><p>Программа рассмотрена на заседании кафедры_______ протокол № __</p><p>(дата)</p><p></p><p>Заведующий кафедрой ___________________ Стронгин Р.Г.</p><p></p><p>Программа одобрена методической комиссией факультета____ протокол № __</p><p>(дата)</p><p></p><p>Председатель методической комиссии_________________ Таланов В.А.</p><p>(подпись)</p><p></p><p></p>]]></additional></disciplineProgram>