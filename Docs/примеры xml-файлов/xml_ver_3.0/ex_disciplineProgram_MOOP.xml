<?xml version="1.0" encoding="windows-1251"?>
<disciplineProgram>
	<title>
		Методы объектно-ориентированного программирования
	</title>
	
	<applicationDomain title="Область применения">
		<![CDATA[<p>Данная дисциплина относится к дисциплинам федерального компонента, пре-подается во втором семестре. </p>]]>
	</applicationDomain>

	<purposes title="Цели и задачи дисциплины">
		<![CDATA[<p>Содержание дисциплины направлено на ознакомление студентов с особенно-стями программирования на языке С и с понятиями программирования в рамках объектной модели с применением языка С++. В первой части темы курса включают особенности применения в языке С простых типов данных, управля-ющих структур, массивов и структур данных, функций. Во второй части курса рассматриваются парадигмы объектно-ориентированного программирования, особенности построения конструкторов и деструкторов объектов, механизмы наследования и полиморфизмы, использование шаблонов, виртуальных классов и методов.<br/>Курс ставит своей целью усвоение студентами понятий, связанных с  разработ-кой ПО, и развивает базовые навыки в программировании на примере языка, поддерживающего объектно-ориентированную парадигму.</p>]]>
	</purposes>
	
	<requirements title="Требования к уровню освоения содержания дисциплины">
		<![CDATA[<p>В результате изучения студенты должны: 
Знать особенности синтаксических конструкций языка С, основные понятия объектно-ориентированного программирования и особенности их реализаций в языке С++.  
<br />Уметь проводить анализ практических задач с целью выделения и дальнейшего программирования функций, объектов и классов.
Иметь представление (навыки) организации взаимодействия функций и объектов в процессе выполнения программ, применения шаблонов функций, классов и методов классов.
</p>]]>
	</requirements>
	
	<disciplineVolume title="Объем дисциплины и виды учебной работы">
	<![CDATA[
		<p>
		<table>
		<thead>
			<tr>
				<td>Виды учебной работы</td>
				<td>Всего часов</td>
				<td>Семестры</td>
			</tr>
		</thead>
		<tbody><tr><td><b>Общая трудоемкость дисциплины</b>
				</td>
				<td>115
				</td>
				<td>2
				</td>
			</tr>
			<tr>
				<td>Аудиторные занятия
				</td>
				<td>96
				</td>
				<td> 
				</td>
			</tr>
			<tr>
				<td>Лекции
				</td>
				<td>48
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Практические занятия (ПЗ)
				</td>
				<td>48
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Семинары (С)
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Лабораторные работы (ЛР)
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Другие виды аудиторных занятий
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Самостоятельная работа
				</td>
				<td>19
				</td>
				<td>32
				</td>
			</tr>
			<tr>
				<td>Курсовой проект (работа)
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Расчетно-графическая работа
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Реферат
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Другие виды самостоятельной работы
				</td>
				<td>
				</td>
				<td>
				</td>
			</tr>
			<tr>
				<td>Вид итогового контроля (зачет, экзамен)
				</td>
				<td>
				</td>
				<td>экзамен
				</td>
			</tr>
		</tbody>
		</table><br/>
		<i>(в первой графе таблицы указываются виды аудиторных работ и самостоятельных заня-тий студентов. Во второй графе указывается общая трудоемкость дисциплины в часах в соответствии с ГОС ВПО, объем аудиторных и объем самостоятельных занятий - в соот-ветствии с примерным учебным планом. В третьей графе указываются номера семестров, в которых предусматривается каждый вид учебной работы и вид итогового контроля по дисциплине)<br/>Выше обозначенная таблица составляется отдельно для каждой из форм обучения, преду-смотренных учебным планом.
</p>
	]]>
	</disciplineVolume>
	
	<disciplineContent title="Содержание дисциплины">
		<disciplineRazdels title="Разделы дисциплины и виды занятий">
		<![CDATA[
		<p><i>(допускается название п.4.1. «Тематический план»)</i></p>
		<p>
		<table>
			<thead>
				<tr>
					<td>№п/п
					</td>
					<td>Раздел дисциплины
					</td>
					<td>Лекции
					</td>
					<td>ПЗ (или С)
					</td>
					<td>ЛР
					</td>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>1.
					</td>
					<td><i>Введение в язык </i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>2.
					</td>
					<td><i>Начала С</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>3.
					</td>
					<td><i>Организация ввода/вывода в C. Работа с фай-лами. </i> 
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>4.
					</td>
					<td><i>Указатели и массивы. Ссылки. Структуры</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>5.
					</td>
					<td><i>Функции языка C</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>6.
					</td>
					<td><i>Средства компоновки программы</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>7.
					</td>
					<td><i>Введение в ООП</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>8.
					</td>
					<td><i>Классы и объекты</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>9.
					</td>
					<td><i>Конструкторы и деструкторы</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>10.
					</td>
					<td><i>Наследование</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>11.
					</td>
					<td><i>Полиморфизм</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>12.
					</td>
					<td><i>Использование шаблонов</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
				<tr>
					<td>13.
					</td>
					<td><i>Пример: класс TSet</i>
					</td>
					<td>*
					</td>
					<td></td>
					<td></td>
				</tr>
			</tbody>
		</table><br/>
		<i>(в таблице название раздела указывается в соответствии с обязательным минимумом со-держания, изложенным в ГОС ВПО. В графах, обозначающих предусматриваемые виды за-нятий проставляется знак *)</i>
		</p>
		]]>
		</disciplineRazdels>
	
		<disciplineRazdelsContent title="Содержание разделов дисциплины">
		<![CDATA[<p><i> (указывается название каждого раздела и его содержание)</i></p>]]>
		</disciplineRazdelsContent>
		
		<topics>
		<topic level="1" title="Введение в программную инженерию" />
			<topic level="2" title="Предпосылки и история" />
			<topic level="2" title="Программная инженерия – что это такое?" />
			<topic level="2" title="Стандартизация и стандарты" />
		<topic level="1" title="Жизненный цикл программного продукта" />
			<topic level="2" title="Понятие жизненного цикла программного продукта" />
			<topic level="2" title="Определение жизненного цикла программного продукта" />
			<topic level="2" title="Модель жизненного цикла программного продукта" />
		<topic level="1" title="Управление программным проектом " />
			<topic level="2" title="Немного философии (понятия и определения)" />
			<topic level="2" title="Что должен знать менеджер проекта?" />
			<topic level="2" title="Управление командой проекта" />
			<topic level="2" title="Планирование и контроль" />
			<topic level="2" title="Средства управления проектом" />
		<topic level="1" title="Управление качеством ИТ проекта " />
			<topic level="2" title="Качество и управление качеством (экскурс в историю) "/>
			<topic level="2" title="ISO9000: система управления качеством" />
			<topic level="2" title="ISO12207: процесс управления качеством ПО" />
			<topic level="2" title="CMM: уровни зрелости процессов" />
			<topic level="2" title="ISO15504: аттестация, определение зрелости и усовершенствование процессов" />
		<topic level="1" title="CMMI – интегрированная модель возможности и зрелости процесса " />
			<topic level="2" title="Что такое модель зрелости?" />
			<topic level="2" title="Из чего состоит CMMI?" />
			<topic level="2" title="Как работает CMMI?" />
		<topic level="1" title="Дополнительные процессы создания ПП" />
			<topic level="2" title="Тестирование программного продукта " />
			<topic level="2" title="Управление требованиями, изменениями и конфигурацией" />
			<topic level="2" title="Управление рисками " />
		</topics>
	</disciplineContent>

	<labPractice title="Лабораторный практикум">
	<![CDATA[
		<p>
		<table>
			<thead>
				<tr>
				<td>№п/п</td>
				<td>№ раздела дисциплины</td>
				<td>Наименование лабораторных работ</td>
				</tr>
			</thead>
			<tbody>
				<tr>
				<td> </td>
				<td> </td>
				<td>Знакомство с С  </td>
				</tr>
				<tr>
				<td> </td>
				<td> </td>
				<td>Решение систем линейных уравнений методом Гаусса  </td>
				</tr>
				<tr>
				<td> </td>
				<td> </td>
				<td>Решение нелинейных алгебраических уравнений  </td>
				</tr>
				<tr>
				<td> </td>
				<td> </td>
				<td> Структуры хранения матриц специального типа </td>
				</tr>
				<tr>
				<td> </td>
				<td> </td>
				<td>Построение графика функции  </td>
				</tr>
				<tr>
				<td> </td>
				<td> </td>
				<td>Разработка графического редактора (факультатив) </td>
				</tr>
			</tbody>
		</table><br/>
		<i>(в случае, если лабораторный практикум не предусматривается в п.5 делается запись - «не предусмотрен»)</i>
		</p>
	]]>
	</labPractice>
	
	<disciplineMaintenance title="Учебно-методическое обеспечение дисциплины">
		<literature title="Рекомендуемая литература">
		<![CDATA[
		<p>а) основная литература:<br/>
		<ol>
			<li>	1.	Павловская Т.А. C/C++ Программирование на языке высокого уровня.</li>
			<li>	Ален И. Голуб. Правила программирования на C/C++.</li>
			<li>	Страустрап. Введение в язык С++. http://www.helloworld.ru/texts/comp/lang/c/c3/aglav.htm</li>

		</ol>
		</p>
		<p>б) дополнительная литература:<br/>
		<ol>
			<li>	Кетков Ю.Л., Кетков А.Ю., Практика программирования: Бейсик, Си, Паскаль. Само-учитель. – СПб.: БХВ-Петербург, 2002. – 480 с.</li>
			<li>	Лаптев В. С++. Экспесс-курс. – СПб.: БХВ – Петербург, 2004 – 512с. </li>
			<li>	Страустрап. Справочное руководство по C++. http://www.helloworld.ru/texts/comp/lang/c/c4/ </li>
			<li>	Липпман.C++ для начинающих. http://c-plus-plus.narod.ru/docs/books.html</li>
			<li>	Ю.Ю.Громов, С.И.Татаренко. Программирование на языке СИ: Учебное пособие. -Тамбов,1995.- 169 с. http://www.helloworld.ru/texts/comp/lang/c/c/dir.htm</li>

		</ol>
		</p>
		]]>
		</literature>
	</disciplineMaintenance>

	<questions title="Вопросы для контроля">
	<![CDATA[
	<p>	
	<ol>
<li>	Общая характеристика языка С и его характерные отличия от языка PASCAL.</li>
<li>Структура программы на языке С. Подключение библиотек, Организация ввода-вывода с помощью библиотеки iostream.</li>
<li>	Модуль в языке С. Организация многофайловой программы, заголовочные файлы, дирек-тива #include, прототипы функций.</li>
<li>	Оператор присваивания и оператор ветвления. Особенности оператора присваивания и вычисления условий в языке С. Примеры операторов присваивания и ветвления.</li>
<li>	Объявление массивов с языке С. Организация циклов. Цикл с предусловием и постуслови-ем. Цикл for и его связь с циклом while. Примеры.</li>
<li>	Оператор переключатель. Инструкция break. Примеры применения оператора переключа-теля.</li>
<li>	Числовые типы данных языка С. Целочисленные (десятичные, восьми и шестнадцатерич-ные) и действительные константы. Именованные константы и способы их задания в языке С.</li>
<li>	Перечисленный тип в языке С. Особенности, возможности и примеры его использования.</li>
<li>	Понятие блока в языке С. Объявления и инициализация переменных и массивов в С.</li>
<li>	Обзор операций языка С. Приоритеты операций. Операции низкого и высокого уровней. Примеры операций.</li>
<li>Выражения в языке С. Правила вычисления выражений. Приоритеты операций и правило ассоциативности. Приведение типов в С и С++. Операция последования (скобки).</li>
<li>Символьный тип в языке С. Символьные константы. Представление строк в С. Библиотека string. Примеры функций библиотеки string. </li>
<li>Указатели и ссылки в языке С. Константные указатели и ссылки. Операции с указателями и ссылками.</li>
<li>	Массив как указатель в языке С. Особенности индексации массива при записи кода. Мас-сив как параметр функции. Многомерные массивы.</li>
<li>	Функции в языке С. Объявление, описание и вызов. Особенности передачи параметров (по значению, ссылке, указателем, константной ссылке). Перегрузка функций и параметры по умолчанию. </li>
<li>	Функции в языке С. Встраиваемые функции и макросы. Передача функции как параметр. Функция как указатель на функцию. Массив указателей на функции. </li>
<li>	 Структуры в языке С. Объявление типа и переменных. Использование элементов структур. Вложенные структуры и массивы. Примеры построения вложенных структур и массивов.</li>
<li>	Объединения в языке С. Объявление типа и переменных. Использование элементов объ-единений. Битовые поля.</li>
<li>	Классы и типы памяти. Время жизни и область видимости объектов. Локальные и глобаль-ные объекты. Механизм управления стеком. </li>
<li>Классы и типы памяти. Время жизни и область видимости объектов. Локальные и глобаль-ные объекты. Механизм управления кучей. </li>
<li>	Форматный вывод и ввод. Функции printf и scanf библиотеки stdio.   </li>
<li>	Форматные преобразования в памяти. Функции sprintf и sscanf библиотеки stdio.   </li>
<li>	Работа с текстовыми файлами. Функции fopen, fclose, fprintf, fscanf библиотеки stdio.</li>
<li>	Работа с записеориентированными файлами. Функции fopen, fclose, fprintf, fscanf библио-теки stdio.</li>
<li>	Работа с бинарными файлами. Функции fopen, fclose, fwrite, fread, fseek библиотеки stdio.</li>
<li>	Технологические основы языков программирования высокого уровня. Структурное и мо-дульное программирование. </li>
<li>	Технологические основы языков программирования высокого уровня. Простые и сложные задачи. Причины возникновения сложности. Решение проблемы сложности задач.</li>
<li>	ООП и объектная модель. Основные принципы объектной модели.</li>
<li>	Анализ, проектирование и программирование. Объектный подход, алгоритмическая и объектно-ориентированная декомпозиция. Достоинства и недостатки ООП.</li>
<li>	Абстрактные типы данных. Понятие класса. Инкапсуляция. Объявление класса. Поля и методы. Секции public и private. Скрытие данных.</li>
<li>Объявление класса. Поля и методы. Секции public и private. Скрытие данных. Пример разработки класса “Комплексное число”. Реализация методов класса. Встроенные методы.</li>
<li>	Константные поля. Константные методы. Использование константных ссылок в списке параметров методов класса. Пример разработки класса “Комплексное число”.</li>
<li>	Способы создания объектов. Доступ к данным и методам объекта. Указатель this.</li>
<li>	Статическое и динамическое создание объектов внутри методов. Ссылки в заголовках методов. Примеры.</li>
<li>	Создание объектов. Конструкторы. Виды конструкторов.</li>
<li>	Конструктор копирования. Пример разработки конструктора копирования.</li>
<li>	Уничтожение объектов. Деструкторы.</li>
<li>	Статические поля и методы класса. Дружественные функции и классы.</li>
<li>	Пример разработки класса “Вектор”. Реализация операций без использования перегрузки.</li>
<li>	Перегрузка операций. Особенности перегрузки для унарных, бинарных операций. Пере-грузка операции [].</li>
<li>	Перегрузка операций. Перегрузка операции присваивания. Операция присваивания и кон-структор копирования.</li>
<li>Суть проблемы моделирования. Инкапсуляция, модульность и иерархия как средства ре-шения проблемы. Виды иерархий. Наследование и агрегация. Реализация агрегации в C++. Пример.</li>
<li>	Наследование в C++. Простое (одиночное) наследование. Public, private и protected-наследование. Некоторые правила наследования.</li>
<li>	Наследование в C++. Простое (одиночное) наследование. Пример последовательного про-ектирования иерархии классов геометрических фигур. Перекрытие (замещение) методов.</li>
<li>	Раннее и позднее связывание. Механизм виртуальных методов.</li>
<li>Механизм виртуальных методов. Применение виртуальных методов для разработки клас-сов “Точка” и “Круг”.</li>
<li>Чисто виртуальные методы и абстрактные классы. Абстрактный класс в примере “Геомет-рические фигуры”.</li>
<li>	Множественное наследование. Виртуальное наследование.</li>
<li>Перегрузка функций в C++. Сигнатура. Алгоритм проверки соответствия сигнатуре.</li>
<li>	Шаблоны функций. Шаблоны классов. Инстанцирование и специализация.</li>

	</ol>
	<p>	
	]]>
	</questions>
	
	<markCriterias title="Критерии оценок">
	<![CDATA[
	<p>
	<table>
		<tr>
			<td>Зачтено</td>
			<td> критерии</td>
		</tr>
		<tr>
			<td>Незачтено</td>
			<td></td>
		</tr>
	</table>
	<br/>
	<u>Примечание</u> – таблица заполняется, если формой итогового контроля предусмотрен зачет
	</p>
	<p>
	<table>
		<tr>
			<td>Превосходно</td>
			<td></td>
		</tr>
		<tr>
			<td>Отлично</td>
			<td></td>
		</tr>
		<tr>
			<td>Очень хорошо</td>
			<td></td>
		</tr>
		<tr>
			<td>Хорошо</td>
			<td></td>
		</tr>
		<tr>
			<td>Удовлетворительно</td>
			<td></td>
		</tr>
		<tr>
			<td>Неудовлетворительно</td>
			<td></td>
		</tr>
		<tr>
			<td>Плохо</td>
			<td></td>
		</tr>
	</table>
	<br/>
	<u>Примечание</u> – таблица заполняется, если  формой итогового контроля предусмотрен экзамен
	</p>
	]]>
	</markCriterias>
	
	<reporting title="Примерная тематика курсовых работ и критерии их оценки ">
	<![CDATA[<i>(в соответствии с рабочим учебным планом)</i>]]>
	</reporting>

	<additional>
	<![CDATA[
	<p>
	Программа составлена в соответствии соответствии с Государственным образовательным стандартом по специальности (направлению) «_______».
«Информационные технологии».
	</p>
	<p>
	Автор программы____<sub><i>(подпись)</i></sub>____Карпенко С.Н.<br/>Программа рассмотрена на заседании кафедры__<sub><i>(дата)</i></sub>__ протокол № __
	</p>
	<p>
	Заведующий кафедрой ___________________ Стронгин Р.Г.<br/>
	Программа одобрена методической комиссией факультета_<sub><i>(дата)_</i></sub> протокол № __<br/>
	Председатель методической комиссии___<sub><i>(подпись)</i></sub>________ Таланов В.А.
	</p>
	]]>
	</additional>
</disciplineProgram>