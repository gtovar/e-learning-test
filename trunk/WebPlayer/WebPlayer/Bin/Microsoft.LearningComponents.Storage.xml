<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.LearningComponents.Storage</name>
    </assembly>
    <members>
        <member name="T:Microsoft.LearningComponents.Storage.DatabaseNavigator">
            <summary>
            Root class for all Navigators that use the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_store">
            <summary>
            LearningStore used to read and write to the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_attemptId">
            <summary>
            Unique attempt identifier from the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_learnerId">
            <summary>
            Unique learner identifier from the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_status">
            <summary>
            Status of this Navigator.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_dirtyActivitiesBackup">
            <summary>
            backup of dirty activities, for rollback support
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_changed">
            <summary>
            Boolean that indicates whether anything in the base AttemptItem EXCEPT m_status
            has changed and thus should be saved.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_statusChanged">
            <summary>
            Boolean that indicates whether m_status has changed and thus should be saved.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_totalPointsChanged">
            <summary>
            Boolean that indicates whether m_totalPoints has changed and thus should be saved.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_packageId">
            <summary>
            Unique identifier of the package associated with this attempt.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_packageLocation">
            <summary>
            Location field from the package in the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_attemptItemInformationIsValid">
            <summary>
            Indicates whether or not the AttemptItem data has been read from the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_newAttachments">
            <summary>
            A list of new attachments that have been added to any data model, so that they may be
            saved upon Save().
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_newAttachmentsBackup">
            <summary>
            Backup of attachment data for rollback purposes
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_loggingFlags">
            <summary>
            Flags that indicate what portions of the sequencing process to log to the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_attemptStartTime">
            <summary>
            UTC Time the attempt was started
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_expandOnNextSave">
            <summary>
            True only if the attempt just ended and a Save() hasd not been performed, so that the next time
            Save() is called an automatic ExpandDataModelCache() will be performed.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_globalObjectivesBackup">
            <summary>
            Backup of changed objectives for rollback purposes
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.m_attemptEndTime">
            <summary>
            UTC Time the attempt ended
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.Reactivate">
            <summary>
            Reactivates a completed attempt.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.CloneForNavigationTest">
            <summary>
            Produces an incomplete clone sufficient for testing sequencing and navigation.
            </summary>
            <returns>A new object with enough data cloned to be viable for sequencing and navigation.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.DeleteOldExpandedDataModel(Microsoft.LearningComponents.Storage.LearningStoreJob)">
            <summary>
            Deletes all the records related to this attempt
            </summary>
            <param name="deleteJob">LearningStoreJob to use for deletions</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.QueryExpandedDataModel(Microsoft.LearningComponents.Storage.LearningStoreJob)">
            <summary>
            Queries all information needed to rebuild the xml for the data models for all activities in this attempt.
            </summary>
            <param name="job">LearningStoreJob to use for queries</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.SortByOrdinal(System.Data.DataTable,System.String)">
            <summary>
            Sorts the rows of a datatable by a number intended as an ordinal.
            </summary>
            <param name="d">The data table</param>
            <param name="columnName">The name of the column representing the ordinal value</param>
            <returns>an array of the sorted DataRows</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyActivityData(System.Data.DataTable)">
            <summary>
            Applies data rows associated with activities.
            </summary>
            <param name="d">The data table</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyObjectiveData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.Activity})">
            <summary>
            Applies data rows associated with objectives.
            </summary>
            <param name="d">The data table</param>
            <param name="activitiesByInternalId">dictionary to look up activities by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyCommentData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.Activity})">
            <summary>
            Applies data rows associated with comments.
            </summary>
            <param name="d">The data table</param>
            <param name="activitiesByInternalId">dictionary to look up activities by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyInteractionData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.Activity})">
            <summary>
            Applies data rows associated with interactions.
            </summary>
            <param name="d">The data table</param>
            <param name="activitiesByInternalId">dictionary to look up activities by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyCorrectResponseData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Interaction})">
            <summary>
            Applies data rows associated with correct response information.
            </summary>
            <param name="d">The data table</param>
            <param name="interactions">dictionary to look up interactions by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyInteractionObjectiveData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Interaction},System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Objective})">
            <summary>
            Applies data rows associated with interaction objectives.
            </summary>
            <param name="d">The data table</param>
            <param name="interactions">dictionary to look up interactions by their SQL id</param>
            <param name="objectives">dictionary to look up objectives by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyActivityExtensionData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.Activity})">
            <summary>
            Applies data rows associated with extension data associated with an activity
            </summary>
            <param name="d">The data table</param>
            <param name="activitiesByInternalId">dictionary to look up activities by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyObjectiveExtensionData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Objective})">
            <summary>
            Applies data rows associated with extension data associated with a particular objective.
            </summary>
            <param name="d">The data table</param>
            <param name="objectives">dictionary to look up objectives by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyInteractionExtensionData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Interaction})">
            <summary>
            Applies data rows associated with extension data associated with a particular interaction.
            </summary>
            <param name="d">The data table</param>
            <param name="interactions">dictionary to look up interactions by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyEvaluationCommentData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Interaction})">
            <summary>
            Applies data rows associated with evaluation comments
            </summary>
            <param name="d">The data table</param>
            <param name="interactions">dictionary to look up interactions by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyRubricData(System.Data.DataTable,System.Collections.Generic.Dictionary{System.Int64,Microsoft.LearningComponents.DataModel.Interaction})">
            <summary>
            Applies data rows associated with rubrics.
            </summary>
            <param name="d">The data table</param>
            <param name="interactions">dictionary to look up interactions by their SQL id</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ApplyExpandedDataModel(System.Collections.ObjectModel.ReadOnlyCollection{System.Object})">
            <summary>
            Applies data queried by QueryExpandedDataModel to the in memory representation
            of the data models of each activity.  This does not save the data back to the database.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ReconstituteDataModelCache">
            <summary>
            Recreates the Data Model after being deleted by <Mth>DeleteDataModelCache</Mth>.  This method is not valid
            unless the attempt has been abandoned or completed.  It may be called whether or not <Mth>DeleteDataModelCache</Mth>
            has been called, and it will always overwrite the xml data model in favor of data stored in the expanded schema.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt has not completed yet.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ExpandDataModelCache">
            <summary>
            Expands the data model xml for all activities in this attempt to all the various columns 
            and tables in the <Typ>LearningStore</Typ> that are used for reporting.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ExpandDataModelCache(Microsoft.LearningComponents.Storage.LearningStoreJob)">
            <summary>
            Expands the data model xml for all activities in this attempt to all the various columns 
            and tables in the <Typ>LearningStore</Typ> that are used for reporting.
            </summary>
            <param name="job">LearningStoreJob to use for the record deletions and writes.</param>
            <remarks>This method assumes that the caller is responsible for transaction handling.  A Serializable 
            transaction is recommended for callers.</remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.DeleteDataModelCache">
            <summary>
            Removes the xml version of the data model for all activities in this attempt.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ConvertLearningStoreXmlToXPathNavigator(Microsoft.LearningComponents.Storage.LearningStoreXml,System.Boolean)">
            <summary>
            Converts a column of xml data from <Typ>LearningStore</Typ> to an <Typ>XPathNavigator</Typ>.
            </summary>
            <param name="xml">The raw column object.</param>
            <param name="readOnly">Whether or not the <Typ>XPathNavigator</Typ> created should be read-only.</param>
            <returns>A new <Typ>XPathNavigator</Typ>, or null if the column is null.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.UpdateStatus(Microsoft.LearningComponents.NavigationCommand,System.Boolean)">
            <summary>
            Updates the attempt status based on data in the activity tree.
            </summary>
            <param name="command">The navigation command that was just performed successfully.</param>
            <param name="shouldExit">True if the attempt is being exited.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.CreateCommentsFromLms(System.Data.DataTable)">
            <summary>
            Creates an xml block of comments from LMS, or null if there are no comments.
            </summary>
            <param name="commentData">A DataTable from the database containing the comments.</param>
            <returns>An XPathNavigator with valid LMS comments, or null</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.WrapAttachment(System.Byte[],System.Int64)">
            <summary>
            Wraps an attachment in a class that will also provide a GUID.
            </summary>
            <param name="bytes">The bytes of the attachment to wrap.</param>
            <param name="internalActivityId">Internal activity id used when saving attachments to the database.</param>
            <returns>A new representation of the attachment.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.WrapAttachmentGuid(System.Guid,System.Int64)">
            <summary>
            Provides a standard interface for accessing a GUID like an attachment
            </summary>
            <param name="guid">The guid of the attachment stored in the database.</param>
            <param name="internalActivityId">Internal activity id used when saving attachments to the database.</param>
            <returns>A representation of the attachment.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.LoadActivityTree">
            <summary>
            Loads the entire activity tree from the database, if it is not already in memory.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.LoadAllDataModelData">
            <summary>
            Loads all the data model data for 
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.LoadFullActivityTree">
            <summary>
            Loads the entire activity tree including all data model information from the database.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.LoadLearningDataModel">
            <summary>
            Loads data for the current activity and its data model into memory.  If this data
            is already in memory, this call does nothing.
            </summary>
            <remarks>
            This method and <Mth>LoadActivityTree</Mth> (and <Mth>CreateExecuteNavigator</Mth>, which is 
            equivalent) are the only two methods that load Navigator data from the database.  This method
            specifically does not load the entire activity tree, and a subsequent call to LoadActivityTree
            will still result in a database access.  The reverse is not true - if LoadActivityTree is called
            first, this method will do nothing.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.UpdateCurrentActivityData">
            <summary>
            Loads the information about the current activity that would not have been read if
            the activity had not been the "current" activity previously.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.UpdateActivityData(Microsoft.LearningComponents.Activity)">
            <summary>
            Loads information about the specified activity that is not vital to sequencing
            but it necessary for an activity to be delivered.
            </summary>
            <param name="activity">Activity to update.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.Save">
            <summary>
            Saves any data that has been changed to the database, if necessary.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.PendingCommitClearDirtyIndicators">
            <summary>
            Clear all indicators saying we are dirty, but save data so it can be rolled back
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ClearDirtyIndicators">
            <summary>
            Clear all indicators saying we are dirty
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.RollbackDirtyIndicators">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ReadGlobalObjectiveFromLearningStore(System.String)">
            <summary>
            Reads the global objective information from LearningStore.
            </summary>
            <param name="globalObjective">Name of the global objective.  Null is not allowed.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ReadGlobalObjectiveSatisfiedStatus(System.String,System.Boolean@)">
            <summary>
            Reads the Satisfied Status of the global objective specified, if any.
            </summary>
            <param name="globalObjective">Name of the global objective, if any.</param>
            <param name="satisfied">Where the result is stored, if it is read.</param>
            <returns>True if data was read, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.ReadGlobalObjectiveNormalizedMeasure(System.String,System.Single@)">
            <summary>
            Reads the Normalized Measure of the global objective specified, if any.
            </summary>
            <param name="globalObjective">Name of the global objective, if any.</param>
            <param name="measure">Where the result is stored, if it is read.</param>
            <returns>True if data was read, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.WriteGlobalObjectives(Microsoft.LearningComponents.Activity)">
            <summary>
            Writes the global objective information for all objectives associated with this activity, if any.
            </summary>
            <param name="activity">The activity whose objectives to save.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.DemandSessionRight(Microsoft.LearningComponents.Storage.LearningStoreJob)">
            <summary>
            Adds operations to the job that demands the right for a session, and then
            disables security checks for the rest of the job
            </summary>
            <param name="job">The job to which the operations should be added.</param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.AttemptStartTime">
            <summary>
            Gets the UTC time the attempt was started
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.AttemptEndTime">
            <summary>
            Gets the UTC time the attempt ended
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt has not yet ended.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.CurrentActivity">
            <summary>
            Gets or sets the current activity of the navigator.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.PackageFormat">
            <summary>
            Gets the SCORM version of the schema associated with this attempt.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.LoggingFlags">
            <summary>
            Gets or sets flags that indicate what portions of the sequencing process to log to the database.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.TotalPoints">
            <summary>
            Gets or sets total points for the entire activity tree.
            </summary>
            <remarks>
            <para>
            This value is designed to be set automatically by the data model when
            appropriate.  Setting it in other conditions will result in unknown results.
            </para><para>
            This value is only null if it has never been set.  Once any data model updates this
            value, it will never return to null value.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.CompletionStatus">
            <summary>
            Gets or sets completion status for the entire activity tree.
            </summary>
            <remarks>
            <para>
            This value is designed to be set automatically by the data model when
            appropriate.  Setting it in other conditions will result in unknown results.
            </para><para>
            This value is only valid in SCORM 2004 packages.  Before being set or in other packages,
            this value will be CompletionStatus.Unknown.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.SuccessStatus">
            <summary>
            Gets or sets success status for the entire activity tree.
            </summary>
            <remarks>
            <para>
            This value is designed to be set automatically by the data model when
            appropriate.  Setting it in other conditions will result in unknown results.
            </para><para>
            This value is only valid in SCORM 2004 packages.  Before being set or in other packages,
            this value will be SuccessStatus.Unknown.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.Status">
            <summary>
            Gets the status of this Navigator.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.LearnerId">
            <summary>
            Gets the unique learner identifier associated with this Navigator.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.AttemptId">
            <summary>
            Gets the unique attempt identifier associated with this Navigator.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.PackageId">
            <summary>
            Gets the unique identifier of the package associated with this attempt.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.DatabaseNavigator.PackageLocation">
            <summary>
            Gets the location field from the package in the database.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.DatabaseNavigator.NavigatorEnlistment">
            <summary>
            Class to handle enlistment in parent transactions properly
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent">
            <summary>
            Represents a single entry in the log of sequencing events.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.m_eventType">
            <summary>
            The type of event that caused this log entry.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.m_message">
            <summary>
            The text message of the log entry.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.m_command">
            <summary>
            The navigation command that caused this event.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.m_timeStamp">
            <summary>
            Time at which this log entry was created.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.m_activityId">
            <summary>
            The id of the activity that is active after this log entry was created.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigator.LogEvent.#ctor(Microsoft.LearningComponents.SequencingEventType,Microsoft.LearningComponents.NavigationCommand,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,System.String)">
            <summary>
            Initializes a LogEvent.
            </summary>
            <param name="eventType"></param>
            <param name="command"></param>
            <param name="activityId"></param>
            <param name="message"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.#ctor(Microsoft.LearningComponents.Storage.LearningStore,System.Int64)">
            <summary>
            Initializes a new <Typ>RandomAccessNavigator</Typ> object.
            </summary>
            <param name="store">A <Typ>LearningStore</Typ> object that references the database to use.</param>
            <param name="attemptId">The unique identifier of the attempt item in the database.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.Reactivate">
            <summary>
            Reactivates a completed attempt.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.IsValidForReview(Microsoft.LearningComponents.Activity)">
            <summary>
            Determines whether this activity is valid to be reviewed.
            </summary>
            <param name="activity">The activity to check.</param>
            <returns>Whether or not this activity is valid to be reviewed.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.LoadLearningDataModel">
            <summary>
            Loads data for the current activity and its data model into memory.  If this data
            is already in memory, this call does nothing.
            </summary>
            <remarks>
            This method and <Mth>LoadActivityTree</Mth> (and <Mth>CreateExecuteNavigator</Mth>, which is 
            equivalent) are the only two methods that load Navigator data from the database.  This method
            specifically does not load the entire activity tree, and a subsequent call to LoadActivityTree
            will still result in a database access.  The reverse is not true - if LoadActivityTree is called
            first, this method will do nothing.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.LoadActivityTree">
            <summary>
            Loads the entire activity tree from the database, if it is not already in memory.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.LoadTableOfContents(System.Boolean)">
            <summary>
            Loads the table of contents into memory and verifies which elements are valid to navigate to.
            </summary>
            <param name="evaluateSequencingRules">This parameter has no affect on this type of navigator,
            because all activities with resources are always valid to navigate to.</param>
            <returns>The root table of contents element.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.IsNavigationValid(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Determines if the passed navigation command is valid to execute or not.
            </summary>
            <param name="command">The navigation command to test.</param>
            <returns>True if the navigation would succeed, false otherwise.</returns>
            <exception cref="T:Microsoft.LearningComponents.LearningComponentsInternalException">The command passed is not a valid enumeration value, or is not equal to NavigationCommand.Continue or NavigationCommand.Previous.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.IsNavigationToValid(System.String)">
            <summary>
            Determines if a choice navigation to the activity identified by the string identifier passed will succeed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.IsNavigationToValid(System.Int64)">
            <summary>
            Determines if a choice navigation to the activity identified by the unique identifier passed will succeed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.ReadGlobalObjectivesAsNecessary">
            <summary>
            Reads global objective information when the activity is to be "delivered".
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.Navigate(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Performs a Continue or Previous navigation command.  Any other command will throw.
            </summary>
            <param name="command">Navigation command to execute.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:Microsoft.LearningComponents.LearningComponentsInternalException">The command passed is not a valid enumeration value, or is not equal to NavigationCommand.Continue or NavigationCommand.Previous.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.NavigateTo(System.String)">
            <summary>
            Performs a choice navigation to the activity identified by the string identifier passed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.NavigateTo(System.Int64)">
            <summary>
            Performs a choice navigation to the activity identified by the unique identifier passed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.Save">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ReviewNavigator.ProcessDataModelNavigation">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.AtLeastOneOutputColumnMustBeSpecified">
            <summary>
              Looks up a localized string similar to At least one output column must be specified in the query..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.AtLeastOneValueMustBeProvided">
            <summary>
              Looks up a localized string similar to At least one value must be provided..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.CannotChangeIdProperty">
            <summary>
              Looks up a localized string similar to Property &apos;Id&apos; can not be changed..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ColumnAlreadyExistsInQuery">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; has already been added to the query.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ColumnAlreadySortedOn">
            <summary>
              Looks up a localized string similar to A sort order for the specified column already exists in the query..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ColumnCannotBeSorted">
            <summary>
              Looks up a localized string similar to Column can not be sorted on..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ColumnNotFound">
            <summary>
              Looks up a localized string similar to Column &apos;{0}&apos; not found in the view..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.CompleteAlreadyCalled">
            <summary>
              Looks up a localized string similar to Method has already been called..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.DebugLogAlreadyEnabled">
            <summary>
              Looks up a localized string similar to The debug log has already been enabled..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.DuplicatePropertyValue">
            <summary>
              Looks up a localized string similar to More than one value has been provided for property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.EnumTypeNotFoundInSchema">
            <summary>
              Looks up a localized string similar to Enum type &apos;{0}&apos; not found in the schema..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.IncompatibleEngineVersion">
            <summary>
              Looks up a localized string similar to The database was created by a different version of this product..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidConditionOperatorForGuidColumn">
            <summary>
              Looks up a localized string similar to Invalid condition operator: a Guid column can only be compared with an equality or inequality operator..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidConditionValueForXmlColumn">
            <summary>
              Looks up a localized string similar to Invalid condition value: an Xml column can only be compared against null..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidConditionValueWithDescription">
            <summary>
              Looks up a localized string similar to Invalid condition value: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidIdConditionValue">
            <summary>
              Looks up a localized string similar to Invalid condition value: only item identifiers with unique keys can be compared against..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidIdParameterValue">
            <summary>
              Looks up a localized string similar to Invalid parameter value: only item identifiers with unique keys can be used as parameters..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidOperatorForNullConditionValue">
            <summary>
              Looks up a localized string similar to Invalid condition operator: null can only be compared with an equality or inequality operator..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidParameterValue">
            <summary>
              Looks up a localized string similar to Invalid value for parameter &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidParameterValueWithDescription">
            <summary>
              Looks up a localized string similar to Invalid parameter value: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidParameterValueWithDescriptionAndName">
            <summary>
              Looks up a localized string similar to Invalid value for parameter &apos;{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidPropertyValue">
            <summary>
              Looks up a localized string similar to Invalid value for property &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidPropertyValueWithDescription">
            <summary>
              Looks up a localized string similar to Invalid value for property &apos;{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidSchemaDefinition">
            <summary>
              Looks up a localized string similar to Invalid schema definition.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.InvalidScopeNesting">
            <summary>
              Looks up a localized string similar to Invalid transaction scope nesting..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ItemNotFound">
            <summary>
              Looks up a localized string similar to Item not found.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ItemTypeNotFoundInSchema">
            <summary>
              Looks up a localized string similar to Item type &apos;{0}&apos; not found in the schema..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.MismatchedIsolationLevel">
            <summary>
              Looks up a localized string similar to Isolation level specified for the transaction doesn&apos;t match the isolation level for the currently-existing transaction..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.MoreThanOneItemFoundInAddOrUpdate">
            <summary>
              Looks up a localized string similar to More than one item matches the properties in the AddOrUpdateItem command..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.NullReferenceWhenAccessingDatabase">
            <summary>
              Looks up a localized string similar to Object reference not set to an instance of an object when attempting to access database.  Database connection may have been lost..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.OperationFailedBecauseOfConstraintViolation">
            <summary>
              Looks up a localized string similar to The operation failed because of a constraint violation..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ParameterNotFound">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; not found in the view..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ParameterNotFoundInRight">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; not found in the right..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.PositiveValueExpected">
            <summary>
              Looks up a localized string similar to Positive value expected.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.PropertyNotFound">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.PropertyValueNotFound">
            <summary>
              Looks up a localized string similar to Value for property &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.QueryNotCompatibleWithStore">
            <summary>
              Looks up a localized string similar to The query is not compatible with this LearningStore instance..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ResultsOfJobCanNotBeCast">
            <summary>
              Looks up a localized string similar to The results of the job can not be cast to the specified return value..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.RightNotFoundInSchema">
            <summary>
              Looks up a localized string similar to Right &apos;{0}&apos; not found in the schema..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ScopeDisposedInInvalidThread">
            <summary>
              Looks up a localized string similar to Transaction scope disposed in invalid thread..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.SecurityCheckFailed">
            <summary>
              Looks up a localized string similar to Security check failed..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.TimeoutMustBeZero">
            <summary>
              Looks up a localized string similar to Timeout value specified for the transaction must be zero..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.TransactionAlreadyExists">
            <summary>
              Looks up a localized string similar to A transaction already exists in this scope..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.UniqueKeyNotAvailable">
            <summary>
              Looks up a localized string similar to Unique key not available..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueCannotBeNull">
            <summary>
              Looks up a localized string similar to Cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueCausesInvalidCast">
            <summary>
              Looks up a localized string similar to Invalid cast..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueCausesOverflow">
            <summary>
              Looks up a localized string similar to Overflow..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueHasInvalidFormat">
            <summary>
              Looks up a localized string similar to Invalid format..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeByteArray">
            <summary>
              Looks up a localized string similar to Must be a System.Byte array..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeGuid">
            <summary>
              Looks up a localized string similar to Must be a Guid..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeItemIdentifier">
            <summary>
              Looks up a localized string similar to Must be a LearningStoreItemIdentifier with ItemType &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeValidEnumValue">
            <summary>
              Looks up a localized string similar to Must be a valid value from &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeWithinSqlDateTimeRange">
            <summary>
              Looks up a localized string similar to Must be between SqlDateTime.MinValue and SqlDateTime.MaxValue..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ValueMustBeXml">
            <summary>
              Looks up a localized string similar to Must be a LearningStoreXml..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.ViewNotFoundInSchema">
            <summary>
              Looks up a localized string similar to View &apos;{0}&apos; not found in the schema..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreStrings.XmlPropertyCannotBeSearchedOn">
            <summary>
              Looks up a localized string similar to Cannot search on XML property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreXml">
            <summary>
            Represents XML data contained in a store
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreXml.m_sqlxml">
            <summary>
            Xml data
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreXml.#ctor(System.Data.SqlTypes.SqlXml)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreXml</Typ> class.
            </summary>
            <param name="xml">Data to be contained in the instance.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreXml.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreXml.CreateAndLoad(System.Xml.XmlReader)">
            <summary>
            Creates a new instance of the <Typ>LearningStoreXml</Typ> class and loads some
            XML data into it.
            </summary>
            <returns>A new <Typ>LearningStoreXml</Typ></returns>
            <param name="reader"><Typ>/System.Xml.XmlReader</Typ> containing the XML
                data to be read into the object.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="reader"/> is a null reference.</exception>
            <example>
            The following code creates a <Typ>LearningStoreXml</Typ> object from
            an XmlDocument:
            <code language="C#">
            XmlNodeReader reader = new XmlNodeReader(document);
            LearningStoreXml xml = LearningStoreXml.CreateAndLoad(reader);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreXml.CreateReader">
            <summary>
            Creates a new <Typ>/System.Xml.XmlReader</Typ> that can be used to read the
            XML data.
            </summary>
            <returns>A <Typ>/System.Xml.XmlReader</Typ> that can read the data
                stored in this object.</returns>
            <example>
            The following code loads the data from a <Typ>LearningStoreXml</Typ>
            object into an XmlDocument:
            <code language="C#">
            XmlDocument document = new XmlDocument();
            document.Load(learningStoreXml.CreateReader());
            </code>
            </example>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreXml.SqlXml">
            <summary>
            The internal SqlXml object
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.SqlDataReaderHelpers">
            <summary>
            A set of helpers that can read LearningStore-specific information
            from a LogableSqlCommand
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SqlDataReaderHelpers.ReadItemIdentifierColumns(Microsoft.LearningComponents.Storage.LogableSqlCommand,System.Int32@,Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Create a LearningStoreItemIdentifier from some data within a row of a
            LogableSqlCommand
            </summary>
            <param name="command">The LogableSqlCommand.  The current position is
                not modified.</param>
            <param name="startingColumn">The index of the first column to be
                examined.  On exit, this index contains the last column examined
                plus one.</param>
            <param name="itemType">Information about the identifier type to be
                created.</param>
            <returns>The<Typ>LearningStoreItemIdentifier</Typ>, or null if
                a value is not found.</returns>
            <remarks>Only examines one column.  Assumes that the column contains
                an int64 value, containing the key of the Id.  If the column is
                non-null, a LearningStoreItemIdentifier is returned.  If the
                column is null, null is returned.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SqlDataReaderHelpers.ReadXmlColumns(Microsoft.LearningComponents.Storage.LogableSqlCommand,System.Int32@)">
            <summary>
            Create a LearningStoreXml from some data within a row of a
            LogableSqlCommand
            </summary>
            <param name="command">The LogableSqlCommand.  The current position is
                not modified.</param>
            <param name="startingColumn">The index of the first column to be
                examined.  On exit, this index contains the last column examined
                plus one.</param>
            <returns>The <Typ>LearningStoreXml</Typ>, or null if a 
                value is not found.</returns>
            <remarks>Only examines one column.  Assumes that the column contains
                an XML value.  If the column is non-null, a LearningStoreXml
                is returned.  If the column is null, null is returned.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SqlDataReaderHelpers.ReadItemIdentifierResult(Microsoft.LearningComponents.Storage.LogableSqlCommand,Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Create a LearningStoreItemIdentifier from a result within a LogableSqlCommand
            </summary>
            <param name="command">The LogableSqlCommand.  On exit, the entire
                current result has been read.</param>
            <param name="itemType">Information about the item type that should be read.</param>
            <returns>The<Typ>LearningStoreItemIdentifier</Typ></returns>
            <remarks>Assumes that the result has one rows.  Assumes that the
                columns within the row contain exactly the correct data
                for the <Mth>ReadItemIdentifierColumns</Mth> method.</remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SqlDataReaderHelpers.ReadDataTableResult(Microsoft.LearningComponents.Storage.LogableSqlCommand,System.Collections.Generic.IList{Microsoft.LearningComponents.Storage.LearningStoreViewColumn},System.Globalization.CultureInfo)">
            <summary>
            Create a DataTable from a result within a LogableSqlCommand
            </summary>
            <param name="command">The LogableSqlCommand.  On exit, the entire
                result has been read.</param>
            <param name="columns">List of columns that should be read into
                the table.</param>
            <param name="locale">Locale for the DataTable</param>
            <returns>The DataTable</returns>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader">
            <summary>
            Represents a reader of a SCORM package that has been stored in the file system after being added into 
            LearningStore. The reader accesses files for one package. The related PackageStore manages all the packages
            in a LearningStore.
            </summary>
            <remarks>This class reads manifest information from LearningStore and package files from 
            the file system in order to read any file represented in the package.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.#ctor(System.String,Microsoft.LearningComponents.Storage.FileSystemPackageStore,Microsoft.LearningComponents.Storage.PackageItemIdentifier,System.String,Microsoft.LearningComponents.ImpersonationBehavior)">
            <summary>
            Constructor.
            </summary>
            <param name="packageBasePath">The absolute path to the location where the packages 
            are located in the filesystem.</param>
            <param name="packageStore">The PackageStore that contains information about the package.</param>
            <param name="packageId">The package id of the package to load.</param>
            <param name="packageLocation">The location of the package, as defined in 
            LearningStore PackageItem.Location column. This cannot be null.</param>
            <param name="impersonationBehavior">The user who has access to the file system related to the store.</param>
            <remarks></remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by this object
            </summary>
            <param name="disposing">True if this method was called from
               <Typ>/System.IDisposable.Dispose</Typ></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.GetFileStream(System.String)">
            <summary>
            Return a file located at the specified package-relative path.
            </summary>
            <param name="relativePath">The package-relative path to the file in the package.</param>
            <returns></returns>
            <remarks>
            <para>This method reads files from the file system. It combines the path
            information with the basePath value to determine the file location.
            </para>
            </remarks>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown if <paramref name="relativePath"/> 
            contains a reference to a directory that does not exist.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if <paramref name="relativePath"/> 
            contains a reference to a file that does not exist.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.FileExists(System.String)">
            <summary>
            Return true if a file exists at a specific location within the package.
            </summary>
            <param name="relativePath">The package-relative path to the requested file.</param>
            <returns>True if the package exists.</returns>
            <exception cref="T:System.ArgumentException">Returned if the relativePath is null or empty or
            is not a relative path.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.GetFilePaths">
            <summary>
            Gets the collection of file paths in the package.
            </summary>
            <returns>Collection of file paths in the package.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStoreReader.TransmitFile(System.String,System.Web.HttpResponse)">
            <summary>
            When possible, writes the file directly to the response.
            </summary>
            <param name="filePath"></param>
            <param name="response"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ExecuteNavigator">
            <summary>
            Implements a <c>Navigator</c> that uses the database and executes an attempt.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.#ctor">
            <summary>
            Initializes an <c>ExecuteNavigator</c> object.
            </summary>
            <remarks>
            This is only used by the static <Mth>CreateExecuteNavigator</Mth> method.  It should be kept private
            to avoid it being called by external callers who may not initialize the other fields as necessary.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.#ctor(Microsoft.LearningComponents.Storage.LearningStore,System.Int64)">
            <summary>
            Initializes a new <Typ>ExecuteNavigator</Typ> object.
            </summary>
            <param name="store">A <Typ>LearningStore</Typ> object that references the database to use.</param>
            <param name="attemptId">The unique identifier of the attempt item in the database.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.IsValidForAutoGrading(Microsoft.LearningComponents.Activity)">
            <summary>
            Determines whether this activity is valid to be auto-graded.
            </summary>
            <param name="activity">The activity to check.</param>
            <returns>Whether or not this activity is valid to be auto-graded.</returns>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.ExecuteNavigator.m_autoGradingMode">
            <summary>
            Set to true when auto-grading mode is active.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.Reactivate">
            <summary>
            Reactivates a completed attempt.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.BeginAutoGradingMode">
            <summary>
            Begins auto grading mode for a completed or abandoned attempt.
            </summary>
            <remarks>
            <para>
            Calling BeginAutoGradingMode() when AttemptStatus is Abandoned or Complete will cause the effective 
            "Current Activity" to be equal to the left most activity in the tree that has a resource attached 
            to it.  At this point, calling Navigate(NavigationCommand.Continue) or 
            Navigate(NavigationCommand.Previous) will move to the next/previous activities that have a resource 
            without regard to any sequencing, making that activity the current one and allowing access to that 
            activity's data model.  No changes to the data model will affect any sequencing done in 
            auto-grading mode, nor will they be rolled up [NOTE: The justification for this is that autograding 
            is only applicable to LRM activities, which are SCORM 1.2, and thus don't have rollup anyway].  No 
            other navigation command (including choice navigation) is valid in auto-grading mode.  
            </para>
            <para>
            If Navigate(NavigationCommand.Continue) or Navigate(NavigationCommand.Previous) moves beyond either 
            end of the activity tree while in auto grading mode, a SequencingException will occur.
            </para>
            <para>
            Calling Save() while in auto-grading mode will result in an InvalidOperationException.  
            EndAutoGradingMode() must be called prior to a Save().
            </para>
            <para>
            It is perfectly permissable to call BeginAutoGradingMode() multiple times, as long as EndAutoGradingMode() 
            is called after each one.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the Status of the attempt is Active or Suspended, or if BeginAtuoGradingMode() has already been called.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.EndAutoGradingMode">
            <summary>
            Ends auto-grading mode for this attempt.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if auto-grading mode is not active for this attempt.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.AddActivities(System.Data.DataTable,System.Int64,System.String,System.String,Microsoft.LearningComponents.AudioCaptioning,System.Single,System.Single)">
            <summary>
            Adds all the activities to the navigator, and performs initial setup.
            </summary>
            <param name="d">DataTable containing the activities to add.</param>
            <param name="rootActivityId">Root activity identifier.</param>
            <param name="learnerName">Name of the learner.</param>
            <param name="learnerLanguage">Preferred language used by the learner.</param>
            <param name="learnerCaption">Preferred captioning setting used by the learner.</param>
            <param name="learnerAudioLevel">Preferred audio level setting for the learner.</param>
            <param name="learnerDeliverySpeed">Preferred delivery speed for the learner.</param>
            <remarks>
            This is only called by ExecuteNavigator().  Removed from the middle of that function to get
            FxCop to shut up.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.CreateExecuteNavigator(Microsoft.LearningComponents.Storage.LearningStore,System.Int64,System.Int64,Microsoft.LearningComponents.Storage.LoggingOptions)">
            <summary>
            Creates a new <Typ>ExecuteNavigator</Typ> object in memory and its representation in the database.
            </summary>
            <param name="store">A <Typ>LearningStore</Typ> object that references the database to use.</param>
            <param name="rootActivityId">The database identifier for the root activity (i.e. organization) of the activity tree to attempt.</param>
            <param name="learnerId">The database identifier for the learner information.</param>
            <param name="loggingFlags">Flags specifying which actions to log.</param>
            <returns>A new <Typ>ExecuteNavigator</Typ> object.</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if the learner ID or root activity ID is invalid, or if the package information cannot be found.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.LoadActivityTreeAndCheckStatus">
            <summary>
            Loads the entire activity tree from the database, if it is not already in memory.
            </summary>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.SetupTocSubtree(Microsoft.LearningComponents.Activity,System.Boolean)">
            <summary>
            Recursively sets up a subtree within an activity tree.
            </summary>
            <param name="activity">Root of the subtree.</param>
            <param name="evaluateSequencingRules"><c>True</c> to evaluate sequencing rules when determining
            which elements are valid to navigate to.  <c>False</c> to determine which elements are valid
            to navigate to using only the static data in the manifest.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.LoadTableOfContents(System.Boolean)">
            <summary>
            Loads the table of contents into memory and verifies which elements are valid to navigate to.
            </summary>
            <param name="evaluateSequencingRules"><c>True</c> to evaluate sequencing rules when determining
            whih elements are valid to navigate to.  <c>False</c> to determine which elements are valid
            to navigate to using only the static data in the manifest.</param>
            <returns>The root table of contents element.</returns>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.IsNavigationValid(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Determines if the passed navigation command is valid to execute or not.
            </summary>
            <param name="command">The navigation command to test.</param>
            <returns>True if the navigation would succeed, false otherwise.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The command passed is not a valid enumeration value, or is equal to NavigationCommand.Choose.</exception>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.IsNavigationToValid(System.String)">
            <summary>
            Determines if a choice navigation to the activity identified by the string identifier passed will succeed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.IsNavigationToValid(System.Int64)">
            <summary>
            Determines if a choice navigation to the activity identified by the unique identifier passed will succeed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.Navigate(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Performs any navigation request, except for Choice navigation.
            </summary>
            <param name="command">Navigation command to execute.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The command passed is not a valid enumeration value, or is equal to NavigationCommand.Choose.</exception>
            <exception cref="T:System.InvalidOperationException">The attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.NavigateTo(System.String)">
            <summary>
            Performs a choice navigation to the activity identified by the string identifier passed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.InvalidOperationException">The destination passed is not a valid activity in this activity tree, or
            the attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.NavigateTo(System.Int64)">
            <summary>
            Performs a choice navigation to the activity identified by the unique identifier passed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.InvalidOperationException">The destination passed is not a valid activity in this activity tree, or
            the attempt status is not valid for this call, or the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.ProcessDataModelNavigation">
            <summary>
            Performs a navigation operation based on the data model of the current activity, if one is specified.
            </summary>
            <returns>True if a navigation request was executed.</returns>
            <remarks>This method may result in one of several navigation requests being executed: ExitAll, SuspendAll, 
            Choice, Continue, and Previous are those supported by ADL, but a direct assignment to NavigationRequest.Command 
            may allow more.  If an ExitMode is set, this always overrides a NavigationRequest.Command.  Setting
            ExitMode to ExitMode.Suspend will result in a change of state for the current activity, but does not actually 
            perform any navigation, and false is returned in this case.</remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid or there is no current activity.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExecuteNavigator.Save">
            <summary>
            Saves any data that has been changed to the database, if necessary.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.StoredLearningSession">
            <summary>
            Represents a learning session that persists information in LearningStore. 
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.#ctor(Microsoft.LearningComponents.Storage.ExecuteNavigator,Microsoft.LearningComponents.Storage.PackageStore)">
            <summary>
            Create a StoredLearningSession using an existing Navigator object. This constructor
            does minimal work, it simply stores values.
            </summary>
            <param name="nav">The navigator for the session.</param>
            <param name="packageStore">The package to read from.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.#ctor(Microsoft.LearningComponents.SessionView,Microsoft.LearningComponents.Storage.AttemptItemIdentifier,Microsoft.LearningComponents.Storage.PackageStore)">
            <summary>
            Access a LearningSession that is based on a user's attempt of the the content. The attempt must 
            already have been started (<Mth>Start</Mth>) in order to use this constructor.
            </summary>
            <param name="view">The view which will be shown of the attempt. Valid values are: Execute, 
            Review and RandomAccess. 
            </param>
            <param name="attemptId">The LearningStore identifier of the attempt for the session.</param>
            <param name="packageStore">The package store that contains the package files of the 
            package related to the attempt.</param>
            <remarks>
            <p/>If an <paramref name="attemptId"/> is passed to this constructor that does not represent a 
            valid attempt, this method may not throw an exception. Instead, the first time the attempt is 
            accessed in LearningStore, that method or property will throw the exception.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the <paramref name="view"/> does not 
            represent a valid view for the session, of if <paramref name="attemptId"/> is not a positive value.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if a <paramref name="packageStore"/> or 
            <paramref name="attemptId"/> is not provided.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.CreateAttempt(Microsoft.LearningComponents.Storage.PackageStore,Microsoft.LearningComponents.Storage.UserItemIdentifier,Microsoft.LearningComponents.Storage.ActivityPackageItemIdentifier,Microsoft.LearningComponents.Storage.LoggingOptions)">
            <summary>
            Create an attempt on a specific package. The package must have already been 
            added to LearningStore. Following this method, <Mth>Start</Mth> 
            or <Mth>MoveToActivity</Mth> must be called in order to 
            deliver the first activity.
            </summary>
            <param name="packageStore">The store which contains files from the package associated
            with the attempt.</param>
            <param name="learnerId">The learner who is starting the attempt.</param>
            <param name="rootActivityId">The LearningStore id of the organization (ie, root activity) 
            to be attempted.
            </param>
            <param name="loggingOptions">Value to indicate the level of logging requested
            during an attempt.
            </param>
            <returns>Returns a session representing the new attempt. The <c>AttemptStatus</c>
            of the session will be Active. 
            </returns>
            <remarks>
            This method adds attempt information to LearningStore. 
            <p/>After creating the attempt, the caller must call <Mth>Start</Mth> 
            or <Mth>MoveToActivity</Mth> to identify the first
            activity for delivery.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when 
            <paramref name="packageStore"/>, <paramref name="learnerId"/> or <paramref name="rootActivityId"/> parameters
            are null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="loggingOptions"/>
            does not contain a valid value.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if the <paramref name="learnerId"/> or 
            <paramref name="rootActivityId"/> do not represent valid objects in LearningStore.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.CreateAttempt(Microsoft.LearningComponents.Storage.PackageStore,Microsoft.LearningComponents.Storage.UserItemIdentifier,Microsoft.LearningComponents.Storage.ActivityPackageItemIdentifier)">
            <summary>
            Create an attempt on a specific package. The package must have already been 
            added to LearningStore. Following this method, <Mth>Start</Mth> must be called in order to 
            deliver the first activity. This method does not provide logging information for the session.
            </summary>
            <param name="packageStore">The store which contains files from the package associated
            with the attempt.</param>
            <param name="learnerId">The learner who is starting the attempt.</param>
            <param name="rootActivityId">The LearningStore id of the organization (ie, root activity) 
            to be attempted.
            </param>
            <returns>Returns a session representing the new attempt. The <c>AttemptStatus</c>
            of the session will be Active. 
            </returns>
            <remarks>
            This method adds attempt information to LearningStore. 
            <p/>After creating the attempt, the caller must call <Mth>Start</Mth> to identify the first
            activity for delivery.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when 
            <paramref name="packageStore"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the <paramref name="learnerId"/> or 
            <paramref name="rootActivityId"/> do not represent valid objects.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Start">
            <summary>
            Start the attempt associated with this session without taking special action to identify 
            an activity for delivery.
            </summary>
            <remarks>
            In order to navigate within a session, the attempt must be started. An attempt is started when the 
            first activity is identified for delivery.
            
            <p/>This method does not save the state of the session. The application should call 
            <Mth>CommitChanges</Mth> after calling this method and before disposing the session object
            to save the session state in long-term storage.
            
            <p/>This method only uses sequencing rules to determine the first activity. 
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt is not active (that
            is, <Prp>AttemptStatus</Prp> is not AttemptStatus.Active, or if the attempt has 
            already started.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Start(System.Boolean)">
            <summary>
            Start the attempt associated with this session.
            </summary>
            <param name="ensureInitialActivity">If true, this method will attempt to select an initial activity 
            for delivery even if the default sequencing rules in the package do not select one. 
            If false, only the sequencing rules within the package will be used to attempt to select an 
            initial activity for the session. If this does not result 
            in identifying an activity for delivery, the application will need to select one using the 
            <Mth>MoveToActivity</Mth> method in order to start the session.</param>
            <remarks>
            In order to navigate within a session, the attempt must be started. An attempt is started when the 
            first activity is identified for delivery.
            
            <p/>This method does not save the state of the session. The application should call 
            <Mth>CommitChanges</Mth> after calling this method and before disposing the session object
            to save the session state in long-term storage.
            
            
            <p/>If the application passes <paramref name="ensureInitialActivity"/> as true, indicating 
            the session will attempt to determine the first activity even if the sequencing rules do 
            not identify one, and an 
            initial activity cannot be identified, then the package cannot be attempted since there is 
            no way to identify an initial activity.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt is not active (that
            is, <Prp>AttemptStatus</Prp> is not AttemptStatus.Active, or if the attempt has 
            already started.</exception>
            <exception cref="T:Microsoft.LearningComponents.InvalidPackageException">Thrown if <p>ensureInitialActivity</p> is true and 
            an activity cannot be identified for delivery. This indicates the package cannot be attempted.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the application passes <paramref name="ensureInitialActivity"/> 
            as false, indicating only the sequencing rules should be used to determine the first activity, and an 
            initial activity cannot be identified. In this case, the attempt has not started and 
            the application will need to select an activity and start the attempt using the 
            <Mth>MoveToActivity</Mth> method.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.CommitChanges">
            <summary>
            Saves any changes in the session that have occurred since the session was created or the 
            session was previously committed. You must call this 
            method before disposing the session to ensure session changes to the session are persisted to LearningStore.
            </summary>
            <remarks>
            <p/>Applications should always call this function after exiting the session or
            performing any operation that changes the state of the session, such as 
            <Mth>MoveNext()</Mth>, <Mth>MovePrevious()</Mth> or setting any values in the <Prp>CurrentActivityDataModel</Prp>.
            
            <p/>This method commits session changes to LearningStore. As such, it is a relatively slow operation. 
            Therefore, it is recommended that applications use this StoredLearningSession object to modify as much as 
            possible before calling CommitChanges. At that point, all previous changes will be saved.
            
            For example:
            <code>
            LearningStore learningStore;    // this should be properly initialized
            FileSystemPackageStore packageStore;    // this should be properly initialized
            PackageItemIdentifier packageId;    // this should be properly initialized 
            
            // Load an existing session.
            StoredLearningSession session = new StoredLearningSession( learningStore, SessionView.Execute, attemptId, packageStore);
            if (session.AttemptStatus == AttemptStatus.Suspended)
            {
                session.Resume();
            }
            
            // Change a data model element 
            session.CurrentActivityDataModel.Score.Raw = 95;
            
            // Navigate to the next activity in the session
            session.MoveToNext();
            
            // Save all previous changes
            session.CommitChanges();
            </code>
            
            By committing the changes after all the state has been changed, including resuming the session, changing a data model value
            and then moving to a new activity, the code optimizes performance by only writing to LearningStore once. While it is valid to 
            call CommitChanges at any time, for performance reasons it is recommended to call it when all operations on the session 
            object have been completed. 
            
            <p/>If there have been no changes to the session, this method has no effect.
            
            <p/>It is not valid to call this method in Review view.
            
            <p/>In RandomAccess view, data model changes are saved, but
            the results of navigation changes are not. In that case,
            subsequent instantiations of the StoredLearningSession will reload the attempt data
            without showing the effect of navigations performed in RandomAccess view.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the state of the session and / or 
            its associated data model are in an inconsistent state. For instance, if a stream provided as an 
            attachment to the data model exceeds the size allowed by the <Prp>MaxExtensionDataSize</Prp> of
            this session, this exception will be thrown.
            </exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.DeleteAttempt(Microsoft.LearningComponents.Storage.LearningStore,Microsoft.LearningComponents.Storage.AttemptItemIdentifier)">
            <summary>
            Delete an existing attempt. This action permanently removes all data relating to this attempt from
            LearningStore. There is no way to recover deleted information.
            </summary>
            <param name="learningStore">The learningStore containing the attempt to be deleted.</param>
            <param name="attemptId">The unique identifier of the attempt to be deleted.</param>
            <remarks>
            The method uses <c>LearningStore.CreateJob</c> and <c>LearningStore.Execute</c> methods to 
            delete the attempt. Any exceptions thrown from those methods may be thrown from this method as well.
            <p/>If there isn't a current transaction when this method is called then a new serializable 
            transaction is created and used. If the job succeeds, the transaction is committed. If the 
            job fails, the transaction is rolled back. If a SQL deadlock occurs when executing the job 
            and the job is chosen as the deadlock victim, the job is retried several times.
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if the <paramref name="attemptId"/>
            does not represent a attempt.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if learningStore is null.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ValidateLoggingFlagValue(Microsoft.LearningComponents.Storage.LoggingOptions)">
            <summary>
            Returns false if the value is not a valid value for a LoggingFlag.
            </summary>
            <param name="flagValue">A logging flag value to validate.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ValidateReactivateSettingValue(Microsoft.LearningComponents.ReactivateSettings)">
            <summary>
            Returns false if the value is not a valid value for a ReactivateSetting.
            </summary>
            <param name="settingsValue">A value to validate.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Render(Microsoft.LearningComponents.RenderContext)">
             <summary>
             Reads a file from within the package associated with this session and writes it to a stream. 
             </summary>
             <param name="context">The context within which to render the file.</param>
             <remarks>
             At a minimum, the caller must set the following properties in the <paramref name="context"/>:
             <ul>
             <li><c>RelativePath</c></li>
             <li><c>OutputStream</c> or <c>Response</c></li>
             </ul>
             
             On return, the following values in <paramref name="context"/> may have been set by the session:
             <ul>
             <li><c>MimeType</c></li>
             <li><c>FormId</c>, if a default was used.</li>
             </ul>
             In addition, the content was rendered into the <c>OutputStream</c> or <c>Response</c> of <paramref name="context"/>.
             
             <p>This method will not read and write content that is not contained within the package. For instance, 
             if the entry point for an activity is an absolute URL and the caller passes it as the 
             <c>context.RelativePath</c>, this method will not succeed. It also will not render the package manifest.</p>
             
             <p>In an Execute session, this method may only be called when <Prp>AttemptStatus</Prp> is 
             <c>AttemptStatus.Active.</c></p>
             
             <p>This method may cause changes to the state of the session. After calling this method
             and prior to 
             disposing the object, the application
             should call <Mth>CommitChanges</Mth>  to ensure changes are persisted.</p>
            
             </remarks>
             <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is not provided.</exception>
             <exception cref="T:System.InvalidOperationException">Thrown if <c>context.RelativePath</c> or 
             <c>context.Response</c> is not provided or if the caller requests to render the package manifest.
             Also thrown if an Execute session requests to render content when the attempt is not active
             or there is no current, active activity identitified in the session.</exception>
             <exception cref="T:System.IO.FileNotFoundException">Thrown if the file referenced in <c>context.RelativePath</c>
             cannot be found.</exception>
             <exception cref="T:System.IO.DirectoryNotFoundException">Thrown if the file refernced in <c>context.RelativePath</c>
             includes a directory that does not exist in the package.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ProcessFormData(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Web.HttpPostedFile})">
            <summary>
            Process the data returned from the client.
            </summary>
            <param name="formData">The collection of name/value pairs returned from a posted form.</param>
            <param name="files">Collection of valid posted files posted in the <c>HttpRequest.Files</c> collection.</param>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.GetPackageReader">
            <summary>
            Private helper property to get the package reader for this attempt.
            </summary>
            <returns>The package reader for files in this session.</returns>
            <remarks>Note that the caller is responsible for disposing the 
            returned object.</remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Exit">
             <summary>
             Immediately exits the session
             without processing any pending navigation requests.
             </summary>
             <remarks>
             <p/>The attempt associated with this session must have started and 
             identified an activity for delivery prior to calling this 
             method.
             
             <p/>This method does not save changes that result from exiting the session. The application
             should call <Mth>CommitChanges</Mth> after this method and prior to disposing the object to ensure changes are persisted.
            
             <p/>All of the activities of the session will be exited and 
             the session will end. 
             None of the postConditionRules for any activity in the session will be evaluated. 
             
             <p/>No further navigation can be taken on the session. The caller cannot resume the session 
             it has exited. To allow resuming the session, use the <Mth>Suspend</Mth> method instead 
             of <Mth>Exit</Mth>.
             
             </remarks>
             <exception cref="T:System.InvalidOperationException">Thrown if it is not valid to call this 
             method. Use <Prp>IsExitValid</Prp> to anticipate if this exception will be thrown.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Autograde">
            <summary>
            Called when an attempt has just been completed or abandoned (Exit() or Abandon() called). 
            This method should only be called on execute sessions.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.BeginAutogradeMode">
            <summary>
            Start the process of autograding.
            </summary>
            <returns>Returns the ExecuteNavigator that can be used for navigation during 
            autograding.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.EndAutogradeMode(Microsoft.LearningComponents.Storage.ExecuteNavigator)">
            <summary>
            End the process of autograding.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Suspend">
            <summary>
            Temporarily suspends the the current session. It may be resumed at a later time.
            </summary>
            <remarks>
            <p/>This method does not save changes that result from suspending the session. The application
            should call <Mth>CommitChanges</Mth> after this method and prior to disposing the object to ensure changes are persisted.
            
            <p/>It may not be valid to 
            call this method based on the state of the session. Call <Prp>IsSuspendValid</Prp> before 
            calling this method to determine
            if this method is likely to succeed.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the session is not in the appropriate state to 
            be suspended.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Resume">
            <summary>
            Resumes a suspended session. Once the session has been resumed, it is considered active.
            </summary>
            <remarks>
            <p/>This method does not save changes that result from resuming the session. The application
            should call <Mth>CommitChanges</Mth> after this method and prior to disposing the object to ensure changes are persisted.
            
            <p/>The only time that resuming a session is valid is if the session has been previously 
            suspended. That is, if the <Prp>AttemptStatus</Prp> is Suspended.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the session is not 
            in the appropriate state to 
            be resumed. Use <Prp>IsResumeValid</Prp> to predict if the 
            operation will succeed.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Reactivate(Microsoft.LearningComponents.ReactivateSettings)">
            <summary>
            Reactivate a session that has been completed or abandoned.
            </summary>
            <param name="settings">Settings that determine the behavior of the session during 
            reactivation.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the session is not in the appropriate 
            state to be reactivated. Also thrown if the current <Prp>View</Prp> is not RandomAccess.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.Abandon">
            <summary>
            Stops the session by abandoning all activities in the session. 
            </summary>
            <remarks>
            <p/>The AttemptStatus must be Active
            in order to suspend a session in Execute view. It is not valid to suspend a session in other
            views.
            
            <p/>This method does not save changes that result from abandoning the session. The application
            should call <Mth>CommitChanges</Mth> after this method and prior to disposing the object to ensure changes are persisted. 
            
            <p/>PostCondition rules are not run after abandoning the session. Any current value of 
            <Prp>NavigationRequest.ExitMode</Prp> value of
            <Prp>LearningDataModel.NavigationRequest</Prp> will be ignored.
            
            <p/>A session that has been abandoned cannot be resumed at a later time.
            
            <p/>This method will read the activity tree associated with the session from
            LearningStore,
            if has not already been loaded.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the session is not in a state in
            which the attempt can be abandoned. Use <Prp>IsAbandonValid</Prp> to predict if the 
            operation will succeed.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.MoveToNext">
            <summary>
            Moves to the next activity in the session. 
            For a session that represents an active attempt, this is determined 
            through sequencing rules of the package and the progress of the learner through it.
            In other views, this returns the next activity in a preorder traversal of the activity tree.
            </summary>
            <remarks>For a SessionView of Execute, this method requires a current activity in
            the session.
            <p/>Use <Prp>IsMoveToNextValid</Prp> to determine if an activity will identified as the current
            activity after calling this method.
            <p/>In the process of navigation, the current activity may be exited before the 
            navigation command is able to complete. If the navigation command then throws a SequencingException,
            the state of the session is undefined. The current activity may have 
            changed during this process.
            <p>This method changes the state of the session. In order to save those changes in long-term storage, <Mth>CommitChanges</Mth>
            must be called after this method, and before the StoredLearningSession object is disposed. See the <Mth>CommitChanges</Mth> 
            documentation for a further explanation of how to optimize performance while ensuring session changes are properly saved to 
            LearningStore.</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session or if the session is not in a state that allows moving to the next activity. </exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if a new activity could not be identified for delivery.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.IsMoveToNextValid">
            <summary>
            Gets a boolean value indicating whether or not moving to the next activity is a valid operation.
            </summary>
            <returns>Returns true if <Mth>MoveToNext()</Mth> would result in a new active activity in the 
            session.</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.MoveToPrevious">
            <summary>
            Moves to the previous activity in the session. 
            For a session that represents an active attempt, this is determined 
            through sequencing rules of the package. In other cases, it is determined 
            by an in order traversal of the activity tree and navigation rules as defined in the package 
            manifest are not enforced.
            </summary>
            <remarks>For a SessionView of Execute, this method requires a current activity in
            the session.
            <p/>In the process of navigation, the current activity may be exited before the 
            navigation command is able to complete. If the navigation command then throws a SequencingException,
            the state of the session is undefined. The current activity may have 
            changed or become inactive during this process.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session or if the session is not in a state that allows moving to the previous activity.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if a new activity could not be identified for delivery.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.IsMoveToPreviousValid">
            <summary>
            Gets a boolean value indicating whether or not moving to the previous activity is a valid operation.
            </summary>
            <returns>Returns true if <Mth>MoveToPrevious()</Mth> would result in a new active activity in the 
            session.</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.MoveToActivity(System.String)">
            <summary>
            Makes the selected activity the current activity.
            </summary>
            <param name="activityKey">The id from the manifest corresponding to the activity
            to become the current activity.</param>
            <remarks>
            <p/>In the process of navigation, the current activity may be exited before the 
            navigation command is able to complete. If the navigation command then throws a SequencingException,
            the state of the session is undefined. The current activity may have 
            changed during this process.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="activityKey"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="activityKey"/> is an empty string.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the <paramref name="activityKey"/>
            cannot become the current activity to restrictions in the sequencing rules of the package.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the current state of the session does not allow
            moving to the selected activity or if the activity does not exist in the package.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.MoveToActivity(System.Int64)">
            <summary>
            Makes the selected activity the current activity, using the unique activity id. 
            </summary>
            <param name="activityId">The unique identifier for the selected activity.</param>
            <remarks>
            <p/>Whenever possible, use this method, which takes a <c>long</c> value instead of 
            the activity key, as it will improve performance.
            <p/>In the process of navigation, the current activity may be exited before the 
            navigation command is able to complete. If the navigation command then throws a SequencingException,
            the state of the session is undefined. The current activity may have 
            changed during this process.
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the <paramref name="activityId"/>
            cannot become the current activity to restrictions in the sequencing rules of the package.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the current state of the session does not allow
            moving to the selected activity or if the activity does not exist in the package.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.IsMoveToActivityValid(System.String)">
            <summary>
            Gets a boolean value indicating whether or not moving to the selected activity is a 
            valid operation.
            </summary>
            <param name="activityKey"></param>
            <returns>Returns true if moving to the selected activity would result in making that 
            activity become the current activity.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="activityKey"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="activityKey"/> is an empty string.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.IsMoveToActivityValid(System.Int64)">
            <summary>
            Gets a boolean value indicating whether or not moving to the selected activity is a 
            valid operation. The selected activity is identified by its unique numerical id.
            </summary>
            <param name="activityId">The unique identifier of the activity.</param>
            <returns>Returns true if moving to the selected activity would result in making that 
            activity become the current activity.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ProcessNavigationRequests">
            <summary>
            Processes all of the pending navigation requests in the current activity's 
            data model. Returns true if this caused a navigation request to execute.
            </summary>
            <remarks>
            <p/>After this method, the state of the session and its current activity  
            is determined by the navigation commands (if any) 
            that were set in the LearningDataModel of the current activity 
            prior to calling this method. 
            If there is a navigation
            request to move to a different activity, or to exit the current activity, this method 
            will trigger that pending navigation request. 
            
            <p/>Pending navigation requests for activities other than the current activity are 
            ignored.
            
            <p/>The LearningSession current activity may change after 
            calling this method. It may have changed due to a pending navigation request in the 
            current activity's data model. It may have changed due to the postConditionRules associated
            with the activity in the package manifest.
            
            <p/>If the activity is being paused, and should be left in a state where it can be resumed,
            then the caller should set the 
            <Prp>NavigationRequest.ExitMode</Prp> value of
            <Prp>LearningDataModel.NavigationRequest</Prp>
            to Suspend before calling this method.
            
            <p/>This method does not save the data model after processing these
            navigation requests, so it is recommended that the 
            application call <Mth>CommitChanges</Mth> after calling this method.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the state of the session, such as the 
            current sequencing rules, do not allow processing the 
            requested navigation.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ExitCurrentActivity">
            <summary>
            Immediately exits the current activity without processing any pending 
            navigation requests and without saving 
            any data model values that have not been committed.
            </summary>
            <remarks>
            <p/>It is recommended the application call <Mth>CommitChanges</Mth> after exiting the current 
            activity to ensure any pending data changes are saved.
            
            <p/>If the caller wants to be able to resume the current activity at a future time, it should 
            set <Prp>NavigationRequest.ExitMode</Prp> value of
            <Prp>LearningDataModel.NavigationRequest</Prp> to Suspend before 
            calling this method.
            
            <p/>This method will process the postConditionRules for the current activity. This may result in another 
            activity becoming the current activity in the session. It may also result in not being able to identify 
            a current activity for the session.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the state of the session, such as the 
            current sequencing rules, do not allow processing the 
            requested navigation.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.AbandonCurrentActivity">
            <summary>
            Stops the current activity by abandoning it without saving data and without further 
            processing of navigation rules.
            </summary>
            <remarks>
            
            <p/>Pending data model changes and other session changes that result from this method
            are not saved and should be persisted to long-term storage by calling 
            <Mth>CommitChanges</Mth> after this method and prior to disposing the object.
            
            <p/>PostCondition rules are not run after the activity has been abandoned. Any current value of 
            <Prp>NavigationRequest.ExitMode</Prp> of
            <Prp>LearningDataModel.NavigationRequest</Prp> will be ignored, and the 
            <Mth>AttemptStatus</Mth> of the attempt on the activity will be set to Abandonded.
            
            <p/>Once this method is called, the current activity will no longer be active for this session. That is,
            <Prp>LearningSession.CurrentActivityIsActive</Prp> will be false. To continue
            the session, select an activity to attempt 
            using one of the <Mth>MoveToActivity</Mth> methods.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if this method is called when 
            there is no current activity in 
            the session.</exception>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the state of the session, such as the 
            current sequencing rules, do not allow processing the 
            requested navigation.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.InvalidateSessionCache">
            <summary>
            Removes the cached version of session data for all activities in the 
            non-active session. This method should be called prior to an application 
            directly modifying any data within LearningStore pertaining to this attempt.
            </summary>
            <remarks>  
            If an application makes changes to data in LearningStore that is 
            associated with this 
            session, it should call this method to remove the cached version of the data.
            This allows future accesses by the Review or RandomAccess views to rebuild the 
            cache.  Calling this method while an attempt in the session is active
            is not valid and will throw an InvalidOperationException.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the session represents 
            an active attempt. That is, if <Prp>AttemptStatus</Prp>is Active. </exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.StoredLearningSession.ExpandSessionCache">
            <summary>
            Expands information from the cache information about the session 
            into distinct column values within LearningStore. 
            </summary>
            <remarks>
            <p/>This method is only valid for views of an active attempt. 
            <p/>The cache will be expanded when an attempt is completed, 
            causing information from the session cache to be written into the various tables 
            relating to the attempt.  
            <p/>If an application needs data from LearningStore
            for reporting purposes prior to the attempt being completed, it should call this method
            before reading information from LearningStore.
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.AttemptHasStarted">
            <summary>
            Gets an indication if the attempt has already started. An attempt that has started 
            may be ended. 
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.LoggingOptions">
            <summary>
            Gets or sets the level of logging in this session. In order to log all sequencing operations,
            this value should be set before any session requests related to 
            navigating the package, such as MoveNext or IsMoveToActivityValid.
            </summary>
            <remarks>
            It is not valid to set this value when <Prp>Microsoft.LearningComponents.LearningSession.View</Prp> is <c>SessionView.Review.</c>. 
            In RandomAccess view, changing this value has no effect, as sequencing rules are ignored
            in this mode.
            <p/>This value of this property is saved to LearningStore on the next call to 
            <Mth>CommitChanges</Mth>, before disposing the session object.
            <p/>By default, no logging is done in the session.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when caller attempts to set 
            an invalid value for the enumeration.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when callers attempts to set the value
            when <c>View</c> is <c>Review</c>.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.RloHandler">
            <summary>
            Gets the RloHandler for the current activity. Returns null if there is no current activity.
            Note that this value is not cached, since it may change every time the current activity changes.
            </summary>
            <remarks>This property returns null if there is no active, current activity in the session.</remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.ShowNext">
            <summary>
            Returns true if the associated user interface element indicating 'continue to next 
            activity' should be shown.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.ShowPrevious">
            <summary>
            Gets an indication if the user interface element indicating 'return to previous activity' should be shown.
            </summary>
            <returns>Returns true if the user interface element should be shown.
            </returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.ShowExit">
            <summary>
            Gets an indication if the user interface element indicating 'exit' should be shown. 
            </summary>
            <returns>Returns true if the user interface element indicating 'exit' should be shown. </returns>
            <remarks>If the exit option is visible, the application 
            determines the behavior when the exit action is triggered. It may opt to exit 
            the current activity or the session. 
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.ShowAbandon">
            <summary>
            Gets an indication if the user interface element to abandon the session should be shown. 
            </summary>
            <returns>Returns true if the user interface element to abandon the session should be shown. </returns>
            <remarks>If the abandon option is visible, the application 
            determines the behavior when the abandon action is triggered. It may opt to abandon
            the current activity or the session. 
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.ShowSave">
            <summary>
            Gets an indication if the user interface element to save the session should be shown. 
            </summary>
            <returns>Returns true if the user interface element to save the session should be shown.</returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.IsExitValid">
            <summary>
            Gets a boolean indicating if the session is in a state in which the 
            <Mth>Exit</Mth> method may be called. 
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.IsSuspendValid">
            <summary>
            Gets a boolean indicating if the session is in a state in which
            the <Mth>Suspend</Mth> method may be called.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.IsResumeValid">
            <summary>
            Gets a boolean indicating if the session is in a state in which
            the <Mth>Resume</Mth> method may be called.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.IsReactivateValid">
            <summary>
            Returns true if the session is in a state where <Mth>Reactivate</Mth> may be called.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.IsAbandonValid">
            <summary>
            Gets a boolean indicating if the session is in a state in which
            the <Mth>Abandon</Mth> method may be called.
            </summary>
            <remarks>This property will read the activity tree associated with the session from
            LearningStore,
            if has not already been loaded.</remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.HasCurrentActivity">
            <summary>
            Gets a value which indicates if the session has a current activity. 
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.CurrentActivityDataModel">
            <summary>
            Gets the data model associated with the current activity in the session. 
            </summary>
            <returns>The data model associated with the current activity.</returns>
            <remarks>
            <p/>Any changes made to the data model must be saved using the <Mth>CommitChanges</Mth> method.
            If <Mth>CommitChanges</Mth> is not called and the session is ended,
            changes to the data model will be lost.
            
            <p/>Initially retrieving the data model
            could be a long-running task involving database or package file parsing. Subsequent property
            accesses are fast.
            
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session or if the current activity is not active.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.CurrentActivityResourceType">
            <summary>
            Gets the type of resource of the current activity.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if there is no current activity in 
            the session.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.CurrentActivityEntryPoint">
            <summary>
            Gets the launching point of the current activity. This may be an absolute Uri, which indicates
            the resource is not in the package, or a package-relative Uri.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.AttemptId">
            <summary>
            Gets the unique id of the attempt being used in this session.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.AttemptStatus">
            <summary>
            Returns the state of attempt that is being managed by this session. 
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.AttemptStartTime">
            <summary>
            Gets the time which the attempt associated with this session started. The returned time 
            is UTC.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.AttemptEndTime">
            <summary>
            Gets the time at which the attempt associated with this session ended. The returned time
            is UTC.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt associated 
            with this session has not ended. That is, it is not valid to access this property 
            if the <Prp>AttemptStatus</Prp> is 
            Active or Suspended.
            </exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.StoredLearningSession.DatabaseNavigator">
            <summary>
            Return the navigator for this session. 
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LoggingOptions">
            <summary>
            Represents options for levels of logging during a session.
            </summary>
            <remarks>
            When LoggingOptions are set to anything other than LoggingOptions.None, the session will 
            write logging information to LearningStore, in the SequencingLogEntryItem table. 
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.None">
            <summary>
            Do not log this session.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.LogDetailSequencing">
            <summary>
            Creates log entries in the SequencingLogEntryItem table in LearningStore describing every step taken during the 
            Sequencing and Navigation process and each decision that was made during 
            that process.  This does not also include the final result of the Sequencing 
            and Navigation process.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.LogFinalSequencing">
            <summary>
            Creates log entries in the SequencingLogEntryItem table in LearningStore describing the final result 
            of each Sequencing and Navigation request.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.LogRollup">
            <summary>
            Creates log entries in the SequencingLogEntryItem table in LearningStore describing the actions 
            taken during Rollup, as described in the SCORM 2004 specification.
            This has no effect for sessions involving SCORM 1.2 content.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.LogAllSequencing">
            <summary>
            Equal to specifying both LogDetailSequencing and LogFinalSequencing.  
            All information pertinent to Sequencing and Navigation will be logged.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LoggingOptions.LogAll">
            <summary>
            Equal to specifying LogDetailSequencing, LogFinalSequencing, and 
            LogRollup.  All information pertinent to Sequencing and Navigation or 
            rollup will be logged.
            </summary>
            <remarks>Rollup logging only applies to sessions involving SCORM 1.2 
            content. Therefore, for SCORM 1.2 content <c>LogAll</c> is equivalent 
            to <c>LogAllSequencing</c>.</remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.AttachmentTooLarge">
            <summary>
              Looks up a localized string similar to Attachment exceeds maximum size of {0} bytes..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.AttemptAbandoned">
            <summary>
              Looks up a localized string similar to The requested operation cannot be performed because the session has been abandoned..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.AttemptComplete">
            <summary>
              Looks up a localized string similar to The requested operation cannot be performed because the session has been completed..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.AttemptHasNotEnded">
            <summary>
              Looks up a localized string similar to The requested operation cannot be performed because the session is not complete..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.AutoGradingModeNotBegun">
            <summary>
              Looks up a localized string similar to This operation is only valid during auto-grading..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.GlobalObjectiveDatabaseStateNotValid">
            <summary>
              Looks up a localized string similar to Global Objective database contains non-unique entries..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.InvalidActivity">
            <summary>
              Looks up a localized string similar to The requested activity cannot be found within the session..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.InvalidAttemptId">
            <summary>
              Looks up a localized string similar to The attempt could not be accessed. You may not have access to it, the attempt may have been deleted or does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.InvalidLearnerId">
            <summary>
              Looks up a localized string similar to The LearnerId could not be accessed. Either it does not exist or you do not have permission to access it..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.InvalidRootActivityId">
            <summary>
              Looks up a localized string similar to The root activity id could not be accessed. Either it does not exist or you do not have permission to access it..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.NoCurrentActivity">
            <summary>
              Looks up a localized string similar to A current activity is required for this operation..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.NotAllowedInExecuteMode">
            <summary>
              Looks up a localized string similar to This operation cannot be performed in Execute view..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.NotAllowedInReviewMode">
            <summary>
              Looks up a localized string similar to This operation cannot be performed in Review view..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.NotAllowedWhileInAutoGradingMode">
            <summary>
              Looks up a localized string similar to This operation cannot be performed during the auto-grading process..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.Resources.SLS_SessionCannotBeActive">
            <summary>
              Looks up a localized string similar to This operation cannot be performed on a session with an AttemptStatus of Active..
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier">
            <summary>
            Represents an identifier to an item in a store (or an identifier to an item that will be added to a store).
            </summary>
            <remarks>
            A LearningStoreItemIdentifier consists of two things that, when used together, uniquely identify an item in a store:<ul>
            <li>The name of an item type</li>
            <li>A 64-bit integer key (only available if the item exists in a store)</li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.m_itemTypeName">
            <summary>
            Name of the item type that this identifier refers to
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.m_key">
            <summary>
            Key of the identifier
            </summary>
            <remarks>
            If this value is positive, it contains a value created from
            the database.  If this value is negative, it contains a value
            created by a particular job, and is only "understood" by that
            particular job.  See the documentation for LearningStoreJob.AddItem
            for more details on where this is useful.  A value of zero is
            invalid.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.#ctor(System.String,System.Int64)">
            <summary>
            Create a new instance of the <Typ>LearningStoreItemIdentifier</Typ> class.
            </summary>
            <param name="itemTypeName">Name of the item type to which the identifier refers.</param>
            <param name="key">The unique integer value assigned to the item.  This
                must be a positive integer.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="itemTypeName"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
            <example>
            The following code creates a reference to the user with a key of
            50:
            <code language="C#">
            LearningStoreItemIdentifier id = new LearningStoreItemIdentifier("UserItem", 50);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the <Typ>LearningStoreItemIdentifier</Typ> class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null reference.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.GetKey">
            <summary>
            Retrieve the unique integer value assigned to the item.
            </summary>
            <remarks>
            Note that this value only uniquely identifies an item within a particular
            item type.  Two items with two different <Prp>ItemTypeName</Prp>s may return
            the same value from <Mth>GetKey</Mth>.
            <p/>
            A unique integer value is not always available.  In particular, a unique
            integer value is not available from <Typ>LearningStoreItemIdentifier</Typ>s
            returned from <Mth>../LearningStoreJob.AddItem</Mth>.  Identifiers
            returned from that method have not yet been added to the store, and therefore
            do not yet have a unique integer value.
            </remarks>
            <exception cref="T:System.InvalidOperationException">A unique integer
                value is not available.</exception>
            <example>
            The following code creates a <Typ>LearningStoreItemIdentifier</Typ> and then retrieves
            the unique integer value:
            <code language="C#">
            LearningStoreItemIdentifier id = new LearningStoreItemIdentifier("UserItem", 50);
            long key = id.GetKey();
            </code>
            After the above code is executed, key contains 50.
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.ToString">
            <summary>
            Returns a string representation of the current object
            </summary>
            <returns>A string representation of the current object</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.Equals(System.Object)">
            <summary>
            Returns a value indicating whether two instances of LearningStoreItemIdentifier represent the same item. 
            </summary>
            <param name="obj">A LearningStoreItemIdentifier to compare to this instance.</param>
            <returns>True if <paramref name="obj"/> is equal to this instance; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.Equals(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Returns a value indicating whether two instances of LearningStoreItemIdentifier represent the same item. 
            </summary>
            <param name="other">A LearningStoreItemIdentifier to compare to this instance.</param>
            <returns>True if <paramref name="other"/> is equal to this instance; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.GetHashCode">
            <summary>
            Returns the hash code for this instance. 
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.op_Equality(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Compares two LearningStoreItemIdentifier objects to determine whether they are equal.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns>True if the two instances are equal. Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.op_Inequality(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Compares two LearningStoreItemIdentifier objects to determine whether they are different.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns>True if the two instances are different. Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.CreateTemporaryItemIdentifier(System.String)">
            <summary>
            Create a new temporary LearningStoreIdentifier (that doesn't have a positive id value)
            </summary>
            <param name="itemTypeName">Item type name</param>
            <returns>The new LearningStoreItemIdentifier</returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.HasKey">
            <summary>
            True if a unique key is available
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.RawKey">
            <summary>
            The actual key (which may be positive or negative)
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.ItemTypeName">
            <summary>
            Name of the item type referenced by this Id.
            </summary>
            <example>
            <code language="C#">
            LearningStoreItemIdentifier id = new LearningStoreItemIdentifier("UserItem", 50);
            string name = id.ItemTypeName;
            </code>
            After the above code is executed, name contains "UserItem"
            </example>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.TemporaryKeyGenerator">
            <summary>
            Represents an object that returns temporary keys for use by the
            LearningStoreItemIdentifier.CreateTemporaryItemIdentifier method
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.TemporaryKeyGenerator.s_lastKey">
            <summary>
            Last temporary key that was generated
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier.TemporaryKeyGenerator.GetNewKey">
            <summary>
            Return a new temporary key
            </summary>
            <returns>The new temporary key</returns>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStore">
            <summary>
            Represents a store
            </summary>
            <remarks>
            A <b>store</b> is a SQL Server 2005 database that contains learning-related
            data.  A store contains a set of items.  Each item maintains a set of properties.
            Any number of items may be stored in a store.
            <p/>
            <b>Manipulating the items in a store</b>:<ol>
            <li>Open the store by creating a new <Typ>LearningStore</Typ> instance.</li>
            <li>Call the <Mth>CreateJob</Mth> method to create a new job.</li>
            <li>Call methods on the returned <Typ>LearningStoreJob</Typ> to perform
            the necessary manipulations.  See the <Typ>LearningStoreJob</Typ>
            documentation for more information.</li>
            </ol>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.EngineVersion">
            <summary>
            Version number of the LearningStore engine
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.s_allSchemas">
            <summary>
            Cache of schema information for all stores in the AppDomain
            </summary>
            <remarks>
            The key is the connection string.  The value is a <Typ>LearningStoreSchema</Typ>
            that represents the schema.<p/>
            Before accessing, users must lock on <Fld>s_allSchemasLock</Fld>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.s_allSchemasLock">
            <summary>
            Lock for <Fld>s_allSchemas</Fld>
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_connectionString">
            <summary>
            Connection string that was passed into the constructor
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_userKey">
            <summary>
            Key of the user accessing LearningStore
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_impersonationBehavior">
            <summary>
            Impersonation behavior
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_disableSecurityChecks">
            <summary>
            Should security checks be skipped?
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_locale">
            <summary>
            Locale used for conversions to/from strings
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_schema">
            <summary>
            Schema for this store.
            </summary>
            <remarks>
            Loaded only when needed.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStore.m_debugLog">
            <summary>
            Location to which the debug log should be written.
            </summary>
            <remarks>
            The TextWriter is not "owned" by this object.  It needs to be
            closed/disposed by the user that sets the property.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <Typ>LearningStore</Typ> class.
            </summary>
            <param name="connectionString">The connection used to access the SQL server
                database. The string is the same format as a connection string passed to
                <Typ>/System.Data.SqlClient.SqlConnection</Typ></param>
            <param name="userKey">The unique key of the user accessing the database.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionString"/> or <paramref name="userKey"/> is a null reference.</exception>
            <example>The following code opens the store located in the "Mls"
            database of the "Learning" server with the user key "Bob":
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.#ctor(System.String,System.String,Microsoft.LearningComponents.ImpersonationBehavior)">
            <summary>
            Initializes a new instance of the <Typ>LearningStore</Typ> class.
            </summary>
            <param name="connectionString">The connection used to access the SQL server
                database. The string is the same format as a connection string passed to
                <Typ>/System.Data.SqlClient.SqlConnection</Typ></param>
            <param name="userKey">The unique key of the user accessing the database.</param>
            <param name="impersonationBehavior">Identifies which <c>WindowsIdentity</c> is used to
                access the database when impersonation is involved.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionString"/> or <paramref name="userKey"/>
                is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="impersonationBehavior"/>
                has an invalid value</exception>
            <example>The following code opens the store located in the "Mls"
            database of the "Learning" server with the user key "Bob".  The original (non-impersonated)
            identity is used when accessing the database:
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob", ImpersonationBehavior.UseOriginalIdentity);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <Typ>LearningStore</Typ> class.
            </summary>
            <param name="connectionString">The connection used to access the SQL server
                database. The string is the same format as a connection string passed to
                <Typ>/System.Data.SqlClient.SqlConnection</Typ></param>
            <param name="userKey">The unique key of the user accessing the database.</param>
            <param name="disableSecurityChecks">True if security checks should be skipped when performing operations
                in the database.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionString"/> or <paramref name="userKey"/> is a null reference.</exception>
            <example>The following code opens the store located in the "Mls"
            database of the "Learning" server with the user key "Bob":
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob", false);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.#ctor(System.String,System.String,Microsoft.LearningComponents.ImpersonationBehavior,System.Boolean)">
            <summary>
            Initializes a new instance of the <Typ>LearningStore</Typ> class.
            </summary>
            <param name="connectionString">The connection used to access the SQL server
                database. The string is the same format as a connection string passed to
                <Typ>/System.Data.SqlClient.SqlConnection</Typ></param>
            <param name="userKey">The unique key of the user accessing the database.</param>
            <param name="impersonationBehavior">Identifies which <c>WindowsIdentity</c> is used to
                access the database when impersonation is involved.</param>
            <param name="disableSecurityChecks">True if security checks should be skipped when performing operations
                in the database.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="connectionString"/> or <paramref name="userKey"/>
                is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="impersonationBehavior"/>
                has an invalid value</exception>
            <example>The following code opens the store located in the "Mls"
            database of the "Learning" server with the user key "Bob".  The original (non-impersonated)
            identity is used when accessing the database:
            <code language="C#">
            WindowsIdentity applicationIdentity = ...
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob", ImpersonationBehavior.UseOriginalIdentity, false);
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.ClearSchemaCache">
            <summary>
            Clears the schema cache.
            </summary>
            <remarks>
            The schema cache is an appdomain-wide cache that maps connection strings
            to schema information.  When a new <Typ>LearningStore</Typ> instance is
            created, the schema information will be read from the cache (rather than
            from the database) if available.  This method clears the cache, which
            will force schema information to be re-read from the database.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.CreateJob">
            <summary>
            Create a new instance of the <Typ>LearningStoreJob</Typ> class.
            </summary>
            <returns>A new <Typ>LearningStoreJob</Typ></returns>
            <exception cref="T:System.InvalidOperationException">The store was created
                by a different version of this product, or the schema information stored
                inside the database is invalid.</exception>
            <exception cref="T:System.Data.SqlClient.SqlException">The database could not be
                opened or other SQL error.</exception>
            <example>The following code opens a store and creates a new job:
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            LearningStoreJob job = store.CreateJob();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.CreateQuery(System.String)">
            <summary>
            Create a new instance of the <Typ>LearningStoreQuery</Typ> class
            </summary>
            <returns>A new <Typ>LearningStoreQuery</Typ></returns>
            <param name="viewName">Name of the view for the query.  If this is an item type name,
                then the default view for the item type is used.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="viewName"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">The store was created
                by a different version of this product, the schema information stored
                inside the database is invalid, or <paramref name="viewName"/>
                does not refer to a view or item type in the store.</exception>
            <exception cref="T:System.Data.SqlClient.SqlException">The database could not be
                opened or other SQL error.</exception>
            <remarks>
            See the <Typ>LearningStoreQuery</Typ> documentation for more information
            about constructing queries.
            </remarks>
            <example>The following code opens a store and creates a new query:
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            LearningStoreQuery query = store.CreateQuery("AttemptItem");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.EnableDebugLog(System.IO.TextWriter)">
            <summary>
            Enables debug log
            </summary>
            <param name="destination">Object to which the debug
                output should be written.</param>
            <remarks>
            <para>
            When the debug log is enabled, information useful for debugging
            is written to <paramref name="destination"/>.  This currently includes:
            <ul>
            <li>Information sent and read from SQL Server due to method calls on this object.
                Includes the command text, parameters, and result sets.</li>
            <li>Information sent and read from SQL Server due to method calls on <b>new</b>
                <Typ>LearningStoreJob</Typ> instances.  Includes the command text,
                parameters, and result sets.</li>
            </ul>
            </para>
            <para>
            There is no guarantee that all information output by SQL Server is in the log.  Only
            the information that is used is added to the log.  For example, SQL Server may
            output a result set and then output an error.  Since the error causes the transaction
            to be rolled back, the first result set is no longer used.  Therefore, the result
            set is not included in the log.
            </para>
            <para>
            The output is in a pseudo-HTML format.  It isn't 100% valid HTML, since it doesn't
            include e.g., a &lt;HTML&gt; tag.  However, it can be viewed in a browser.
            </para>
            <para>
            The information written may change from version-to-version.  Information written to
            the log may also security-sensitive information (e.g., information that the user wouldn't
            normally have access to).
            </para>
            <para>
            Enabling the debug log will decrease the performance of the object.  So enabling
            the debug log on a "live" system is not recommended.
            </para>
            <para>
            The caller "owns" the object passed in <paramref name="destination"/>.  So if, for example,
            it refers to a file, the file will not be closed until the caller closes it.
            </para>
            </remarks>
            <example>
            <code language="C#">
            StreamWriter writer = new StreamWriter("c:\\log.htm");
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            store.EnableDebugLog(writer);
            ...
            writer.Dispose();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.GetSchema">
            <summary>
            Get the schema information for this store.
            </summary>
            <returns>The schema information</returns>
            <remarks>
            If it has already been retrieved for this store, then just
            return that copy.  If it hasn't been retrieved, then grab
            it from the AppDomain-wide cache or from the database.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStore.GetSchemaInformationFromCache(System.String,Microsoft.LearningComponents.ImpersonationBehavior,System.IO.TextWriter)">
            <summary>
            Get the schema information for this store from the cache or from the database.
            </summary>
            <param name="connectionString">Connection string used to access the store.</param>
            <param name="impersonationBehavior">Identifies which <c>WindowsIdentity</c> is used to
                access the database when impersonation is involved.</param>
            <param name="debugLog">Location to which the debug log should be written, or
                null if there isn't a debug log.</param>
            <returns>The schema information.</returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStore.ConnectionString">
            <summary>
            The connection string passed in the constructor
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStore.UserKey">
            <summary>
            The UserKey passed in the constructor
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStore.Locale">
            <summary>
            Gets or sets the locale information used to convert property values or column values
            from one type to another.
            </summary>
            <remarks>
            <para>
            The default value is the current system CultureInfo.
            </para>
            <para>
            Setting this value does not affect currently-existing <Typ>LearningStoreQuery</Typ> or
            <Typ>LearningStoreJob</Typ> objects.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">
            <summary>
            Exception thrown when an item can't be found
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
            <param name="info">TODO</param>
            <param name="context">TODO</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException">
            <summary>
            Exception thrown when a constraint is violated during an operation.
            For example, attempting to add an item that references an item that doesn't
            exist.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException.#ctor">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreConstraintViolationException</Typ> class.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreConstraintViolationException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreConstraintViolationException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
            <param name="info">TODO</param>
            <param name="context">TODO</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreSecurityException">
            <summary>
            Exception thrown when a security check performed by LearningStore fails
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSecurityException.#ctor">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreSecurityException</Typ> class.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreSecurityException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreSecurityException</Typ> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreItemNotFoundException</Typ> class.
            </summary>
            <param name="info">TODO</param>
            <param name="context">TODO</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageStore">
            <summary>
            Represents a store which contains SCORM packages. Subclasses represent various means
            of persisting the store in long-term storage.
            </summary>
            <remarks>
            If an application installed a LearningStore schema that contains information
            about packages, an implementation of this class will need to be provided.
            this class.</remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.#ctor(Microsoft.LearningComponents.Storage.LearningStore)">
            <summary>
            Protected constructor. Only subclasses may be instantiated.
            </summary>
            <param name="learningStore">The LearningStore to keep information regarding packages.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.AddPackageReference(Microsoft.LearningComponents.PackageReader,System.String,Microsoft.LearningComponents.Storage.PackageEnforcement)">
            <summary>
            Creates and executes a LearningStoreJob to add a package reference to the PackageStore. 
            </summary>
            <param name="packageReader">The package to be added to PackageStore. This is required.</param>
            <param name="location">The value of the Location field of the package. This should uniquely identify the 
            location of the package so that it can be used to retrieve files from the package at a later time. The value of the 
            location may be updated later using <Mth>UpdatePackageLocation</Mth>. The location value may 
            not be a null or empty string.</param>
            <param name="packageEnforcement">The settings to determine whether data should be modified in order 
            to enable the package reference to be added. Requesting the data to be modified will increase the likelihood the 
            package reference will be added successfully, however it may cause unexpected problems later when the package 
            is executed.</param>
            <returns>The results of the addition of the reference, including a log containing any warnings 
            encountered during the process.</returns>
            <remarks>
            <p>This method validates the package according the to requested manifestSettings. If the validation results in 
            any errors, the package reference will not be added. The reason for the error will be available in the log which 
            is included in the exception.
            The validation process will stop at the first error, so if the process is stopped,
            the log may not contain a complete listing of all problems in the package.</p>
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.PackageImportException">Thrown if the package reference could not be added.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageReader"/> or <paramref name="location"/>
            or <paramref name="packageEnforcement"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="location"/> is not provided. </exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.UpdatePackageLocation(Microsoft.LearningComponents.Storage.PackageItemIdentifier,System.String)">
            <summary>
            Update the package reference to a new location;
            </summary>
            <param name="packageId">The unique identifier of the package to update.</param>
            <param name="location">The new location of the package reference. This may not be null or empty.</param>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="location"/> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageId"/> or <paramref name="location"/>
            are not provided.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if <paramref name="packageId"/> does not 
            represent a package in LearningStore.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.RemovePackageReference(Microsoft.LearningComponents.Storage.PackageItemIdentifier)">
            <summary>
            Creates and executes a LearningStoreJob that removes the package referenced by packageId from PackageStore.
            This action is permanent and deleted information cannot be recovered.
            </summary>
            <param name="packageId">The package reference to remove.</param>
            <returns>The Location value of the package. The derived class should take appropriate action to 
            clean up any cached files in this location.</returns>
            <remarks>In order to remove the package reference, there must no other dependencies on the package. For instance, 
            if the package has been executed, the resulting attempt information must be removed from LearningStore
            before the package reference may be removed.</remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException">Thrown if the package cannot be deleted 
            from LearningStore because there are other items in the store that depend upon it. For instance,
            a package for which there are attempts in LearningStore, cannot be deleted.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageId"/> is not provided.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if <paramref name="packageId"/> does not represent a package 
            in LearningStore.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetPackageReader(Microsoft.LearningComponents.Storage.PackageItemIdentifier)">
            <summary>
            Returns a <c>PackageReader</c> that can read files from a package in 
            this store. 
            </summary>
            <param name="packageId">The identifier of the package to be read.</param>
            <returns>A PackageReader that can read files from the requested package.</returns>
            <remarks>
            <p/>It is recommended that derived classes of PackageStore also implement a 
            derived class of PackageReader that is capable of reading files on behalf of the subclassed 
            PackageStore.
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if <paramref name="packageId"/>
            does not represent a package in the store.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetPackageReader(Microsoft.LearningComponents.Storage.PackageItemIdentifier,System.String)">
            <summary>
            Internal function that allows StoredLearningSession to reduce database calls. 
            </summary>
            <param name="packageId">The id of the package to read.</param>
            <param name="packageLocation">The value of the Location column in LearningStore for this package.
            Note that this may not be validated by the derived class as matching <paramref name="packageId"/>. 
            If it does not match the packageId, 
            the results are unpredictable, but the package should be read from this location.</param>
            <returns>A reader for the requested package.</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if <paramref name="packageId"/>
            does not represent a package in the store.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.ImportManifest(Microsoft.LearningComponents.Storage.LearningStoreJob,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Manifest.ManifestReader)">
            <summary>
            Adds information to a LearningStoreJob to import manifest information into LearningStore. 
            </summary>
            <param name="job">The LearningStore job to add the manifest information to.</param>
            <param name="packageId">The id of the package in the Packages table to update with the
            manifest information. The package information must already be in LearningStore. </param>
            <param name="manifest">The manifest to import.</param>
            <remarks>
            <p>This method does not update the PackageItem table.</p>
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.PackageImportException">Thrown if the manifest does not contain at least one 
            &lt;organization&gt; node that contains one &lt;item&gt; node.</exception>
            <exception cref="T:Microsoft.LearningComponents.InvalidPackageException">Thrown if the <paramref name="manifest"/> detects 
            an error in the manifest.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.PackageHasActivities(Microsoft.LearningComponents.Manifest.ManifestReader)">
            <summary>
            Helper function. Returns true if the manifest contains at least one activity.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.AddResourceToJob(Microsoft.LearningComponents.Storage.LearningStoreJob,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Manifest.ResourceNodeReader)">
            <summary>
            Add the information in <paramref name="resource"/> to the LearningStoreJob. If the resource 
            does not have an id, it will not be added.
            </summary>
            <param name="job"></param>
            <param name="packageId"></param>
            <param name="resource"></param>
            <returns>Returns the resource id that was added to the job.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.AddOrganization(Microsoft.LearningComponents.Storage.LearningStoreJob,Microsoft.LearningComponents.PackageFormat,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Manifest.OrganizationNodeReader,System.Int32,System.Collections.Generic.Dictionary{System.String,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier})">
            <summary>
            Add the organization information to a LearningStoreJob that will add it to LS.
            </summary>
            <param name="job">The organization information is added to this job.</param>
            <param name="packageId">The packageId reference for the organization.</param>
            <param name="packageFormat">The format of the package.</param>
            <param name="orgReader">The organization to add.</param>
            <param name="placement">The order of this organization in the manifest.</param>
            <param name="resourcesToAdd">The list of resources that will be added to the store.
            The key is the id from the manifest, the value is the corresponding LearningStoreItemId.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetDefaultTitle(System.String,System.String)">
            <summary>
            Helper function to get a title for an activity or organization. If it is not in the manifest,
            then format the string for the default case.
            </summary>
            <param name="title">The title, as returned from ManifestReader classes. If this is empty,
            the default will be constructed. If it is not empty, it is returned unchanged.</param>
            <param name="id">The id of the element of which the title is being determined. If the 
            <paramref name="title"/> is not provided, this becomes part of the default title.</param>
            <returns>The title to use.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.AddActivityTree(Microsoft.LearningComponents.Storage.LearningStoreJob,Microsoft.LearningComponents.PackageFormat,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Manifest.OrganizationNodeReader,Microsoft.LearningComponents.Manifest.ActivityNodeReader,System.Int32,System.Collections.Generic.Dictionary{System.String,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier},System.Collections.Generic.Dictionary{System.String,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier})">
            <summary>
            Add an activity tree (this node and it's children) to a LearningStoreJob. This function is 
            recursive -- it adds the <paramref name="activityReader"/> then adds it's children by calling 
            this method.
            </summary>
            <param name="job">The LearningStoreJob to add the tree to.</param>
            <param name="packageFormat">The format of the package.</param>
            <param name="orgId">The organization id that is the root of this activity tree.</param>
            <param name="parentId">Parent of the activity to add. Must reference an ActivityPackageItem
            that was previously added to the job.</param>
            <param name="packageId">The package id that represents the package that contains this activity</param>
            <param name="orgReader">The organization which this activity is a member of.</param>
            <param name="activityReader">The root of the tree of activities to add. This activity will be added 
            as part of the tree.</param>
            <param name="placement">The ordinal of this activity relative to its peers. This is 0-based.</param>
            <param name="resourcesToAdd">The list of resource nodes that have already been added to LearningStore.
            The key is the resource id from the manifest. The value is the LearningStoreItemIdentier of the 
            resource in LearningStore.</param>
            <param name="globalObjectivesToAdd">The list of GlobalObjectives to be added to LearningStore.
            The key is the objective id from the manifest. The value is the LearningStoreItemIdentifier of the 
            global objective in LearningStore. This value may be null for 1.2 and LRM content.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.AddSequencing(Microsoft.LearningComponents.Storage.LearningStoreJob,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,Microsoft.LearningComponents.Manifest.OrganizationNodeReader,Microsoft.LearningComponents.Manifest.SequencingNodeReader,System.Collections.Generic.Dictionary{System.String,Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier},System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Helper function to add sequencing information (mainly objectives) to a job. This is only called for SCORM 2004 content.
            </summary>
            <param name="job">The job to add the information to.</param>
            <param name="orgId">The organization which includes the sequencing information. 
            </param>
            <param name="orgReader">The reader for the associated organization.</param>
            <param name="sequencingReader">The reader for the sequencing node to add.</param>
            <param name="globalObjectivesToAdd">The collection of global objectives that are added in the 
            package.</param>
            <param name="actProperties">The properties collection for the ActivityPackageItem that is 
            associated with the sequencing information. The job will be updated to include these properties.
            </param>
            <param name="activityPackageItemId">The activityPackageItem to associate with this sequencing
            information.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetStaticDataModelCache(Microsoft.LearningComponents.PackageFormat,Microsoft.LearningComponents.Manifest.ActivityNodeReader,System.Int32)">
            <summary>
            Create the cache of static data relating to the data model for an item node. 
            This is per-activity information that does not 
            change based on attempts.
            </summary>
            <param name="packageFormat"></param>
            <param name="activityNode"></param>
            <param name="originalPlacement"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetStaticDataModelCache(Microsoft.LearningComponents.Manifest.OrganizationNodeReader,System.Int32)">
            <summary>
            Create the cache of static data relating to the data model for an 
            organization node. This is per-organization information that does not 
            change based on attempts.
            </summary>
            <param name="orgNode"></param>
            <param name="originalPlacement"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetManifestFile(Microsoft.LearningComponents.Storage.PackageItemIdentifier)">
            <summary>
            Gets the manifest from the specified package in the store. The package must have been 
            previously added to the store.
            </summary>
            <param name="packageId">The package containing the manifest to be read.</param>
            <returns>A stream containing the manifest of the package, as it is stored in LearningStore.</returns>
            <remarks>
            <p/>This method simply returns the imsmanifsest.xml file, as it is stored in the PackageStore. 
            It does not update it with information in related columns from LearningStore.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetPackageLocationFromLS(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Fill in package information from LearningStore. If the packageId is not in LS, this will 
            throw a LearningStoreItemNotFound exception. This method enforces LearningStore security. The 
            current user must have access to the requested package.
            </summary>
            <param name="packageId"></param>
            <returns>The location string.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageStore.GetPackageManifestFromLS(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Fill in package information from LearningStore. If the packageId is not in LS, this will 
            throw a LearningStoreItemNotFound exception.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageStore.LearningStore">
            <summary>
            Gets the LearningStore associated with this PackageStore. The LearningStore
            contains the package information.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.AddPackageReferenceResult">
            <summary>
            Represents the successful results of adding a package reference to PackageStore.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AddPackageReferenceResult.#ctor(Microsoft.LearningComponents.Storage.PackageItemIdentifier,Microsoft.LearningComponents.ValidationResults)">
            <summary>
            Create an AddPackageReferenceResult.
            </summary>
            <param name="packageId">The packageId of the added reference. This value is not validated to ensure that it represents 
            a package in LearningStore.</param>
            <param name="log">The log of requested errors and warnings that occurred during the course of adding the package reference.
            This may not be null.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageId"/> or <paramref name="log"/>
            are not provided.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.AddPackageReferenceResult.PackageId">
            <summary>
            The reference to the package that was added to PackageStore.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.AddPackageReferenceResult.Log">
            <summary>
            The log of errors and warnings that occurred in the course of adding the package reference to PackageStore.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageEnforcement">
            <summary>
            Represents settings relating to enforcing requirements when a package reference is added to a PackageStore.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageEnforcement.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a PackageEnforcement to indicate requirements that will be enforced when a package reference is added to
            PackageStore.
            </summary>
            <param name="enforceScormRequirements">If true, Scorm requirements will be enforced when a package reference is added 
            to PackageStore. In this case, any violation of Scorm requirements will cause the import process to fail. If false, an 
            attempt will be made to fix the package so that it can be imported. In this case, problems 
            may occur when the package is executed.</param>
            <param name="enforceMlcRequirements">If true, Microsoft Learning Components requirements will be enforced when a package reference is added 
            to PackageStore. In this case, any violation of Microsoft Learning Components requirements will cause the import 
            process to fail. If false, an 
            attempt will be made to fix the package so that it can be imported. In this case, problems 
            may occur when the package is executed.</param>
            <param name="enforceLrmRequirements">If true, requirements for Lrm contents will be enforced when a package reference is added 
            to PackageStore. In this case, any significant violation of Lrm format requirements will cause the import 
            process to fail. If false, an 
            attempt will be made to fix the package so that it can be imported. In this case, problems 
            may occur when the package is executed. Only Lrm values that are required for import are validated in this process.</param>
            <remarks>These settings do not cause changes to the initial package being added a reference into a PackageStore. Instead, 
            the imported package reference information is modified to allow import, without changing the original package.</remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageEnforcement.EnforceScormRequirements">
            <summary>
            Gets a value indicating whether the package should be modified if it violates Scorm requirements, 
            in order to allow it to be imported. If true, the 
            package should not be modified in order to allow the import. If false, the package import process will attempt to fix 
            issues in the package relating to Scorm requirements in order to facilitate importing the package. In some cases, 
            this may cause problems when the package is executed.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageEnforcement.EnforceMlcRequirements">
            <summary>
            Gets a value indicating whether the package should be modified if it violates Microsoft Learning Components requirements, 
            in order to allow it to be imported. If true, the 
            package should not be modified in order to allow the import. If false, the package import process will attempt to fix 
            issues in the package relating to Microsoft Learning Components requirements in order to facilitate importing 
            the package. In some cases, 
            this may cause problems when the package is executed.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageEnforcement.EnforceLrmRequirements">
            <summary>
            Gets a value indicating whether the package should be modified if it violates LRM format requirements, 
            in order to allow it to be imported. If true, the 
            package should not be modified in order to allow the import. If false, the package import process will attempt to fix 
            issues in the package relating to LRM format requirements in order to facilitate importing 
            the package. In some cases, 
            this may cause problems when the package is executed.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageImportException">
            <summary>
            Represents an exception caused by adding an invalid package to a PackageStore. This 
            exception will only contain messages appropriate for untrusted callers indicating a 
            problem with the package being imported.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor">
            <summary>
            Constructor. Represents a problem occurred when importing a package.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor(System.String)">
            <summary>
            Constructor, providing a custom message.
            </summary>
            <param name="message">Message to describe the cause of the problem.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor(System.String,Microsoft.LearningComponents.ValidationResults)">
            <summary>
            Constructor, provideing a custom message and a log of warnings and errors the occurred 
            before the exception.
            </summary>
            <param name="message">Message to describe the cause of the problem.</param>
            <param name="log">The log containing errors and warnings that occurred prior to the 
            exception.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor, providing a message and the exception that triggered this exception.
            </summary>
            <param name="message">Message to describe the cause of the problem.</param>
            <param name="innerException"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor(System.String,System.Exception,Microsoft.LearningComponents.ValidationResults)">
            <summary>
            Constructor, providing a message and the exception that triggered this exception as 
            well a a log of warnings and errors the occurred 
            before the exception.
            </summary>
            <param name="message">Message to describe the cause of the problem.</param>
            <param name="innerException"></param>
            <param name="log">A log of warnings and errors the occurred 
            before the exception.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the PackageImportException class with serialized data. 
            </summary>
            <param name="serializationInfo">The <Typ>/System.Runtime.Serialization.SerializationInfo</Typ> that holds 
            the serialized object data about the exception being thrown. </param>
            <param name="context">The <Typ>/System.Runtime.Serialization.StreamingContext</Typ> that contains contextual 
            information about the source or destination</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Retrieve the object data for serialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageImportException.ResultName(System.Int32)">
            <summary>
            Helper method to return string for the name of a result to serialize.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageImportException.Log">
            <summary>
            Gets and sets the log of errors and warnings that occurred before the package import process was terminated. 
            The log cannot be set to null.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LogableSqlCommand">
            <summary>
            Represents a SqlCommand (and a corresponding SqlDataReader) that can
            write debug output to a TextWriter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_command">
            <summary>
            The "real" SqlCommand
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_log">
            <summary>
            Destination for the log, or null if a log shouldn't be kept.
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_reader">
            <summary>
            The "real" SqlDataReader
            </summary>
            <remarks>
            Null until the command is executed
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_commandPart">
            <summary>
            String containing the HTML for the start of the command, the command text,
            and the input parameters.
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_resultSetPart">
            <summary>
            String containing the HTML for the result sets
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_exceptionPart">
            <summary>
            String containing the HTML for the exception information
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_openResultSetTag">
            <summary>
            True if the opening tag(s) related to a result set have been written
            to <Fld>m_resultSetPart</Fld> and the corresponding closing tag(s)
            have not been written.
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_openResultSetRowTag">
            <summary>
            True if the opening tag(s) related to a result set row have been
            written to <Fld>m_resultSetPart</Fld> and the corresponding
            closing tag(s) have not yet been written.
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_resultSetCount">
            <summary>
            Current result set index
            </summary>
            <remarks>
            Always null if <Fld>m_log</Fld>=null.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LogableSqlCommand.m_nextFieldIndex">
            <summary>
            Index of the field that will next be written to <Fld>m_resultSetPart</Fld>
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.#ctor(System.Data.SqlClient.SqlConnection,System.IO.TextWriter)">
            <summary>
            Create a new instance of a Logable SQL command
            </summary>
            <param name="connection">Connection on which the command will execute</param>
            <param name="log">Location in which the log should be output, or null
               if no log should be output</param>                
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.AddParameter(System.Data.SqlClient.SqlParameter)">
            <summary>
            Identical to calling SqlCommand.Parameters.Add(<paramref name="parameter"/>)
            on the command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.Execute(System.String)">
            <summary>
            Identical to setting the CommandText of the SqlCommand to <paramref name="commandText"/>
            and then calling ExecuteReader on the SqlCommand.
            </summary>
            <param name="commandText"></param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.Read">
            <summary>
            Identical to calling Read on the SqlDataReader returned from
            SqlCommand.ExecuteReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.NextResult">
            <summary>
            Identical to calling NextResult on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.IsDBNull(System.Int32)">
            <summary>
            Identical to calling IsDBNull on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetInt32(System.Int32)">
            <summary>
            Identical to calling GetInt32 on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetInt64(System.Int32)">
            <summary>
            Identical to calling GetInt64 on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetSqlXml(System.Int32)">
            <summary>
            Identical to calling GetSqlXml on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetValue(System.Int32)">
            <summary>
            Identical to calling GetValue on the SqlDataReader returned
            from SqlCommand.ExecuteReader
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetFieldCount">
            <summary>
            Identical to reading the FieldCount property on the
            SqlDataReader returned from SqlCommand.ExecuteReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.GetParameterCount">
            <summary>
            Identical to reading SqlCommand.Parameters.Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.Dispose">
            <summary>
            Dispose.
            </summary>
            <remarks>
            Actually writes to the log output
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogCommandTextAndInputParameters">
            <summary>
            Save the command text and input parameter information for
            later inclusion in the log output
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogException(System.Data.SqlClient.SqlException)">
            <summary>
            Save the exception information for later inclusion in the log output
            </summary>
            <param name="e">Exception that was thrown.</param>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogResultSetStart">
            <summary>
            Save the start of a result set for later inclusion in the log output
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogResultSetEnd">
            <summary>
            Save the end of a result set for later inclusion in the log output
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogResultSetRowStart">
            <summary>
            Save the start of a result set row for later inclusion in the log output
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogResultSetRowEnd">
            <summary>
            Save the end of a result set row for later inclusion in the log output
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.LogResultSetValue(System.Int32,System.Object)">
            <summary>
            Save a value in a result set for later inclusion in the log output
            </summary>
            <param name="index">Index of the field in the row.</param>
            <param name="value">Value of the field.</param>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.AppendParameters(System.Text.StringBuilder,System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            Helper function that appends parameter tags/text to a StringBuilder
            </summary>
            <param name="sb">StringBuilder to be written to</param>
            <param name="command">Command from which to retrieve parameters</param>
            <param name="outputParameters">If true, only the output parameters are added.
                If false, then only the input parameters are added.</param>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LogableSqlCommand.AppendValue(System.Text.StringBuilder,System.Object)">
            <summary>
            Helper function that appends a value to a StringBuilder
            </summary>
            <param name="sb">StringBuilder to be written to</param>
            <param name="value">Value to be written</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob">
             <summary>
             Represents a job that can be executed by a store
             </summary>
             <remarks>
             A <b>job</b> is a collection of operations that can be performed
             on a store.  All of the operations are executed as a batch, and if
             any of the operations fail, then the entire job fails.  To create
             and execute a job, perform the following steps:<ol>
             <li>Create a new <Typ>LearningStoreJob</Typ> on a store by calling
                 <Mth>../LearningStore.CreateJob</Mth>.</li>
             <li>Call methods on the <Typ>LearningStoreJob</Typ> to add operations
                 to the job.  The operations will be executed in the order in which
                 they are added to the job.</li>
             <li>Call <Mth>Execute</Mth> on the job to execute it.  The results of
             the job are returned.</li>
             </ol>
             <p/>
             Here's some example code that adds a new user to a store:
             <code language="C#">
             // Create the job
             LearningStoreJob job = store.CreateJob();
             
             // Add the "add" operation
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             job.AddItem("UserItem", propertyValues);
             
             // Execute the job
             job.Execute();
             </code>
             Multiple operations can be performed in the same job.  For example,
             here's some code that adds a new user, a new global objective, and a new
             learner global objective:
             <code language="C#">
             // Create the job
             LearningStoreJob job = store.CreateJob();
            
             // Add the first "add" operation that adds the user
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             LearningStoreItemIdentifier newUserId = job.AddItem("UserItem", propertyValues);
            
             // Add the second "add" operation that adds the global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Key"] = "MyGlobalObjective";
             propertyValues["Description"] = "MyGlobalObjective Description";
             LearningStoreItemIdentifier newGlobalObjectiveId = job.AddItem("GlobalObjectiveItem", propertyValues);
            
             // Add the third "add operation" that adds the learner global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["LearnerId"] = newUserId;
             propertyValues["GlobalObjectiveId"] = newGlobalObjectiveId;
             job.AddItem("LearnerGlobalObjectiveItem", propertyValues);
             
             // Execute the job, which adds all the items
             job.Execute();
             </code>
             Operations in a job may return results.  For example, the "add item" operation,
             with the correct parameters, can return the Id of the added item.  If multiple
             operations are added to a job, the results are returned in the order
             of the operations performed.  Example:
             <code language="C#">
             // Create the job
             LearningStoreJob job = store.CreateJob();
            
             // Add the first "add" operation that adds the user
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             LearningStoreItemIdentifier newUserId = job.AddItem("UserItem", propertyValues, true); // passing true forces the operation to return the Id of the new item in the store in the results
            
             // Add the second "add" operation that adds the global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Key"] = "MyGlobalObjective";
             propertyValues["Description"] = "MyGlobalObjective Description";
             LearningStoreItemIdentifier newGlobalObjectiveId = job.AddItem("GlobalObjectiveItem", propertyValues);  
            
             // Add the third "add operation" that adds the learner global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["LearnerId"] = newUserId;
             propertyValues["GlobalObjectiveId"] = newGlobalObjectiveId;
             job.AddItem("LearnerGlobalObjectiveItem", propertyValues, true); // passing true forces the operation to return the Id of the new item in the store in the results
             
             // Execute the job, which adds all the items
             ReadOnlyCollection&lt;object&gt; results = job.Execute();
             </code>
             After the code above is executed, results[0] contains the Id of the user
             (the first operation that returns a result), and results[1] contains the Id of the
             learner global objective (the second operation that returns a result).  See the
             specific methods for more information about what results are returned
             (e.g., see the <Mth>AddItem</Mth> method for more information about the results
             that are returned when adding an item).
             <p/>
             See the <Mth>Execute</Mth> method documentation for more information about
             executing jobs, including information about how jobs interact with
             transactions.
             </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.DeadlockAttemptsBeforeFailing">
            <summary>
            Number of retries before failing due to a deadlock
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.MaximumSqlParameters">
            <summary>
            Maximum number of parameters that should be send in a SQL batch.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_store">
            <summary>
            The store on which this job was created
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_schema">
            <summary>
            The schema for <Fld>m_store</Fld>
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_connectionString">
            <summary>
            The connection string for <Fld>m_connectionString</Fld>
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_debugLog">
            <summary>
            Location in which to write the information sent to/from SQL
            </summary>
            <remarks>
            null if the information shouldn't be written.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_locale">
            <summary>
            Locale used to convert to/from strings
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_userKey">
            <summary>
            User key of user performing the job
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_disableSecurityChecks">
            <summary>
            True if security checks should be skipped
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_impersonationBehavior">
            <summary>
            Impersonation behavior
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_uniqueNameIndex">
            <summary>
            Id used to create unique variable/parameter names
            </summary>
            <remarks>
            Incremented whenever a new name is created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_commandFragments">
            <summary>
            Command fragments that will be executed when the job is executed
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.m_addedItemIds">
            <summary>
            List of items being added during this job.
            </summary>
            <remarks>
            The key is the RawKey of the LearningStoreItemIdentifier returned from the method that
            was adding the item (e.g., AddItem).  The value is the parameter containing
            that Id in SQL.<p/>
            Used so e.g., a user can add two related items in one job.<p/>
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.#ctor(Microsoft.LearningComponents.Storage.LearningStore,System.String,Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Globalization.CultureInfo,System.IO.TextWriter,System.String,System.Boolean,Microsoft.LearningComponents.ImpersonationBehavior)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreJob</Typ> class.
            </summary>
            <param name="store">Store on which the job should be created.</param>
            <param name="connectionString">Connection string to use when connecting to the database.</param>
            <param name="schema">The schema in the store.</param>
            <param name="locale">Locale to use when converting to/from strings.</param>
            <param name="debugLog">Location in which to write the data being sent to/from SQL.</param>
            <param name="userKey">User key of user</param>
            <param name="disableSecurityChecks">True if security checks should be skipped</param>
            <param name="impersonationBehavior">Identifies which <c>WindowsIdentity</c> is used to
                access the database when impersonation is involved.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CreateVariableName">
            <summary>
            Create a unique variable name
            </summary>
            <returns>A new variable name that can be used within the SQL text.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AppendCommandFragment(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter},Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter,Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult)">
            <summary>
            Append a command fragment to the job.  The fragment will be executed when
            the job is executed.
            </summary>
            <param name="commandText">Text for the fragment.</param>
            <param name="inputParameters">Input parameters for the fragment.</param>
            <param name="outputParameter">Output parameter for the fragment.</param>
            <param name="result">Result for the fragment.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CreateParameter(System.Data.SqlDbType,System.Object)">
            <summary>
            Create a new parameter for a <Typ>CommandFragment</Typ>.
            </summary>
            <param name="dbType">Type of the parameter.</param>
            <param name="value">Initial value for the parameter</param>
            <returns>A new parameter.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CreateItemIdentifierResult(Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Create a new result for a <Typ>CommandFragment</Typ>.  The result
            contains a <Typ>LearningStoreItemIdentifier</Typ>.
            </summary>
            <param name="itemType">Item type that will be returned in the result.</param>
            <returns>A new result</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CreateDataTableResult(System.Collections.Generic.IList{Microsoft.LearningComponents.Storage.LearningStoreViewColumn})">
            <summary>
            Create a new result for a <Typ>CommandFragment</Typ>.  The result
            contains a <Typ>/System.DataTable</Typ>
            </summary>
            <param name="columns">Columns that will be returned in the result.</param>
            <returns>A new result.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.ResetOutputParameterCurrentValues">
            <summary>
            Reset all the output parameters in all the command fragments to their
            initial value
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.TryGetTextForIdentifier(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,System.Collections.Generic.List{Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter},System.String@)">
            <summary>
            Try to return <paramref name="id"/> as a string that can be used within
            SQL command text.
            </summary>
            <remarks>
            May add a parameter to <paramref name="parameters"/>
            </remarks>
            <param name="id">Id</param>
            <param name="parameters">List of parameters for the current command.
                This method may add an item to this list.  This method will not
                read items from this list.</param>
            <param name="valueText">Output text</param>
            <returns>True if the operation succeeded, or false if <paramref name="id"/>
               refers to an id that isn't already being added in this job.</returns>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.TryGetTextForValue(Microsoft.LearningComponents.Storage.LearningStoreValueType,System.Object,System.Collections.Generic.List{Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter},System.String@)">
            <summary>
            Try to return <paramref name="value"/> as a string that can be used within
            SQL command text.
            </summary>
            <param name="valueType">Type of the value in <paramref name="value"/></param>
            <param name="value">Value</param>
            <param name="parameters">List of parameters for the current command.
                This method may add an item to this list.  This method will not
                read items from this list.</param>
            <param name="valueText">Output text</param>
            <returns>True if the operation succeeded, or false if <paramref name="valueType"/>
               refers to an id that isn't already being added in this job.</returns>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.Execute">
            <summary>
            Execute the commands in the job
            </summary>
            <returns>A collection of output data from the job</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">
                The job failed because an item was not found in the store.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException">
                The job failed because of a constraint violation.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreSecurityException">
                The job failed because a security check failed.</exception>
            <exception cref="T:System.InvalidOperationException">An AddOrUpdateItem command failed
                because multiple matching items were found.</exception>
            <remarks>
            See the <Typ>LearningStoreJob</Typ> documentation for more information
            about jobs.
            <p/>
            This method participates in transactions as follows:<ul>
            <li>If this method is executed within a <Typ>LearningStoreTransactionScope</Typ>,
                the job participates in that transaction.  If the job fails, the
                transaction is rolled back.  If a SQL deadlock occurs when executing
                the job and the job is chosen as the deadlock victim, the caller
                will receive a <Typ>SqlException</Typ>.</li>
            <li>If this method is not executed within a <Typ>LearningStoreTransactionScope</Typ>,
                then a new serializable transaction is created and used.  If the job
                succeeds, the transaction is committed.  If the job fails, the
                transaction is rolled back.  If a SQL deadlock occurs when
                executing the job and the job is chosen as the deadlock victim,
                the job is retried several times.</li>
            </ul>
            </remarks>
            <example>
            The following code adds a new user to the store specified by "store":
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
            propertyValues["Name"] = "John Doe";
            propertyValues["Key"] = "Company\JohnDoe";
            LearningStoreJob job = store.CreateJob();
            job.AddItem("UserItem", propertyValues);
            ReadOnlyCollection&lt;object&gt; results = job.Execute();
            </code>
            After this code is executed, results[0] contains a
            <Typ>LearningStoreItemIdentifier</Typ> for the newly-added item.
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.Execute``1">
            <summary>
            Execute the commands in the job.
            </summary>
            <typeparam name="T">The result type.</typeparam>
            <returns>The single piece of output data from the job</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">
                The job failed because an item was not found in the store.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException">
                The job failed because of a constraint violation.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreSecurityException">
                The job failed because a security check failed.</exception>
            <exception cref="T:System.InvalidOperationException">The job successfully executed but
                there was more than one piece of output data or the output data couldn't be
                cast to the specified type, or  an AddOrUpdateItem command failed
                because multiple matching items were found.</exception>
            <seealso cref="M:Microsoft.LearningComponents.Storage.LearningStoreJob.Execute"/>
            <remarks>
            Calls <Mth>Execute</Mth> and then casts the result to type <typeparamref name="T"/>.
            If the result can't be cast to type <typeparamref name="T"/>, or there is more
            than one result, an exception is thrown.
            </remarks>
            <example>
            The following code adds a new user to the store specified by "store":
            <code language="C#">
            LearningStore store = new LearningStore("Server=Learning;Database=Mls;Integrated Security=true", "Bob");
            Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
            propertyValues["Name"] = "John Doe";
            propertyValues["Key"] = "Company\JohnDoe";
            LearningStoreJob job = store.CreateJob();
            job.AddItem("UserItem", propertyValues);
            LearningStoreItemIdentifier id = job.Execute&lt;LearningStoreItemIdentifier&gt;();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddItem(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add a new item
            </summary>
            <param name="itemTypeName">The name of the item type to add</param>
            <param name="propertyValues">Property values for the item.</param>
            <returns>A temporary <Typ>LearningStoreItemIdentifier</Typ> that identifies the
                item being added.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="itemTypeName"/> or <paramref name="propertyValues"/>is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">The item type
                in <paramref name="itemTypeName"/> doesn't exist in the store, a
                property name passed in <paramref name="propertyValues"/>
                doesn't exist on the item type, a property value passed in
                <paramref name="propertyValues"/> is not a valid value for the
                corresponding property, or a required property wasn't passed in
                <paramref name="propertyValues"/>.
            </exception>
            <remarks>
            Calls <Mth>AddItem</Mth>(<paramref name="itemTypeName"/>, <paramref name="propertyValues"/>, false).
            See that overload for more details.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddItem(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
             <summary>
             Add a new item to a store.
             </summary>
             <param name="itemTypeName">The name of the item type to add</param>
             <param name="propertyValues">Property values for the item.  The key is the
                 property name, and the value is the value to be placed in the property.</param>
             <param name="requestItemId">If true, a <Typ>LearningStoreItemIdentifier</Typ> 
                 for the newly-added item in the store will be returned in the results.</param>
             <returns>A temporary <Typ>LearningStoreItemIdentifier</Typ> that identifies the
                 item being added.  This value may be used to reference the item in other
                 commands in this job, but it becomes invalid after the job has been executed.  To
                 retrieve a <Typ>LearningStoreItemIdentifier</Typ> that is valid after
                 the job has been executed, call this method with <paramref name="requestItemId"/>=true,
                 and the <Typ>LearningStoreItemIdentifier</Typ> will be returned as one of the
                 results of the job.
             </returns>
             <exception cref="T:System.ArgumentNullException"><paramref name="itemTypeName"/> or
                 <paramref name="propertyValues"/>is a null reference.</exception>
             <exception cref="T:System.InvalidOperationException">The item type
                 in <paramref name="itemTypeName"/> doesn't exist in the store, a
                 property name passed in <paramref name="propertyValues"/>
                 doesn't exist on the item type, a property value passed in
                 <paramref name="propertyValues"/> is not a valid value for the
                 corresponding property, or a required property wasn't passed in
                 <paramref name="propertyValues"/>.
             </exception>
             <remarks>
             Steps required to add a new item to a store:<ul>
             <li>Create a Dictionary&lt;string,object&gt; containing the property values.</li>
             <li>Call this method to add the "add item" operation to a job.</li>
             <li>Execute the job.  After this step completes, the item actually appears
             in the store.</li>
             </ul>
             <paramref name="propertyValues"/> should contain one entry for each property
             that should have a non-default value.  The value type differs depending on
             the type of the property on the item:
             <ul>
             <li><b>Boolean:</b> A System.Boolean, or an object that can be converted into
                 a System.Boolean using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>ByteArray</b> A System.Byte array.</li>
             <li><b>DateTime:</b> A System.DateTime, or an object that can be converted into
                 a System.DateTime using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>Double:</b> A System.Double, or an object that can be converted into
                 a System.Double using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>Enumeration:</b> An System.Int32, or an object that can be converted into
                 a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>Guid</b> A System.Guid or a string representing a Guid.</li>
             <li><b>Item identifier:</b> A <Typ>LearningStoreItemIdentifier</Typ> 
                 of the associated item type.</li>
             <li><b>Int32:</b> A System.Int32, or an object that can be converted into
                 a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>Single:</b> A System.Single, or an object that can be converted into
                 a System.Single using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>String:</b> A System.String, or an object that can be converted into
                 a System.String using <Typ>/System.IConvertible</Typ>.</li>
             <li><b>Xml:</b> A <Typ>LearningStoreXml</Typ>.</li>
             </ul>
             Null or DBNull.Value are also permitted, assuming that the property is nullable.
             <para/>
             This operation returns a <Typ>LearningStoreItemIdentifier</Typ> as a result
             if <paramref name="requestItemId"/> is true.  It returns nothing as a result
             if <paramref name="requestItemId"/> is false.
             </remarks>
             <example>
             The following code adds a new user item to the store specified by "store":
             <code language="C#">
             // Create the property values
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             
             // Create a job and add the "add item" operation
             LearningStoreJob job = store.CreateJob();
             job.AddItem("UserItem", propertyValues, false);
             
             // Execute the job
             job.Execute();
             </code>
             The following code adds a new user item to the store specified by "store"
             and returns the Id of the newly-added item:
             <code language="C#">
             // Create the property values
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             
             // Create a job and add the "add item" operation
             LearningStoreJob job = store.CreateJob();
             job.AddItem("UserItem", propertyValues, true);
             
             // Execute the job, asking for a Id to be returned
             LearningStoreItemIdentifier id = job.Execute&lt;LearningStoreItemIdentifier&gt;();
             </code>
             The following code adds a new user, a new global objective item, and a new
             learner global objective item:
             <code language="C#">
             // Create the job
             LearningStoreJob job = store.CreateJob();
            
             // Add the first "add" operation that adds the user
             Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Name"] = "John Doe";
             propertyValues["Key"] = "Company\JohnDoe";
             LearningStoreItemIdentifier newUserId = job.AddItem("UserItem", propertyValues, true);
            
             // Add the second "add" operation that adds the global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["Key"] = "MyGlobalObjective";
             propertyValues["Description"] = "MyGlobalObjective Description";
             LearningStoreItemIdentifier newGlobalObjectiveId = job.AddItem("GlobalObjectiveItem", propertyValues, true);
            
             // Add the third "add operation" that adds the learner global objective
             propertyValues = new Dictionary&lt;string,object&gt;();
             propertyValues["LearnerId"] = newUserId;
             propertyValues["GlobalObjectiveId"] = newGlobalObjectiveId;
             job.AddItem("LearnerGlobalObjectiveItem", propertyValues, true);
             
             // Execute the job, which adds all the items
             ReadOnlyCollection&lt;object&gt; results = job.Execute();
             </code>
             After this code is executed, results[0] contains the Id of the new user,
             results[1] contains the Id of the new global objective, and results[2] contains
             the Id of the new learner global objective.
             </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateItem(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Update properties on an item
            </summary>
            <param name="id">Identifies the item being updated.</param>
            <param name="propertyValues">Property values to be updated.  The key is the
                property name, and the value is the value to be placed in the property.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> or
                <paramref name="propertyValues"/> is a null reference.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">
                The item was not found in the store.</exception>
            <exception cref="T:System.InvalidOperationException">A
                property name passed in <paramref name="propertyValues"/>
                doesn't exist on the item or a property value passed in
                <paramref name="propertyValues"/> is not a valid value for the
                corresponding property.
            </exception>
            <remarks>
            Steps required to update an item in the store:<ul>
            <li>Create a Dictionary&lt;string,object&gt; containing the property values to
                be changed.</li>
            <li>Call this method to add the "update item" operation to a job.</li>
            <li>Execute the job.  After this step completes, the item is actually
            updated in the store.</li>
            </ul>
            <paramref name="propertyValues"/> should contain one entry for each property
            that should be changed.  The value type differs depending on
            the type of the property on the item:
            <ul>
            <li><b>Boolean:</b> A System.Boolean, or an object that can be converted into
                a System.Boolean using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>ByteArray</b> A System.Byte array.</li>
            <li><b>DateTime:</b> A System.DateTime, or an object that can be converted into
                a System.DateTime using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Double:</b> A System.Double, or an object that can be converted into
                a System.Double using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Enumeration:</b> An System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Guid</b> A System.Guid or a string representing a Guid.</li>
            <li><b>Item identifier:</b> A <Typ>LearningStoreItemIdentifier</Typ> 
                of the associated item type.</li>
            <li><b>Int32:</b> A System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Single:</b> A System.Single, or an object that can be converted into
                a System.Single using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>String:</b> A System.String, or an object that can be converted into
                a System.String using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Xml:</b> A <Typ>LearningStoreXml</Typ>.</li>
            </ul>
            Null or DBNull.Value are also permitted, assuming that the property is nullable.
            <para/>
            This operation does not return anything as a result.
            </remarks>
            <example>
            The following code updates the name of the user item with an Id of 50:
            <code language="C#">
            // Create the property values
            Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
            propertyValues["Name"] = "John Doe";
            
            // Create the job and add the "update properties" operation
            LearningStoreJob job = store.CreateJob();
            LearningStoreItemIdentifier id = new LearningStoreItemIdentifier("UserItem", 50);
            job.UpdateItem(id, propertyValues);
            
            // Execute the job
            job.Execute();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DeleteItem(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Delete an item
            </summary>
            <param name="id">Identifies the item to be deleted</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null reference.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">
                The item was not found in the store.</exception>
            <remarks>
            Steps required to delete an item from the store:<ol>
            <li>Create a <Typ>LearningStoreItemIdentifier</Typ> identifying the item,
            either by calling the <Typ>LearningStoreItemIdentifier</Typ> constructor
            or by retrieving the value from elsewhere.</li>
            <li>Call this method to add the "delete item" operation to the job.</li>
            <li>Execute the job.</li>
            </ol>
            <p/>
            This operation does not return anything as a result.
            <p/>
            If other items reference <paramref name="id"></paramref>, and
            <paramref name="id"></paramref> is marked as the "container" of those
            items, then the other items are also deleted.
            </remarks>
            <example>
            The following code deletes the user with an Id of 50 from the store.
            <code language="C#">
            // Create the Id
            LearningStoreItemIdentifier id = new LearningStoreItemIdentifier("UserItem", 50);
            
            // Create the job and add the "delete item" operation
            LearningStoreJob job = store.CreateJob();
            job.DeleteItem(id);
            
            // Execute the job
            job.Execute();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.PerformQuery(Microsoft.LearningComponents.Storage.LearningStoreQuery)">
            <summary>
            Perform a query
            </summary>
            <param name="query">The query to be performed</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="query"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="query"/>
                was not created from this <Typ>LearningStore</Typ>, 
                or at least one output column was not specified in the query.
            </exception>
            <remarks>
            Steps required to perform a query:<ul>
            <li>Create a <Typ>LearningStoreQuery</Typ> object using
            <Mth>../LearningStore.CreateQuery</Mth>.</li>
            <li>Call methods on the <Typ>LearningStoreQuery</Typ> to add output columns,
            conditions, and sorting information.</li>
            <li>Call this method to add the "perform query" operation to a job.</li>
            <li>Execute the job.  A <Typ>/System.Data.DataTable</Typ> is returned
            as a result.</li>
            </ul><p/>
            The <Typ>/System.Data.DataTable</Typ> returned in the result contains
            one column for each output column added to the <Typ>LearningStoreQuery</Typ>
            using <Mth>../LearningStoreQuery.AddColumn</Mth>.  See
            <Mth>../LearningStoreQuery.AddCondition</Mth> for a list of the possible
            types that are returned.
            <p/>
            See the <Typ>LearningStoreQuery</Typ> documentation for more information
            about queries.
            </remarks>
            <example>
            The following code performs a query to retrieve the
            names of all the users:
            <code language="C#">
            // Create the query
            LearningStoreQuery query = store.CreateQuery("UserItem");
            
            // Add output columns to the query
            query.AddColumn("Name");
            
            // Create a job and add the "perform query" operation
            LearningStoreJob job = store.CreateJob();
            job.PerformQuery(query);
            
            // Execute the job
            DataTable result = job.Execute&lt;DataTable&gt;();
            </code>
            After this code is executed, <c>result</c> contains a DataTable
            with one column named "Name." The DataTable contains one row for every user.
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOrUpdateItem(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add an item, or update the item properties if the item already exists
            </summary>
            <param name="itemTypeName">The name of the item type to add</param>
            <param name="uniquePropertyValues">Property values that uniquely identify the item
                to be added or updated.</param>
            <param name="propertyValuesToUpdate">Property values to be updated if the item is updated,
                or set if the item is added.</param>
            <returns>A temporary <Typ>LearningStoreItemIdentifier</Typ> that identifies the
                item being added or updated.
            </returns>
            <remarks>
            Calls <Mth>AddOrUpdateItem</Mth>(<paramref name="itemTypeName"/>, <paramref name="uniquePropertyValues"/>,
            <paramref name="propertyValuesToUpdate"/>, null, false).
            See that overload for more details.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOrUpdateItem(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add an item, or update the item properties if the item already exists
            </summary>
            <param name="itemTypeName">The name of the item type to add</param>
            <param name="uniquePropertyValues">Property values that uniquely identify the item
                to be added or updated.</param>
            <param name="propertyValuesToUpdate">Property values to be updated if the item is updated,
                or set if the item is added.</param>
            <param name="propertyValuesForAdd">Property values to be set if the item is added.</param>
            <returns>A temporary <Typ>LearningStoreItemIdentifier</Typ> that identifies the
                item being added or updated.
            </returns>
            <remarks>
            Calls <Mth>AddOrUpdateItem</Mth>(<paramref name="itemTypeName"/>, <paramref name="uniquePropertyValues"/>,
            <paramref name="propertyValuesToUpdate"/>, <paramref name="propertyValuesForAdd"/>, false).
            See that overload for more details.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOrUpdateItem(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
             <summary>
             Add an item, or update the item properties if the item already exists
             </summary>
             <param name="itemTypeName">The name of the item type to add</param>
             <param name="uniquePropertyValues">Property values that uniquely identify the item
                 to be added or updated.  The key is the property name, and the value is the value
                 of the property.</param>
             <param name="propertyValuesToUpdate">Property values to be updated if the item is updated,
                 or set if the item is added.  The key is the property name, and the value is the value
                 to be placed in the property.</param>
             <param name="propertyValuesForAdd">Property values to be set if the item is added.
                 The key is the property name, and the value is the value to be placed in the property.
                 If null, then no extra values will be set if the item is added.</param>
             <param name="requestItemId">If true, a <Typ>LearningStoreItemIdentifier</Typ> 
                 for the newly-added item or updated item in the store will be returned in the results.</param>
             <returns>A temporary <Typ>LearningStoreItemIdentifier</Typ> that identifies the
                 item being added or updated.  This value may be used to reference the item in other
                 commands in this job, but it becomes invalid after the job has been executed.  To
                 retrieve a <Typ>LearningStoreItemIdentifier</Typ> that is valid after
                 the job has been executed, call this method with <paramref name="requestItemId"/>=true,
                 and the <Typ>LearningStoreItemIdentifier</Typ> will be returned as one of the
                 results of the job.
             </returns>
             <exception cref="T:System.ArgumentException"><paramref name="uniquePropertyValues"/> must contain
                 at least one value.</exception>
             <exception cref="T:System.ArgumentNullException"><paramref name="itemTypeName"/> or <paramref name="uniquePropertyValues"/>
                 or <paramref name="propertyValuesToUpdate"/> is a null reference.</exception>
             <exception cref="T:System.InvalidOperationException">The item type
                 in <paramref name="itemTypeName"/> doesn't exist in the store, a
                 property name passed in <paramref name="uniquePropertyValues"/>,
                 <paramref name="propertyValuesToUpdate"/> or <paramref name="propertyValuesForAdd"/>
                 doesn't exist on the item type, a property value passed in <paramref name="uniquePropertyValues"/>,
                 <paramref name="propertyValuesToUpdate"/> or <paramref name="propertyValuesForAdd"/> is not a valid
                 value for the corresponding property, or a required property value wasn't passed in.
             </exception>
             <remarks>
             Steps required to add or update an item in a store:<ul>
             <li>Create a Dictionary&lt;string,object&gt; containing the property values that
             uniquely identify the item.</li>
             <li>Create a Dictionary&lt;string,object&gt; containing the property values that
             should be set if the item exists or is added.</li>
             <li>Create a Dictionary&lt;string,object&gt; containing the property values that
             should be set if the item is added.</li>
             <li>Call this method to add the "add or update item" operation to a job.</li>
             <li>Execute the job.  After this step completes, the updated/added item actually
             appears in the store.</li>
             </ul>
             If the item is added, then the values from <paramref name="uniquePropertyValues"/>,
             <paramref name="propertyValuesToUpdate"/>, and <paramref name="propertyValuesForAdd"/> are
             stored in the new item.  If the item is updated, then the values from
             <paramref name="propertyValuesToUpdate"/> are updated on the item.  The entries in
             <paramref name="uniquePropertyValues"/>, <paramref name="propertyValuesToUpdate"/>, and
             <paramref name="propertyValuesForAdd"/> must have values that are valid for
             the corresponding property.  See <Mth>AddItem</Mth> for a list of the valid property
             types.  Since the Id property is automatically generated and can not
             be changed, <paramref name="uniquePropertyValues"/>, <paramref name="propertyValuesToUpdate"/>,
             and <paramref name="propertyValuesForAdd"/> can not contain a value for the Id property.
             If an item is added and a value for a property isn't provided, then the
             default value for the property is used.
             <para/>
             If more than one item matches <paramref name="uniquePropertyValues"/> when the job is executed,
             then an <Typ>/System.InvalidOperationException</Typ> is thrown.
             <para/>
             This operation returns a <Typ>LearningStoreItemIdentifier</Typ> as a result
             if <paramref name="requestItemId"/> is true.  It returns nothing as a result
             if <paramref name="requestItemId"/> is false.
             </remarks>
             <example>
             The following code searches for the user item with a User key "Company\JDoe"
             in the store specified by "store."  If the item exists, then the name is changed
             to "John Doe."  If the item does not exist, then a new user item is created
             with the key "Company\JDoe", the name "John Doe", and an AudioLevel of 0.5:
             <code language="C#">
             // Create the unique values
             Dictionary&lt;string,object&gt; uniqueValues = new Dictionary&lt;string,object&gt;();
             uniqueValues["Key"] = "Company\JDoe";
             
             // Create the property values to be updated
             Dictionary&lt;string,object&gt; updateValues = new Dictionary&lt;string,object&gt;();
             updateValues["Name"] = "John Doe";
             
             // Create the property values to be set if the item is added
             Dictionary&lt;string,object&gt; addValues = new Dictionary&lt;string,object&gt;();
             addValues["AudioLevel"] = 0.5;
            
             // Create a job and add the "add or update item" operation
             LearningStoreJob job = store.CreateJob();
             job.AddOrUpdateItem("UserItem", uniqueValues, updateValues, addValues, false);
             
             // Execute the job
             job.Execute();
             </code>
             </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRight(System.String)">
            <summary>
            Demand a right.  When the job is executed, the job will be
            aborted unless the current user has the specified right.
            </summary>
            <param name="rightName">The name of the right to demand</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rightName"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">The right
                in <paramref name="rightName"/> doesn't exist in the store.
            </exception>
            <remarks>
            Calls <Mth>DemandRight</Mth>(<paramref name="rightName"/>, null).
            See that overload for more details.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRight(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Demand a right.  When the job is executed, the job will be
            aborted unless the current user has the specified right.
            </summary>
            <param name="rightName">The name of the right to demand</param>
            <param name="parameterValues">Extra information used to determine if the current user
                has the right, or null if no extra information is provided.  The key is the
                parameter name, and the value is the value for the parameter.  If a value for a
                particular parameter isn't provided, a value of null is assumed.  See the
                documentation for the right specified by <paramref name="rightName"/>
                for a list of parameters accepted by that right.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="rightName"/>
                is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">The right
                in <paramref name="rightName"/> doesn't exist in the store, a
                parameter name passed in <paramref name="parameterValues"/>
                doesn't exist on the right, or a parameter value passed in
                <paramref name="parameterValues"/> is not a valid value for the
                corresponding parameter.
            </exception>
            <remarks>
            Steps required to demand a right:<ul>
            <li>Create a Dictionary&lt;string,object&gt; containing the parameter values.</li>
            <li>Call this method to add the "demand right" operation to a job.</li>
            <li>Execute the job.  If the current user has the right, then the execution
            succeeds.  If the current user does not have the right, then a
            LearningStoreSecurityException is thrown.</li>
            </ul>
            <paramref name="parameterValues"/> should contain one entry for each parameter
            that should have a non-null value.  The value type differs depending on
            the type of the property on the item.  See <Mth>../LearningStoreQuery.SetParameter</Mth>
            for more details.
            </remarks>
            <example>
            The following code demands that the user has the "ReadPackageRight" for the package
            specified by "packageId".  If the user has the right, then the location of the
            package is retrieved.  If the user doesn't have the right, then an exception is thrown.
            <code language="C#">
            // Create a job
            LearningStoreJob job = store.CreateJob();
            
            // Create the parameters for the demand
            Dictionary&lt;string,object&gt; parameterValues = new Dictionary&lt;string,object&gt;();
            parameterValues["PackageId"] = packageId;
            
            // Demand the right
            job.DemandRight("ReadPackageRight", parameterValues);
            
            // Create the query that will return the location
            LearningStoreQuery query = store.CreateQuery("PackageItem");
            query.AddColumn("Location");
            query.AddCondition("Id", LearningStoreConditionOperator.Equal, packageId);
            job.PerformQuery(query);
            
            // Execute the job
            DataTable result = job.Execute&lt;DataTable&gt;();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DisableFollowingSecurityChecks">
            <summary>
            Disable security checks for the operations added to the job after
            this call.
            </summary>
            <example>
            The following code demands that the user has the "ReadPackageRight" for the package
            specified by "packageId".  If the user has the right, then then the security checks are disabled
            for the rest of the job.  If the user doesn't have the right, then an exception is thrown.
            <code language="C#">
            // Create a job
            LearningStoreJob job = store.CreateJob();
            
            // Create the parameters for the demand
            Dictionary&lt;string,object&gt; parameterValues = new Dictionary&lt;string,object&gt;();
            parameterValues["PackageId"] = packageId;
            
            // Demand the right
            job.DemandRight("ReadPackageRight", parameterValues);
            
            // Skip security checks for the rest of the job
            job.DisableFollowingSecurityChecks();
            
            // Add other operations to the job.  No security checks will happen
            // on these operations.
            
            // Execute the job
            job.Execute();
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.EnableFollowingSecurityChecks">
            <summary>
            Enable security checks for the operations added to the job after
            this call.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.SecurityChecksDisabled">
            <summary>
            Are security checks disabled?
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment">
            <summary>
            Represents a fragment of SQL that will be executed when the
            job is executed. 
            </summary>
            <remarks>
            The fragment consists of:<p/>
            1) Command text.  The text must follow the following rules:<p/>
            1a) All variables declared in the text must be unique.  This
                can be guaranteed by using the CreateVariableName method.<p/>
            1b) BEGIN TRANSACTION, COMMIT TRANSACTION, and ROLLBACK TRANSACTION
                must not be used.  All commands already run within a transaction.
                <p/>
            1c) RAISERROR('LSERROR',...) can be used to throw a
                LearningStore-specific exception.  If state=1, a
                LearningStoreItemNotFoundException is thrown.  If state=2,
                an InvalidOperationException is thrown.  If state=3,
                a LearningStoreSecurityException is thrown.<p/>
            1d) The variables @LastError, @LastRowCount, and @UserKey should not be defined.<p/>
            2) A set of input parameters.  These should be created
               using the CreateParameter method.  If Parameter.Name
               is read in the SQL code, the current value of the
               parameter will be returned.<p/>
            3) An optional output parameter.  This should be created
               using the CreateParameter method.  If
               Parameter.Name is written in the SQL code, the current
               value of the parameter will be changed.<p/>
            4) An option result that will be returned to the caller.
               This should be created using the Create*Result
               methods.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.m_commandText">
            <summary>
            Command text
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.m_inputParameters">
            <summary>
            Input parameters
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.m_outputParameter">
            <summary>
            Output parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.m_result">
            <summary>
            Result
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.#ctor(System.String,System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter},Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter,Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult)">
            <summary>
            Constructor
            </summary>
            <param name="commandText"></param>
            <param name="inputParameters"></param>
            <param name="outputParameter"></param>
            <param name="result"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.CommandText">
            <summary>
            Command text
            </summary>    
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.InputParameters">
            <summary>
            Input parameters
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.OutputParameter">
            <summary>
            Output parameters
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragment.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter">
            <summary>
            Represents a parameter that can be attached to CommandFragment(s).
            </summary>
            <remarks>
            Parameters can be "input only" or "input/output,"
            depending on how they are used in the job's
            CommandFragments.  If a parameter is never used as an
            output parameter, then it is "input only."  If a
            parameter is used as an output parameter, then it
            is "input/output."
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.m_dbType">
            <summary>
            SQL type of the parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.m_name">
            <summary>
            SQL name of the parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.m_initialValue">
            <summary>
            Initial value
            </summary>
            <remarks>
            Should never be null (but DBNull.Value is allowed)
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.m_currentValue">
            <summary>
            Current value
            </summary>
            <remarks>
            For "input only" parameters, this is always equal to
            <Fld>m_initialValue</Fld>.  For "input/output" parameters,
            this value could change during job execution.
            Should never be null (by DBNull.Value is allowed)
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.#ctor(System.Data.SqlDbType,System.String,System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="dbType"></param>
            <param name="name"></param>
            <param name="initialValue"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.InitialValue">
            <summary>
            Initial Value
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.DbType">
            <summary>
            SQL type of the parameter
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentParameter.CurrentValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResultType">
            <summary>
            Represents the type of a result for a CommandFragment
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResultType.ItemIdentifier">
            <summary>
            One item identifier
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResultType.DataTable">
            <summary>
            One DataTable
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult">
            <summary>
            Represents a result for a CommandFragment
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.m_resultType">
            <summary>
            Type of the result
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.m_itemType">
            <summary>
            Item type of the result.
            </summary>
            <remarks>
            Valid only when <Fld>m_resultType</Fld>=ItemIdentifier
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.m_columns">
            <summary>
            Columns for the result
            </summary>
            <remarks>
            Valid only when <Fld>m_resultType</Fld>=DataTable
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.#ctor(Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResultType,Microsoft.LearningComponents.Storage.LearningStoreItemType,System.Collections.Generic.IList{Microsoft.LearningComponents.Storage.LearningStoreViewColumn})">
            <summary>
            Constructor
            </summary>
            <param name="resultType"></param>
            <param name="itemType"></param>
            <param name="columns"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.ResultType">
            <summary>
            Result type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.ItemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreJob.CommandFragmentResult.Columns">
            <summary>
            Columns
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock">
            <summary>
            Represents a block that checks the security for an add operation
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock.m_itemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock.m_propertyValues">
            <summary>
            Property values
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Constructor
            </summary>
            <param name="itemType">Item type of the table</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock.AddPropertyValue(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Add a property value
            </summary>
            <param name="property">Property</param>
            <param name="value">Text representing the property value.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddSecurityCheckBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock">
            <summary>
            Represents a block that performs an add operation (not including checking security or returning
            the identity of the added item)
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.m_tableName">
            <summary>
            Name of the table
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.m_columnNames">
            <summary>
            List of column names, seperated by commas
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.m_columnValues">
            <summary>
            List of values for each column seperated by commas
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.m_identityVariableName">
            <summary>
            Name of the SQL variable into which the identity of the
            new item should be placed
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.#ctor(System.String,System.String)">
            <summary>
            Create a new instance of the statement
            </summary>
            <param name="tableName">Name of the table</param>
            <param name="identityVariableName">Name of the variable into which the identity should be placed</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.AppendColumn(System.String,System.String)">
            <summary>
            Append a column
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="columnValue">Value for the column.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock">
            <summary>
            Represents a block that checks security for an add operation (optionally), performs the add operation,
            and then returns the identity as a result (optionally)
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.m_securityCheckBlock">
            <summary>
            Generates AddSecurityCheckBlock piece of code, or null if the AddSecurityCheckBlock
            isn't needed.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.m_addBlock">
            <summary>
            Generates AddBlock piece of code
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.m_identityVariableName">
            <summary>
            Name of the SQL variable into which the identity of the
            new item should be placed
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.m_requestIdentity">
            <summary>
            Should the identity be returned as a result set?
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemType,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="itemType">Item type being added</param>
            <param name="identityVariableName">Name of the variable into which the identity value should be placed</param>
            <param name="requestIdentity">True if the identity should be returned as a result set</param>
            <param name="disableSecurityChecks">True if security checks should be skipped</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.AppendColumn(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Append a column
            </summary>
            <param name="property">Property.</param>
            <param name="propertyValue">Value for the property.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.AddOperationBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock">
            <summary>
            Represents a block that checks the security for an update operation
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.m_itemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.m_idText">
            <summary>
            Text that identifies the ID of the item being updated.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.m_propertyValues">
            <summary>
            Property values
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemType,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="itemType">Item type of the table</param>            
            <param name="idText">Text that identifies the ID of the item being updated</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.AddPropertyValue(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Add a property value
            </summary>
            <param name="property">Property</param>
            <param name="value">Text representing the property value.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateSecurityCheckBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock">
            <summary>
            Represents a block that performs an update operation (not including checking security)
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.m_tableName">
            <summary>
            Name of the table
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.m_idText">
            <summary>
            Text that identifies the ID of the item being updated.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.m_assignments">
            <summary>
            Text of all the column=value values seperated by commas
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tableName">Name of the table</param>
            <param name="idText">Text that identifies the ID of the item being updated</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.AppendColumn(System.String,System.String)">
            <summary>
            Append a column
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="columnValue">Value for the column.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock">
            <summary>
            Represents a block that checks security for an update operation (optionally) and then performs the update operation
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock.m_securityCheckBlock">
            <summary>
            Generates UpdateSecurityCheckBlock piece of code, or null if the UpdateSecurityCheckBlock
            isn't needed.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock.m_updateBlock">
            <summary>
            Generates UpdateBlock piece of code
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemType,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="itemType">Item type being updated</param>
            <param name="idText">Text identifying the id of the item being updated</param>
            <param name="disableSecurityChecks">True if security checks should be skipped</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock.AppendColumn(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Append a column
            </summary>
            <param name="property">Property.</param>
            <param name="propertyValue">Value for the property.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOperationBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2">
            <summary>
            Represents a block that performs an update operation (not including checking security),
            does not verify that the item was updated
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.m_tableName">
            <summary>
            Name of the table
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.m_idText">
            <summary>
            Text that identifies the ID of the item being updated.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.m_assignments">
            <summary>
            Text of all the column=value values seperated by commas
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="tableName">Name of the table</param>
            <param name="idText">Text that identifies the ID of the item being updated</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.AppendColumn(System.String,System.String)">
            <summary>
            Append a column
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="columnValue">Value for the column.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateBlock2.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock">
            <summary>
            Represents a block that checks security for an update or add operation (optionally), performs the update or add operation,
            and then returns the identity as a result (optionally)
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_addSecurityCheckBlock">
            <summary>
            Generates AddSecurityCheckBlock piece of code, or null if the AddSecurityCheckBlock
            isn't needed.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_updateSecurityCheckBlock">
            <summary>
            Generates UpdateSecurityCheckBlock piece of code, or null if the UpdateSecurityCheckBlock
            isn't needed.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_addBlock">
            <summary>
            Generates AddBlock piece of code
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_updateBlock">
            <summary>
            Generates UpdateBlock2 piece of code
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_itemType">
            <summary>
            Item type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_identityVariableName">
            <summary>
            Name of the SQL variable into which the identity of the
            new/updated item should be placed
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_requestIdentity">
            <summary>
            Should the identity be returned as a result set?
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.m_whereChecks">
            <summary>
            Text of the checks related to the unique values in the WHERE clause, seperated by "AND"s
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemType,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="itemType">Item type being updated</param>
            <param name="identityVariableName">Name of the variable into which the identity value should be placed</param>
            <param name="requestIdentity">True if the id should be returned as a result.</param>
            <param name="disableSecurityChecks">True if security checks should be skipped</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.AppendUniqueColumn(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String,System.String)">
            <summary>
            Append a unique column
            </summary>
            <param name="property">Property.</param>
            <param name="op">Operator</param>
            <param name="propertyValue">Value for the property.</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.AppendUpdateColumn(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Append a column for update
            </summary>
            <param name="property">Property</param>
            <param name="propertyValue">Value for the property</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.AppendAddColumn(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty,System.String)">
            <summary>
            Append a column for add
            </summary>
            <param name="property">Property</param>
            <param name="propertyValue">Value for the property</param>            
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.UpdateOrAddOperationBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock">
            <summary>
            Represents a block that checks security for a query operation, and then executes
            the query operation.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_view">
            <summary>
            Name of the view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_selectClause">
            <summary>
            Text of the SELECT clause in the query
            </summary>            
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_whereClause">
            <summary>
            Text of the WHERE clause in the query
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_orderByClause">
            <summary>
            Text of the ORDER BY clause in the query
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_parameterValues">
            <summary>
            Text of the additional parameter values
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.m_disableSecurityChecks">
            <summary>
            Should security checks be skipped?  If true, the "IF NOT EXISTS" is not included
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreView,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="view">View</param>
            <param name="disableSecurityChecks">Should security checks be skipped?</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.AddParameterValue(Microsoft.LearningComponents.Storage.LearningStoreViewParameter,System.String)">
            <summary>
            Add a parameter value
            </summary>
            <param name="parameter">Parameter</param>
            <param name="value">Text representing the parameter value, or null to use the default</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.AppendSelect(System.String)">
            <summary>
            Append to the SELECT clause text
            </summary>
            <param name="column">Name of column from the view</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.AppendOrderBy(System.String,Microsoft.LearningComponents.Storage.LearningStoreSortDirection)">
            <summary>
            Append to the ORDER BY clause text
            </summary>
            <param name="column">Name of column from the view</param>
            <param name="direction">Direction</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.AppendWhere(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Append to the WHERE clause text
            </summary>
            <param name="column">Column to compare.</param>
            <param name="compareOperator">Comparison operator</param>
            <param name="compareText">Comparison value</param>
            <param name="includeOrIsNull">Include "OR IS NULL" in the query</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.QueryOperationBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock">
            <summary>
            Represents a block that executes a demand right operation
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.m_right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.m_parameterValues">
            <summary>
            Text of the additional parameter values
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.m_disableSecurityChecks">
            <summary>
            Should security checks be skipped?  If true, then the entire statement is skipped
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.#ctor(Microsoft.LearningComponents.Storage.LearningStoreRight,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="right">Right</param>
            <param name="disableSecurityChecks">Should security checks be skipped?</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.AddParameterValue(Microsoft.LearningComponents.Storage.LearningStoreRightParameter,System.String)">
            <summary>
            Add a parameter value
            </summary>
            <param name="parameter">Parameter</param>
            <param name="value">Text representing the parameter value, or null to use the default</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreJob.DemandRightOperationBlock.Write(System.Text.StringBuilder)">
            <summary>
            Write the output
            </summary>
            <param name="sb"></param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.FileSystemPackageStore">
            <summary>
            Class to import information if the information in the PackageItem table in LearningStore 
            refers to files stored in the filesystem. 
            </summary>
            <remarks>Using this class (as opposed to another PackageStoreclass) is determined by the schema
            installed into LearningStore. The packages being imported can exist anywhere, as long 
            as there is a PackageReader available to access it. In the case of the core schema, this 
            class is used if the PackageItem.Location column contains information about file path locations 
            of the package files.
            <p/>
            In this design, LearningStore contains information that points to 
            a location on the file system. The actual resource files are then stored on the file system. 
            The manifest is *not* stored in the file system, but rather is stored in the database both 
            in a complete form as an xml column, as well as read and imported into a variety of columns 
            in LearningStore. 
            There is no copy of package resource files stored in LearningStore. 
            
            <p/>
            One reason for copying the package files to an application-specific location is so that 
            the source package files can exist in any package format. For instance, an application may 
            import a package in zip format (using ZipPackageReader) to LearningStore. When the package
            is added, it is unzipped and stored in the basePath location.
            
            <p/>
            When the package is added to LearningStore, the files are copied into the basePath location. 
            The manifest information is read and then stored in appropriate tables in LearningStore
            and the manifest xml is also stored in an xml column in LearningStore. This happens using
            ImportManifest() method. Any changes to the source files once the package has 
            been added to this PackageStore do not affect the information stored in LearningStore
            and are not available to be read using this PackageStore.
            
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.#ctor(Microsoft.LearningComponents.Storage.LearningStore,System.String,Microsoft.LearningComponents.ImpersonationBehavior)">
            <summary>
            Constructor that creates a FileSystemPackageStore.
            </summary>
            <param name="learningStore">The <c>LearningStore</c> where packages in this store
            are kept.</param>
            <param name="basePath">The base path to which files should be 'stored'. That is, the 
            Microsoft Learning Components
            core schema defines a base path for all packages. When packages are imported
            into LearningStore, they are copied to a subdirectory of this basePath directory.Every 
            package is given a unique directory for its files when the package is added to the system. 
            The application should not modify files in this directory. The directory must exist
            before calling this constructor.
            </param>
            <param name="impersonationBehavior">A user that has read/write access to the <P>basePath</P>
            location. In some cases, the identity must also have permission to remove files from the <P>basePath</P>.
            The constructor does not verify all the permissions are available. If the identity does not have the 
            appropriate permissions, an exception may be thrown from other methods as those permissions are required.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown if any of the arguments is null.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown if <P>basePath</P> is not an absolute path 
            to an existing directory.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if <P>impersonationBehavior</P> does not have FileSystemRights.Read to the 
            <P>basePath</P> directory.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.AddPackage(Microsoft.LearningComponents.PackageReader,Microsoft.LearningComponents.Storage.PackageEnforcement)">
            <summary>
            Adds a package to PackageStore. The process of adding a package copies the package into a unique 
            directory the PackageStore base path. Any changes to the original file after the package is 
            added are not reflected in the store.        
            </summary>
            <param name="packageReader">The package to add to the store.</param>
            <param name="packageEnforcement">The settings to determine whether the package should be modified to 
            allow it to be added to the store.</param>
            <returns>The results of adding the package, including a log of any warnings or errors that occurred in the process.
            </returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.PackageImportException">Thrown if the package could not be added to the store. The exception may 
            include a log indicating a cause for the failure.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageReader"/> or <paramref name="packageEnforcement"/>
            is not provided.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.ImportFiles(Microsoft.LearningComponents.Storage.PackageItemIdentifier,Microsoft.LearningComponents.PackageReader)">
            <summary>
            Read the files from a package and import the package information into LearningStore. Only packages
            which may be executed can be imported into LearningStore.
            See the class overview information for details.
            </summary>
            <param name="packageReader">A reader to read the files in the package to be imported.</param>
            <param name="packageId">The identifier of the package whose files are being imported.</param>
            <returns>Returns the location of the package that was added.</returns>
            <remarks>
            <p/>This method copies all package files that are referenced in the manifest into a unique
            subdirectory in the basePath directory. 
            
            <p/>This method will validate that the package does not have any errors when it is 
            processed by the <c>PackageValidator</c> class. Warnings that occur during validaton
            will have no effect on adding the package.
            
            <p/>Only packages which can be excuted may be imported into LearningStore. A package may be 
            executed if there is at least one &lt;Organization&gt; nodes within it.
            
            <p/>This method creates a transaction, regardless of whether or not it is called within 
            a transaction.
            
            <p/>The identity passed to the constructor will be used to write the files to the file system. This
            account must have appropriate permissions to write to the basePath directory for the package store.
            
            <p/>The exceptions thrown by Directory.CreateDirectory() may also be thrown by this method.
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.PackageImportException">Thrown if the package to be added is not a 
            <c>PackageType.ContentAggregation</c> or does not contain
            at least one &lt;item&gt; node.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown if the identity used to create this object
            does not have sufficient permissions in the file system directory.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.CreatePackageDirectory(System.Int64,System.Int32)">
            <summary>
            Creates the directory for the package files. This method does not impersonate. 
            </summary>
            <param name="initialDirectorySuffix">The initial suffix for the directory. The 
            new directory will be DIR_PREFIXsuffix.</param>
            <param name="retries">The number of tries to find a unique directory name.</param>
            <returns>The path to the new directory.</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.PackageImportException">If the directory could not be created within the specified number
            of retries. (Note that other exceptions relating to security, etc, may also be thrown by the 
            Directory.CreateDirectory call.)</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.DeletePackage(Microsoft.LearningComponents.Storage.PackageItemIdentifier)">
            <summary>
            Delete a package that was previously added to the store. Deleted information cannot be recovered.
            </summary>
            <param name="packageId">The package to remove.</param>
            <remarks>
            <p/>If a file in the package cannot be deleted, the FileDeletionFailed event will be raised.
            </remarks>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if the <P>packageId</P> does not 
            represent a package in the store.</exception>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreConstraintViolationException">Thrown if the package cannot be deleted 
            from LearningStore because there are other items in the store that depend upon it. For instance,
            a package for which there are attempts in LearningStore, cannot be deleted.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.OnDeletionFailed(System.String,System.String)">
            <summary>
            Raises the DeletionFailed event.
            </summary>
            <param name="location">The location of the package which was being deleted.</param>
            <param name="errorMessage">The reason for the failure.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.DeleteFiles(System.String)">
            <summary>
            Remove the files of the specified package from the file system where they are stored. 
            Deleted files cannot be recovered.
            </summary>
            <param name="packageLocation">The unique location of the files to remove.</param>
            <remarks>
            If a file in the package could not be removed, a DeletionFailed event is raised. Regardless 
            of the number of files or directories that could not be deleted, only one event is raised on
            the first error encountered.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.RecursiveDelete(System.String)">
            <summary>
            Recursively delete the directory and all the files. If something cannot be deleted, the method does
            not catch any exceptions, so the cause of the failure will be contained in the system exception. This 
            method does not impersonate. 
            </summary>
            <param name="absDirectoryPath">The absolute path to the directory to remove.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.GetPackageReader(Microsoft.LearningComponents.Storage.PackageItemIdentifier)">
            <summary>
            Gets a package reader to read the package from the store.
            </summary>
            <param name="packageId">The unique identifier of the package to read.</param>
            <returns>A package reader to read the requested package</returns>
            <exception cref="T:Microsoft.LearningComponents.Storage.LearningStoreItemNotFoundException">Thrown if <paramref name="packageId"/>
            does not represent a package in the store.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileSystemPackageStore.GetPackageReader(Microsoft.LearningComponents.Storage.PackageItemIdentifier,System.String)">
            <summary>
            Return a PackageReader that can read files from a package that 
            is stored in LearningStore.
            </summary>
            <param name="packageId">The identifier of the package to be read.</param>
            <param name="packageLocation">The location information which defines 
            the location of the package. This is the value in the PackageItem.Location column in 
            LearningStore. It cannot be String.Empty.</param>
            <returns>A package reader for a package referenced in LearningStore.</returns>
            <remarks>
            </remarks>
        </member>
        <member name="E:Microsoft.LearningComponents.Storage.FileSystemPackageStore.FileDeletionFailed">
            <summary>
            Event handler for FileDeletionFailed event.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.AddPackageResult">
            <summary>
            Represents the results of adding a package to a PackageStore.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AddPackageResult.#ctor(Microsoft.LearningComponents.Storage.AddPackageReferenceResult)">
            <summary>
            Create an AddPackageResult from the results of adding a reference to a package in PackageStore.
            </summary>
            <param name="addReferenceResult">The results of adding a package reference to PackageStore.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AddPackageResult.#ctor(Microsoft.LearningComponents.Storage.PackageItemIdentifier,Microsoft.LearningComponents.ValidationResults)">
            <summary>
            Create an AddPackageResult object to encapsulate the results of adding a package.
            </summary>
            <param name="packageId">The packageId of the package that was added to the store. 
            This value is not validated to ensure that it represents 
            a package in LearningStore.</param>
            <param name="log">The log of errors and warnings that occurred during the course of adding the package to the store.
            This may not be null.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="packageId"/> or <paramref name="log"/>
            are not provided.</exception>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.AddPackageResult.PackageId">
            <summary>
            The reference that was added to PackageStore.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.AddPackageResult.Log">
            <summary>
            The log of errors and warnings that occurred in the course of adding the package to PackageStore.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.FileDeletionFailedEventArgs">
            <summary>
            The arguments passed to a DeletionFailedEventHandler when the event is raised.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.FileDeletionFailedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Create the arguments for the event handler.
            </summary>
            <param name="location">The location of the package that could not be deleted. The string cannot be null or empty.</param>
            <param name="message">A message indicating the cause of the failure. This may be null or empty.</param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.FileDeletionFailedEventArgs.Location">
            <summary>
            Gets the location of the package that could not be deleted. This should provide enough 
            information for the event handler to determine the file or directory that could not be deleted.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.FileDeletionFailedEventArgs.Message">
            <summary>
            A message indicating the cause of the failure.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode">
            <summary>
            Type of a property on an item or column in a view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.ItemIdentifier">
            <summary>
            A reference to another item
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.String">
            <summary>
            A string
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Boolean">
            <summary>
            A boolean
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.DateTime">
            <summary>
            A DateTime
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Single">
            <summary>
            A single
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Double">
            <summary>
            A double
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Enumeration">
            <summary>
            An enumeration
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Int32">
            <summary>
            An integer
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.ByteArray">
            <summary>
            A byte array
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueTypeCode.Guid">
            <summary>
            A guid
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.GlobalObjective">
            <summary>
            Represents a global objective in memory, corresponding to anything pointed to by a &lt;mapInfo&gt; tag.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.GlobalObjective.m_objectiveId">
            <summary>
            The unique identifier of the objective.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.GlobalObjective.m_satisfiedStatus">
            <summary>
            Whether or not the global objective is satisfied.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.GlobalObjective.m_normalizedMeasure">
            <summary>
            The normalized measure (between 0.0 and 1.0) of the objective.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.GlobalObjective.m_isChanged">
            <summary>
            Whether or not this objective has been changed since being read.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.GlobalObjective.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <Typ>GlobalObjective</Typ>.
            </summary>
            <param name="objectiveId">Unique identifier for the global objective.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.GlobalObjective.ClearChanged">
            <summary>
            Resets the objective (e.g. after a database write) to indicate that no changes have been made. 
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.GlobalObjective.ObjectiveId">
            <summary>
            Gets the unique identifier of the objective.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.GlobalObjective.SatisfiedStatus">
            <summary>
            Gets or sets whether or not the global objective is satisfied.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.GlobalObjective.NormalizedMeasure">
            <summary>
            Gets or sets the normalized measure (between 0.0 and 1.0) of the objective.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.GlobalObjective.IsChanged">
            <summary>
            Gets or sets whether or not this objective has been changed since being read.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.AttachmentWrapper">
            <summary>
            Wraps a GUID and provides an IAttachment interface to the data associated with that GUID in the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.AttachmentWrapper.m_guid">
            <summary>
            GUID of the attachment in the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.AttachmentWrapper.m_bytes">
            <summary>
            The actual bytes of the attachment data.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.AttachmentWrapper.m_store">
            <summary>
            LearningStore to load the data from.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.AttachmentWrapper.m_navigator">
            <summary>
            Navigator that is being used to access the data
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.AttachmentWrapper.m_internalActivityId">
            <summary>
            internal activity id that this attachment belongs to
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttachmentWrapper.#ctor(Microsoft.LearningComponents.Storage.DatabaseNavigator,Microsoft.LearningComponents.Storage.LearningStore,System.Guid,System.Int64)">
            <summary>
            Initializes a new attachment with a specific guid.
            </summary>
            <param name="navigator">Navigator used to access the data</param>
            <param name="store">LearningStore where the attachment is stored.</param>
            <param name="guid">GUID of the attachment in the database.</param>
            <param name="internalActivityId">Internal activity id used when saving attachments to the database.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttachmentWrapper.#ctor(System.Byte[],System.Int64)">
            <summary>
            Initializes a wrapper for a caller provided attachment.
            </summary>
            <param name="bytes">Actual bytes of the attachment.</param>
            <param name="internalActivityId">Internal activity id used when saving attachments to the database.</param>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.m_store">
            <summary>
            LearningStore used to read and write to the database.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.m_learnerId">
            <summary>
            Unique learner identifier from the database.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.ReadGlobalObjectiveFromLearningStore(System.String)">
            <summary>
            Reads the global objective information from LearningStore.
            </summary>
            <param name="globalObjective">Name of the global objective.  Null is not allowed.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.ReadGlobalObjectiveSatisfiedStatus(System.String,System.Boolean@)">
            <summary>
            Reads the Satisfied Status of the global objective specified, if any.
            </summary>
            <param name="globalObjective">Name of the global objective, if any.</param>
            <param name="satisfied">Where the result is stored, if it is read.</param>
            <returns>True if data was read, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.ReadGlobalObjectiveNormalizedMeasure(System.String,System.Single@)">
            <summary>
            Reads the Normalized Measure of the global objective specified, if any.
            </summary>
            <param name="globalObjective">Name of the global objective, if any.</param>
            <param name="measure">Where the result is stored, if it is read.</param>
            <returns>True if data was read, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.DatabaseNavigatorData.WriteGlobalObjectives(Microsoft.LearningComponents.Activity)">
            <summary>
            Writes the global objective information for all objectives associated with this activity, if any.
            </summary>
            <param name="activity">The activity whose objectives to save.</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreSchemaUtilities">
            <summary>
            Utility functions used by the other schema functionality
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchemaUtilities.IsIdentifierValid(System.String)">
            <summary>
            Determines if <paramref name="identifier"/> is a valid identifier
            </summary>
            <param name="identifier">Identifier to check</param>
            <returns>True if <paramref name="identifier"/> is a valid identifier</returns>
            <remarks>
            Used for item type names, enum names, property names, etc.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreValueType">
            <summary>
            Represents the type of a property on an item type or the type of a column in a view
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_schema">
            <summary>
            Schema in which this type exists
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_typeCode">
            <summary>
            Type code
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_nullable">
            <summary>
            Can null be stored in the type?
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_referencedItemTypeName">
            <summary>
            Name of the item type referenced by this type
            </summary>
            <remarks>
            Null unless <Fld>m_typeCode</Fld>=ItemIdentifier
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_enumTypeName">
            <summary>
            Name of the enum type referenced by this type
            </summary>
            <remarks>
            Null unless <Fld>m_typeCode</Fld>=Enumeration
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_enumType">
            <summary>
            Enum type referenced by this type
            </summary>
            <remarks>
            Null unless <Fld>m_typeCode</Fld>=Enumeration<p/>
            Filled in when first accessed.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreValueType.m_referencedItemType">
            <summary>
            Item type referenced by this type
            </summary>
            <remarks>
            Null unless <Fld>m_typeCode</Fld>=ItemIdentifier<p/>
            Filled in when first accessed.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreValueType.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreValueType.CastValue(System.Object,System.IFormatProvider,Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException)">
            <summary>
            Cast the passed-in value to a value that can be stored
            in something of this type
            </summary>
            <param name="value">Value to cast</param>
            <param name="formatprovider"><Typ>IFormatProvider</Typ> used to convert to/from strings</param>
            <param name="getCastException">Delegate used to create an Exception when an error is found.</param>
            <returns>The value cast to something of this type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreValueType.CreateIdValueType(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.String)">
            <summary>
            Create a new instance of <Typ>LearningStoreValueType</Typ>.  The new instance
            refers to an item type
            </summary>
            <param name="schema">Schema in which the type should be created.</param>
            <param name="referencedItemTypeName">Name of the item type to which
                the new type refers to.</param>
            <returns>The new <Typ>LearningStoreValueType</Typ></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreValueType.CreateValueType(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreValueType</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="schema">Schema in which the type should be created.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreValueType</Typ></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreValueType.CreateValueTypeForDefaultView(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty)">
            <summary>
            Create a new instance of <Typ>LearningStoreValueType</Typ> for a column
            in a default view
            </summary>
            <param name="property">Property that is being exposed.</param>
            <returns>The new <Typ>LearningStoreValueType</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreValueType.TypeCode">
            <summary>
            Type code
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreValueType.Nullable">
            <summary>
            Can null be stored in the type?
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreValueType.ReferencedItemType">
            <summary>
            Item type referenced by this type
            </summary>
            <remarks>
            Will throw an exception if <Prp>TypeCode</Prp>!=ItemIdentifier
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreValueType.EnumType">
            <summary>
            Enum type referenced by this type
            </summary>
            <remarks>
            Will throw an exception if <Prp>TypeCode</Prp>!=Enumeration
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException">
            <summary>
            If CastValue discovers an error, this delegate is called to
            retrieve the Exception that should be thrown.
            </summary>
            <param name="reason">Reason for the error</param>
            <param name="innerException">Inner exception, or null if none</param>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreEnumType">
            <summary>
            Represents an enumeration type in a schema
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreEnumType.m_name">
            <summary>
            Name of the enumeration type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreEnumType.m_valueMap">
            <summary>
            Dictionary mapping numeric value to value name
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreEnumType.m_values">
            <summary>
            List of all the numeric values in the enumeration type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreEnumType.m_valueNames">
            <summary>
            List of all the value names in the enumeration type
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreEnumType.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreEnumType.ContainsValue(System.Int32)">
            <summary>
            Checks if an enumerated type contains a value with the corresponding
            numeric value.
            </summary>
            <param name="value">Value to look for</param>
            <returns>True if the value exists in the enumerated type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreEnumType.CreateEnumType(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreEnumType</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="schema">Schema in which the type should be created.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreEnumType</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreEnumType.Name">
            <summary>
            Name of the enumeration type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreEnumType.Values">
            <summary>
            List of all the numeric values in the enumerated type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreEnumType.ValueNames">
            <summary>
            List of all the value names in the enumerated type
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty">
            <summary>
            Represents a property on an item type
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.m_name">
            <summary>
            Name of the property
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.m_valueType">
            <summary>
            Type of the property
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.m_hasDefaultValue">
            <summary>
            Does the property have a default value?
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.m_isId">
            <summary>
            Is the property the unique Id of the item type?
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.CastValue(System.Object,System.IFormatProvider,Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException)">
            <summary>
            Cast the passed-in value to a value that can be stored
            in a property of this type.
            </summary>
            <param name="value">Value to cast</param>
            <param name="formatprovider"><Typ>IFormatProvider</Typ> used to convert to/from strings</param>
            <param name="getCastException">Delegate called to retrieve the exception to be thrown on error.</param>
            <returns>The value cast to something of this type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.CreateCurrentIdProperty(Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Create a new instance of <Typ>LearningStoreItemTypeProperty</Typ>.  The new instance
            refers to the "Id" property of <paramref name="itemType"/>.
            </summary>
            <param name="itemType">Item type on which the Id exists on.</param>
            <returns>The new <Typ>LearningStoreItemTypeProperty</Typ></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.CreateProperty(Microsoft.LearningComponents.Storage.LearningStoreItemType,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreItemTypeProperty</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="itemType">Item type on which the property exists on.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreItemTypeProperty</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.Name">
            <summary>
            Name of the property
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.IsId">
            <summary>
            True if this property is the unique Id of the item type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.IsXml">
            <summary>
            True if this property has a type of Xml
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.ValueType">
            <summary>
            Type of the property
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty.HasDefaultValue">
            <summary>
            True if this property has a default value
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreItemType">
            <summary>
            Represents an item type in a schema
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_schema">
            <summary>
            Schema in which this type exists
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_name">
            <summary>
            Name of the item type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_viewFunction">
            <summary>
            Name of the SQL function that defines the default view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_viewSecurityFunction">
            <summary>
            Name of the SQL function that defines the default view security,
            or null if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_addSecurityFunction">
            <summary>
            Name of the SQL function that defines the add security,
            or null if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_deleteSecurityFunction">
            <summary>
            Name of the SQL function that defines the delete security,
            or null if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_updateSecurityFunction">
            <summary>
            Name of the SQL function that defines the update security,
            or null if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_properties">
            <summary>
            Properties on the item type
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_propertiesWithoutDefaultValue">
            <summary>
            Properties without a default value on the item type
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreItemType.m_propertiesByName">
            <summary>
            Dictionary of properties indexed by name
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemType.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemType.TryGetPropertyByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty@)">
            <summary>
            Attempts to get a property by name.
            </summary>
            <param name="name">Name of the property to find.</param>
            <param name="foundProperty">The found property, or null if the property wasn't found.</param>
            <returns>True if the property was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreItemType.CreateItemType(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreItemType</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="schema">Schema in which the item type exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreItemType</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.Schema">
            <summary>
            Schema in which this type exists
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.Name">
            <summary>
            Name of the item type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.DefaultViewFunction">
            <summary>
            SQL function that defines the default view
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.DefaultViewSecurityFunction">
            <summary>
            SQL function that defines the default view security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.AddSecurityFunction">
            <summary>
            SQL function that defines the add security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.DeleteSecurityFunction">
            <summary>
            SQL function that defines the delete security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.UpdateSecurityFunction">
            <summary>
            SQL function that defines the update security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.Properties">
            <summary>
            Properties on the item type
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreItemType.PropertiesWithoutDefaultValue">
            <summary>
            Properties without a default value on the item type
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreViewColumn">
            <summary>
            Represents a column in a view
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.m_name">
            <summary>
            Name of the column
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.m_valueType">
            <summary>
            Type of the column
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.CastValue(System.Object,System.IFormatProvider,Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException)">
            <summary>
            Cast the passed-in value to a value that can be stored
            in a column of this type.
            </summary>
            <param name="value">Value to cast</param>
            <param name="formatprovider"><Typ>IFormatProvider</Typ> used to convert to/from strings</param>
            <param name="getCastException">Delegate called to retrieve the exception to be thrown on error.</param>
            <returns>The value cast to something of this type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.CreateColumn(Microsoft.LearningComponents.Storage.LearningStoreView,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreViewColumn</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="view">View in which the column exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreViewColumn</Typ></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.CreateColumnForDefaultView(Microsoft.LearningComponents.Storage.LearningStoreItemTypeProperty)">
            <summary>
            Create a new instance of <Typ>LearningStoreViewColumn</Typ> for a default
            view
            </summary>
            <param name="property">Property that the view exposes.</param>
            <returns>The new <Typ>LearningStoreViewColumn</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.Name">
            <summary>
            Name of the column
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.ValueType">
            <summary>
            Type of the column
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.Sortable">
            <summary>
            True if the column is sortable
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.IsXml">
            <summary>
            True if the column contains Xml
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewColumn.IsGuid">
            <summary>
            True if the column contains a Guid
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreViewParameter">
            <summary>
            Represents a parameter in a view
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.m_name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.m_valueType">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.CastValue(System.Object,System.IFormatProvider,Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException)">
            <summary>
            Cast the passed-in value to a value that can be stored
            in a parameter of this type.
            </summary>
            <param name="value">Value to cast</param>
            <param name="formatprovider"><Typ>IFormatProvider</Typ> used to convert to/from strings</param>
            <param name="getCastException">Delegate called to retrieve the exception to be thrown on error.</param>
            <returns>The value cast to something of this type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.CreateParameter(Microsoft.LearningComponents.Storage.LearningStoreView,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreViewParameter</Typ> using data
            read from a navigator.
            </summary>
            <param name="view">View in which the parameter exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreViewParameter</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreViewParameter.ValueType">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreView">
            <summary>
            Represents a view in a schema
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_schema">
            <summary>
            Schema in which this view exists
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_name">
            <summary>
            Name of the view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_function">
            <summary>
            Name of the SQL function that defines the view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_securityFunction">
            <summary>
            Name of the SQL function that defines the view security,
            or null if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_columns">
            <summary>
            Columns in the view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_columnsByName">
            <summary>
            Dictionary of columns indexed by name
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_parameters">
            <summary>
            Parameters in the view
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreView.m_parametersByName">
            <summary>
            Dictionary of parameters indexed by name
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreView.TryGetParameterByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreViewParameter@)">
            <summary>
            Attempts to get a parameter by name.
            </summary>
            <param name="name">Name of the parameter to find.</param>
            <param name="foundParameter">The found parameter, or null if the parameter wasn't found.</param>
            <returns>True if the parameter was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreView.TryGetColumnByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreViewColumn@)">
            <summary>
            Attempts to get a column by name.
            </summary>
            <param name="name">Name of the column to find.</param>
            <param name="foundColumn">The found column, or null if the column wasn't found.</param>
            <returns>True if the column was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreView.CreateView(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreView</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="schema">Schema in which the view exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreView</Typ></returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreView.CreateDefaultView(Microsoft.LearningComponents.Storage.LearningStoreItemType)">
            <summary>
            Create a new instance of <Typ>LearningStoreView</Typ> for a default
            view
            </summary>
            <param name="itemType">Item type.</param>
            <returns>The new <Typ>LearningStoreView</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.Schema">
            <summary>
            Schema in which this view exists
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.Name">
            <summary>
            Name of the view
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.Function">
            <summary>
            SQL function that defines the view
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.SecurityFunction">
            <summary>
            SQL function that defines the view security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.Columns">
            <summary>
            Columns in the view
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreView.Parameters">
            <summary>
            Parameters in the view
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreRightParameter">
            <summary>
            Represents a parameter in a right
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.m_name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.m_valueType">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.#ctor">
            <summary>
            Constructor
            </summary>        
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.CastValue(System.Object,System.IFormatProvider,Microsoft.LearningComponents.Storage.LearningStoreValueType.GetCastException)">
            <summary>
            Cast the passed-in value to a value that can be stored
            in a parameter of this type.
            </summary>
            <param name="value">Value to cast</param>
            <param name="formatprovider"><Typ>IFormatProvider</Typ> used to convert to/from strings</param>
            <param name="getCastException">Delegate called to retrieve the exception to be thrown on error.</param>
            <returns>The value cast to something of this type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.CreateParameter(Microsoft.LearningComponents.Storage.LearningStoreRight,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreRightParameter</Typ> using data
            read from a navigator.
            </summary>
            <param name="right">Right in which the parameter exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreViewParameter</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRightParameter.ValueType">
            <summary>
            Type of the parameter
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreRight">
            <summary>
            Represents a right in a schema
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRight.m_schema">
            <summary>
            Schema in which this right exists
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRight.m_name">
            <summary>
            Name of the right
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRight.m_securityFunction">
            <summary>
            Name of the SQL function that defines the security, or null
            if it doesn't exist
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRight.m_parameters">
            <summary>
            Parameters in the right
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreRight.m_parametersByName">
            <summary>
            Dictionary of parameters indexed by name
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRight.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRight.TryGetParameterByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreRightParameter@)">
            <summary>
            Attempts to get a parameter by name.
            </summary>
            <param name="name">Name of the parameter to find.</param>
            <param name="foundParameter">The found parameter, or null if the parameter wasn't found.</param>
            <returns>True if the parameter was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreRight.CreateRight(Microsoft.LearningComponents.Storage.LearningStoreSchema,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a new instance of <Typ>LearningStoreRight</Typ> using data
            read from an XPathNavigator.
            </summary>
            <param name="schema">Schema in which the right exists.</param>
            <param name="navigator">Location from which the data should be read</param>
            <returns>The new <Typ>LearningStoreRight</Typ></returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRight.Schema">
            <summary>
            Schema in which this right exists
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRight.Name">
            <summary>
            Name of the right
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRight.SecurityFunction">
            <summary>
            SQL function that defines the right security
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreRight.Parameters">
            <summary>
            Parameters in the view
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreSchema">
            <summary>
            Represents a schema
            </summary>
            <remarks>
            Immutable (from the user's point-of-view) once created
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_itemTypes">
            <summary>
            Item types in the schema
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_enumTypes">
            <summary>
            Enum types in the schema
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_views">
            <summary>
            Views in the schema
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_rights">
            <summary>
            Rights in the schema
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_itemTypesByName">
            <summary>
            Item types in the schema indexed by name
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_enumTypesByName">
            <summary>
            Enum types in the schema indexed by name
            </summary>            
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_viewsByName">
            <summary>
            Views in the schema indexed by name
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSchema.m_rightsByName">
            <summary>
            Rights in the schema indexed by name
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.TryGetItemTypeByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreItemType@)">
            <summary>
            Attempts to get an item type by name.
            </summary>
            <param name="name">Name of the item type to find.</param>
            <param name="foundItemType">The found item type, or null if the item type wasn't found.</param>
            <returns>True if the item type was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.TryGetEnumTypeByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreEnumType@)">
            <summary>
            Attempts to get an enum type by name.
            </summary>
            <param name="name">Name of the enum type to find.</param>
            <param name="foundEnumType">The found enum type, or null if the enum type wasn't found.</param>
            <returns>True if the enum type was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.TryGetViewByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreView@)">
            <summary>
            Attempts to get a view by name.
            </summary>
            <param name="name">Name of the view to find.</param>
            <param name="foundView">The found view, or null if the view wasn't found.</param>
            <returns>True if the view was found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.TryGetRightByName(System.String,Microsoft.LearningComponents.Storage.LearningStoreRight@)">
            <summary>
            Attempts to get a right by name.
            </summary>
            <param name="name">Name of the right to find.</param>
            <param name="foundRight">The found right, or null if the right wasn't found.</param>
            <returns>True if the view right found.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.GetItemTypeByName(System.String)">
            <summary>
            Get an item type
            </summary>
            <param name="name">Name of the item type to find.</param>
            <returns>The found item type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.GetEnumTypeByName(System.String)">
            <summary>
            Get an enum type by name
            </summary>
            <param name="name">Name of the enum type to find.</param>
            <returns>The found enum type.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.GetViewByName(System.String)">
            <summary>
            Get a view by name
            </summary>
            <param name="name">Name of the view to find.</param>
            <returns>The found view.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreSchema.CreateSchema(System.Xml.XPath.XPathDocument)">
            <summary>
            Create a new instance of <Typ>LearningStoreSchema</Typ> using data
            read from an XPathDocument
            </summary>
            <param name="document">The document</param>
            <returns>The new <Typ>LearningStoreSchema</Typ></returns>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem">
            <summary>
            Contains constants related to the ActivityAttemptItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#Packages">activity</a> in the context of one <a href="SlkConcepts.htm#Assignments">attempt</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityPackageId</Fld></li>
            <li><Fld>AttemptCount</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>EvaluationPoints</Fld></li>
            <li><Fld>Exit</Fld></li>
            <li><Fld>LessonStatus</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>ProgressMeasure</Fld></li>
            <li><Fld>RandomPlacement</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SequencingDataCache</Fld></li>
            <li><Fld>SessionStartTimestamp</Fld></li>
            <li><Fld>SessionTime</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            <li><Fld>SuspendData</Fld></li>
            <li><Fld>TotalTime</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.ItemTypeName">
            <summary>
            Name of the <Typ>ActivityAttemptItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.Id">
            <summary>
            Name of the Id property on the <Typ>ActivityAttemptItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.AttemptId">
            <summary>
            Name of the AttemptId property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>AttemptId is the identifier for the attempt on the package.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>AttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.ActivityPackageId">
            <summary>
            Name of the ActivityPackageId property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>ActivityPackageId is the identifier for the activity information that is contained in the package.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.CompletionStatus">
            <summary>
            Name of the CompletionStatus property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>CompletionStatus indicates whether or not the activity has been completed.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.CompletionStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.AttemptCount">
            <summary>
            Name of the AttemptCount property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>AttemptCount is a count of the number of sessions this attempt has taken. Every time the attempt is suspended and resumed, this is updated.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.DataModelCache">
            <summary>
            Name of the DataModelCache property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>DataModelCache is an XML representation of the dynamic data not required for sequencing relating to this activity.</para>
            </summary>
            <remarks>
            Property type: Xml<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.EvaluationPoints">
            <summary>
            Name of the EvaluationPoints property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>EvaluationPoints is the point value assigned by an instructor as an evaluation of learner responses.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.Exit">
            <summary>
            Name of the Exit property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>Exit indicates how or why a user left the activity.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.ExitMode</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.LessonStatus">
            <summary>
            Name of the LessonStatus property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>LessonStatus indicates the status of the attempt.  This value is only used in SCORM 1.2.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.LessonStatus</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.Location">
            <summary>
            Name of the Location property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>Location is the information used by the SCO to determine the learner's position within the SCO, similar in concept to a bookmark.</para>
            </summary>
            <remarks>
            Property type: String[1000]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.MaxLocationLength">
            <summary>
            Maximum length of the <Fld>Location</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.MinScore">
            <summary>
            Name of the MinScore property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>MinScore is the minimum score allowed.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.MaxScore">
            <summary>
            Name of the MaxScore property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>MaxScore is the maximum score allowed.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.ProgressMeasure">
            <summary>
            Name of the ProgressMeasure property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>ProgressMeasure is the progress toward completing the activity.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.RandomPlacement">
            <summary>
            Name of the RandomPlacement property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>RandomPlacement is the order assigned to this activity relative to its siblings. This information is most useful when the cluster is to be randomized.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.RawScore">
            <summary>
            Name of the RawScore property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>RawScore is the score that reflects the performance of the learner, between MinScore and MaxScore.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.ScaledScore">
            <summary>
            Name of the ScaledScore property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>ScaledScore is the score that reflects the performance of the learner.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.SequencingDataCache">
            <summary>
            Name of the SequencingDataCache property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>SequencingDataCache is an XML representation of the dynamic data required for sequencing relating to this activity.</para>
            </summary>
            <remarks>
            Property type: Xml<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.SessionStartTimestamp">
            <summary>
            Name of the SessionStartTimestamp property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>SessionStartTimestamp is the time (UTC) that the current session started.</para>
            </summary>
            <remarks>
            Property type: DateTime<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.SessionTime">
            <summary>
            Name of the SessionTime property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>SessionTime is the duration of the session as determined by SCO.</para>
            </summary>
            <remarks>
            Property type: Double<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.SuccessStatus">
            <summary>
            Name of the SuccessStatus property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>SuccessStatus indicates whether the learner has mastered the SCO.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.SuspendData">
            <summary>
            Name of the SuspendData property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>SuspendData is the data saved by SCO when the attempt on the activity is suspended.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.MaxSuspendDataLength">
            <summary>
            Maximum length of the <Fld>SuspendData</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem.TotalTime">
            <summary>
            Name of the TotalTime property on the <Typ>ActivityAttemptItem</Typ> item type.
            <para>TotalTime is the time (in seconds) spent on previous sessions in this attempt on an activity.</para>
            </summary>
            <remarks>
            Property type: Double<p/>
            Property can contain null.<p/>
            Default value: 0<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem">
            <summary>
            Contains constants related to the ActivityObjectiveItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#ScormConcepts">local objective</a> of
            one <a href="SlkConcepts.htm#Packages">activity</a> within one e-learning package.
            Objectives that are added to a package by a
            <a href="SlkConcepts.htm#Packages">SCO</a> via the
            <a href="SlkConcepts.htm#ScormConcepts">RTE</a> are not included in this table.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityPackageId</Fld></li>
            <li><Fld>IsPrimaryObjective</Fld></li>
            <li><Fld>Key</Fld></li>
            <li><Fld>MinNormalizedMeasure</Fld></li>
            <li><Fld>SatisfiedByMeasure</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>ActivityObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>ActivityObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>ActivityObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.ActivityPackageId">
            <summary>
            Name of the ActivityPackageId property on the <Typ>ActivityObjectiveItem</Typ> item type.
            <para>ActivityPackageId is the identifier for the activity related to this objective.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.IsPrimaryObjective">
            <summary>
            Name of the IsPrimaryObjective property on the <Typ>ActivityObjectiveItem</Typ> item type.
            <para>If IsPrimaryObjective is true, this is the primary objective for the related activity.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.Key">
            <summary>
            Name of the Key property on the <Typ>ActivityObjectiveItem</Typ> item type.
            <para>Key is the identifier from the manifest that identifies this objective. Not necessarily unique.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.MaxKeyLength">
            <summary>
            Maximum length of the <Fld>Key</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.MinNormalizedMeasure">
            <summary>
            Name of the MinNormalizedMeasure property on the <Typ>ActivityObjectiveItem</Typ> item type.
            <para>MinNormalizedMeasure is the minimum measure required to satisfy the measure.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can not contain null.<p/>
            Default value: 1<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.SatisfiedByMeasure">
            <summary>
            Name of the SatisfiedByMeasure property on the <Typ>ActivityObjectiveItem</Typ> item type.
            <para>SatisfiedByMeasure is the TODO.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem">
            <summary>
            Contains constants related to the ActivityPackageItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#Packages">activity</a>
            within one e-learning package.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityIdFromManifest</Fld></li>
            <li><Fld>CompletionThreshold</Fld></li>
            <li><Fld>Credit</Fld></li>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>HideAbandon</Fld></li>
            <li><Fld>HideContinue</Fld></li>
            <li><Fld>HideExit</Fld></li>
            <li><Fld>HidePrevious</Fld></li>
            <li><Fld>IsVisibleInContents</Fld></li>
            <li><Fld>LaunchData</Fld></li>
            <li><Fld>MasteryScore</Fld></li>
            <li><Fld>MaxAttempts</Fld></li>
            <li><Fld>MaxTimeAllowed</Fld></li>
            <li><Fld>ObjectivesGlobalToSystem</Fld></li>
            <li><Fld>OriginalPlacement</Fld></li>
            <li><Fld>PackageId</Fld></li>
            <li><Fld>ParentActivityId</Fld></li>
            <li><Fld>PrimaryObjectiveId</Fld></li>
            <li><Fld>PrimaryResourceFromManifest</Fld></li>
            <li><Fld>ResourceId</Fld></li>
            <li><Fld>ResourceParameters</Fld></li>
            <li><Fld>ScaledPassingScore</Fld></li>
            <li><Fld>TimeLimitAction</Fld></li>
            <li><Fld>Title</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ItemTypeName">
            <summary>
            Name of the <Typ>ActivityPackageItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.Id">
            <summary>
            Name of the Id property on the <Typ>ActivityPackageItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ActivityIdFromManifest">
            <summary>
            Name of the ActivityIdFromManifest property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ActivityIdFromManifest is the identifier for this attempt from the manifest. Guaranteed unique within a package, not unique in the table.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxActivityIdFromManifestLength">
            <summary>
            Maximum length of the <Fld>ActivityIdFromManifest</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.OriginalPlacement">
            <summary>
            Name of the OriginalPlacement property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>OriginalPlacement is the order assigned to the activity relative to its siblings based on the appearance of the activity in the manifest. The value is zero-based.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ParentActivityId">
            <summary>
            Name of the ParentActivityId property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ParentActivityId is the identifier of the activity that is a parent of this activity in the activity tree of an organization. If null, this is the root activity being attempted.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.PackageId">
            <summary>
            Name of the PackageId property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>PackageId is the identifier of the package associated with this activity.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>PackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.PrimaryObjectiveId">
            <summary>
            Name of the PrimaryObjectiveId property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>PrimaryObjectiveId is the identifier of the objective which is identified as the primary objective for this activity.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityObjectiveItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ResourceId">
            <summary>
            Name of the ResourceId property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ResourceId is the identifier of the resource information for this activity.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ResourceItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.PrimaryResourceFromManifest">
            <summary>
            Name of the PrimaryResourceFromManifest property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>PrimaryResourceFromManifest is the primary resource to launch for an attempt on this activity.</para>
            </summary>
            <remarks>
            Property type: String[2000]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxPrimaryResourceFromManifestLength">
            <summary>
            Maximum length of the <Fld>PrimaryResourceFromManifest</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.DataModelCache">
            <summary>
            Name of the DataModelCache property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>DataModelCache is an XML representation of the static data relating to this activity.</para>
            </summary>
            <remarks>
            Property type: Xml<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.CompletionThreshold">
            <summary>
            Name of the CompletionThreshold property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>CompletionThreshold is the completion threshold (as defined in RTE) for this activity.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.Credit">
            <summary>
            Name of the Credit property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>Credit indicates whether the learner will be credited for completion of the activity.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can contain null.<p/>
            Default value: True<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.HideContinue">
            <summary>
            Name of the HideContinue property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>HideContinue is the flag indicating the UI should not display the 'Continue' button.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.HidePrevious">
            <summary>
            Name of the HidePrevious property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>HidePrevious is the flag indicating the UI should not display the 'Previous' button.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.HideExit">
            <summary>
            Name of the HideExit property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>HideExit is the flag indicating the UI should not display the 'Exit' button.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.HideAbandon">
            <summary>
            Name of the HideAbandon property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>HideAbandon is the flag indicating the UI should not display the 'Abandon' button.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.IsVisibleInContents">
            <summary>
            Name of the IsVisibleInContents property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>If IsVisibleInContents is true, the activity is eligible to be visible in the table of contents.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: True<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.LaunchData">
            <summary>
            Name of the LaunchData property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>LaunchData is the data provided to start an activity.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxLaunchDataLength">
            <summary>
            Maximum length of the <Fld>LaunchData</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MasteryScore">
            <summary>
            Name of the MasteryScore property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>MasteryScore is the 'passing' score in SCORM 1.2 content.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxAttempts">
            <summary>
            Name of the MaxAttempts property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>MaxAttempts is the maximum number of attempts allowed on this activity.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxTimeAllowed">
            <summary>
            Name of the MaxTimeAllowed property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>MaxTimeAllowed is the maximum time allowed for the user to complete a single attempt on the activity.</para>
            </summary>
            <remarks>
            Property type: Double<p/>
            Property can contain null.<p/>
            Default value: 0<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ResourceParameters">
            <summary>
            Name of the ResourceParameters property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ResourceParameters is the parameter string used in conjunction with the primary resource for this activity.</para>
            </summary>
            <remarks>
            Property type: String[1000]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxResourceParametersLength">
            <summary>
            Maximum length of the <Fld>ResourceParameters</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ScaledPassingScore">
            <summary>
            Name of the ScaledPassingScore property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ScaledPassingScore is the passing score required to 'pass' the SCO.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.TimeLimitAction">
            <summary>
            Name of the TimeLimitAction property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>TimeLimitAction indicates what a SCO should do when time limit is exceeded.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.TimeLimitAction</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.Title">
            <summary>
            Name of the Title property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>Title is the title of the activity.</para>
            </summary>
            <remarks>
            Property type: String[200]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.MaxTitleLength">
            <summary>
            Maximum length of the <Fld>Title</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem.ObjectivesGlobalToSystem">
            <summary>
            Name of the ObjectivesGlobalToSystem property on the <Typ>ActivityPackageItem</Typ> item type.
            <para>ObjectivesGlobalToSystem is the flag indicating whether the global objectives referenced in this activity tree are global for the learner and the content organization (false) or global for the lifetime of the learner(true).</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: True<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem">
            <summary>
            Contains constants related to the PackageGlobalObjectiveItem item type.
            <para>Each item contains information about progress on one
            <a href="SlkConcepts.htm#ScormConcepts">global objective</a> related to one
            <a href="SlkConcepts.htm#Assignments">organization</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>GlobalObjectiveId</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>PackageGlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.LearnerId">
            <summary>
            Name of the LearnerId property on the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            <para>LearnerId is the identifier of the learner related to this entry.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>UserItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.GlobalObjectiveId">
            <summary>
            Name of the GlobalObjectiveId property on the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            <para>GlobalObjectiveId is the identifier for the objective related to this entry.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>GlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.ScaledScore">
            <summary>
            Name of the ScaledScore property on the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            <para>ScaledScore is the score that reflects the performance of the learner on this objective.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem.SuccessStatus">
            <summary>
            Name of the SuccessStatus property on the <Typ>PackageGlobalObjectiveItem</Typ> item type.
            <para>SuccessStatus indicates whether or not the learner has successfully met this objective.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.SuccessStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem">
            <summary>
            Contains constants related to the AttemptItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#Assignments">attempt</a>, i.e. one
            instance of one learner executing one
            <a href="SlkConcepts.htm#Packages">organization</a> of one e-learning package.
            If the same learner attempts the same organization twice, two AttemptItem rows are
            created.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.  SLK <a href="SlkSchema.xml.htm">extends</a> this item type by adding the
            <a href="Microsoft.SharePointLearningKit.Schema.AttemptItem.LearnerAssignmentId.Field.htm">LearnerAssignmentId</a> property/column and a SQL index.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>AttemptStatus</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>CurrentActivityId</Fld></li>
            <li><Fld>FinishedTimestamp</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>LogDetailSequencing</Fld></li>
            <li><Fld>LogFinalSequencing</Fld></li>
            <li><Fld>LogRollup</Fld></li>
            <li><Fld>PackageId</Fld></li>
            <li><Fld>RootActivityId</Fld></li>
            <li><Fld>StartedTimestamp</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            <li><Fld>SuspendedActivityId</Fld></li>
            <li><Fld>TotalPoints</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.ItemTypeName">
            <summary>
            Name of the <Typ>AttemptItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.Id">
            <summary>
            Name of the Id property on the <Typ>AttemptItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>AttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.LearnerId">
            <summary>
            Name of the LearnerId property on the <Typ>AttemptItem</Typ> item type.
            <para>LearnerId is the identifier of the learner of this attempt.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>UserItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.RootActivityId">
            <summary>
            Name of the RootActivityId property on the <Typ>AttemptItem</Typ> item type.
            <para>RootActivityId is the identifier of the root activity of the package.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.CompletionStatus">
            <summary>
            Name of the CompletionStatus property on the <Typ>AttemptItem</Typ> item type.
            <para>CompletionStatus is the TODO.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.CompletionStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.CurrentActivityId">
            <summary>
            Name of the CurrentActivityId property on the <Typ>AttemptItem</Typ> item type.
            <para>CurrentActivityId is the identifier of the current active activity.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.SuspendedActivityId">
            <summary>
            Name of the SuspendedActivityId property on the <Typ>AttemptItem</Typ> item type.
            <para>SuspendedActivityId is the identifier of the previously suspended activity.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.PackageId">
            <summary>
            Name of the PackageId property on the <Typ>AttemptItem</Typ> item type.
            <para>PackageId is the identifier of the package that is being attempted.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>PackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.AttemptStatus">
            <summary>
            Name of the AttemptStatus property on the <Typ>AttemptItem</Typ> item type.
            <para>AttemptStatus is the status of the attempt.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.AttemptStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.AttemptStatus.Active</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.FinishedTimestamp">
            <summary>
            Name of the FinishedTimestamp property on the <Typ>AttemptItem</Typ> item type.
            <para>FinishedTimestamp is the date/time (UTC) the attempt was completed or abandoned.</para>
            </summary>
            <remarks>
            Property type: DateTime<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.LogDetailSequencing">
            <summary>
            Name of the LogDetailSequencing property on the <Typ>AttemptItem</Typ> item type.
            <para>If LogDetailSequencing is true, details of navigation are logged, from the initial activity up to but not including the final destination.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.LogFinalSequencing">
            <summary>
            Name of the LogFinalSequencing property on the <Typ>AttemptItem</Typ> item type.
            <para>If LogFinalSequencing is true, final destination arrived at when navigating is logged.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.LogRollup">
            <summary>
            Name of the LogRollup property on the <Typ>AttemptItem</Typ> item type.
            <para>If LogRollup is true, rollup operations are logged.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.StartedTimestamp">
            <summary>
            Name of the StartedTimestamp property on the <Typ>AttemptItem</Typ> item type.
            <para>StartedTimestamp is the date/time (UTC) when the attempt was started.</para>
            </summary>
            <remarks>
            Property type: DateTime<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.SuccessStatus">
            <summary>
            Name of the SuccessStatus property on the <Typ>AttemptItem</Typ> item type.
            <para>SuccessStatus is the TODO.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.SuccessStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem.TotalPoints">
            <summary>
            Name of the TotalPoints property on the <Typ>AttemptItem</Typ> item type.
            <para>TotalPoints is the TODO.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem">
            <summary>
            Contains constants related to the AttemptObjectiveItem item type.
            <para>Each item contains information about the learner's progress on one
            <a href="SlkConcepts.htm#ScormConcepts">local objective</a> for one
            <a href="SlkConcepts.htm#Packages">activity</a> of one
            <a href="SlkConcepts.htm#Assignments">attempt</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>ActivityObjectiveId</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>Description</Fld></li>
            <li><Fld>IsPrimaryObjective</Fld></li>
            <li><Fld>Key</Fld></li>
            <li><Fld>LessonStatus</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>ProgressMeasure</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>AttemptObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>AttemptObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>ActivityAttemptId is the identifier of the activity related to this attempt.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.ActivityObjectiveId">
            <summary>
            Name of the ActivityObjectiveId property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>ActivityObjectiveId is the identifier for the objective related to this entry.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityObjectiveItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.CompletionStatus">
            <summary>
            Name of the CompletionStatus property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>CompletionStatus indicates whether or not the learner has completed work on this objective.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.CompletionStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.Description">
            <summary>
            Name of the Description property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>Description is the description of the objective.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.MaxDescriptionLength">
            <summary>
            Maximum length of the <Fld>Description</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.IsPrimaryObjective">
            <summary>
            Name of the IsPrimaryObjective property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>If IsPrimaryObjective is true, then this is the primary objective for the related activity.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.Key">
            <summary>
            Name of the Key property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>Key is the identifier for the activity. The identifier is not necessarily unique.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.MaxKeyLength">
            <summary>
            Maximum length of the <Fld>Key</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.LessonStatus">
            <summary>
            Name of the LessonStatus property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>LessonStatus is the SCORM 1.2 compliance field to include status of the current user with respect to this objective.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.LessonStatus</Typ><p/>
            Property can contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.LessonStatus.NotAttempted</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.RawScore">
            <summary>
            Name of the RawScore property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>RawScore is the score that reflects the performance of the learner on this objective, between MinScore and MaxScore.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.MinScore">
            <summary>
            Name of the MinScore property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>MinScore is the minimum score allowed on this objective for the learner.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.MaxScore">
            <summary>
            Name of the MaxScore property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>MaxScore is the maximum score allowed on this objective for this learner.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.ProgressMeasure">
            <summary>
            Name of the ProgressMeasure property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>ProgressMeasure is the progress of learner in completing this objective.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.ScaledScore">
            <summary>
            Name of the ScaledScore property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>ScaledScore is the score that reflects the performance of the learner on this objective.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.SuccessStatus">
            <summary>
            Name of the SuccessStatus property on the <Typ>AttemptObjectiveItem</Typ> item type.
            <para>SuccessStatus indicates whether or not the learner has successfully met this objective.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.SuccessStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem">
            <summary>
            Contains constants related to the CommentFromLearnerItem item type.
            <para>Each item contains one comment from the learner related to one
            <a href="SlkConcepts.htm#Packages">activity</a> of one
            <a href="SlkConcepts.htm#Assignments">attempt</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.ItemTypeName">
            <summary>
            Name of the <Typ>CommentFromLearnerItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.Id">
            <summary>
            Name of the Id property on the <Typ>CommentFromLearnerItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>CommentFromLearnerItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId property on the <Typ>CommentFromLearnerItem</Typ> item type.
            <para>ActivityAttemptId is the identifier for the attempt on the activity related to this comment.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.Comment">
            <summary>
            Name of the Comment property on the <Typ>CommentFromLearnerItem</Typ> item type.
            <para>Comment is the text of the comment.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.MaxCommentLength">
            <summary>
            Maximum length of the <Fld>Comment</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.Location">
            <summary>
            Name of the Location property on the <Typ>CommentFromLearnerItem</Typ> item type.
            <para>Location is the text indicating where the comment applies.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.MaxLocationLength">
            <summary>
            Maximum length of the <Fld>Location</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.Ordinal">
            <summary>
            Name of the Ordinal property on the <Typ>CommentFromLearnerItem</Typ> item type.
            <para>Ordinal is the TODO.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.Timestamp">
            <summary>
            Name of the Timestamp property on the <Typ>CommentFromLearnerItem</Typ> item type.
            <para>Timestamp is the timestamp (UTC) indicating when the comment was created or most recently changed.</para>
            </summary>
            <remarks>
            Property type: String[28]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem.MaxTimestampLength">
            <summary>
            Maximum length of the <Fld>Timestamp</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem">
            <summary>
            Contains constants related to the CommentFromLmsItem item type.
            <para>Each item contains a <a href="SlkConcepts.htm#ScormConcepts">"comments from LMS"</a> string related to a
            specific <a href="SlkConcepts.htm#Packages">activity</a> within an e-learning package.
            These are read-only by <a href="SlkConcepts.htm#Packages">SCOs</a>.  SLK does not add
            rows to the CommentsFromLmsItem table.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityPackageId</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.ItemTypeName">
            <summary>
            Name of the <Typ>CommentFromLmsItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.Id">
            <summary>
            Name of the Id property on the <Typ>CommentFromLmsItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>CommentFromLmsItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.ActivityPackageId">
            <summary>
            Name of the ActivityPackageId property on the <Typ>CommentFromLmsItem</Typ> item type.
            <para>ActivityPackageId is the identifier of the activity in a specific package associated with this comment.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.Comment">
            <summary>
            Name of the Comment property on the <Typ>CommentFromLmsItem</Typ> item type.
            <para>Comment is the text of the comment.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.MaxCommentLength">
            <summary>
            Maximum length of the <Fld>Comment</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.Location">
            <summary>
            Name of the Location property on the <Typ>CommentFromLmsItem</Typ> item type.
            <para>Location is the text indicating where the comment applies.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.MaxLocationLength">
            <summary>
            Maximum length of the <Fld>Location</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.Timestamp">
            <summary>
            Name of the Timestamp property on the <Typ>CommentFromLmsItem</Typ> item type.
            <para>Timestamp is the timestamp (UTC) indicating when comment was created or most recently changed.</para>
            </summary>
            <remarks>
            Property type: String[28]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem.MaxTimestampLength">
            <summary>
            Maximum length of the <Fld>Timestamp</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem">
            <summary>
            Contains constants related to the CorrectResponseItem item type.
            <para>Each item contains information about one SCORM <a href="SlkConcepts.htm#ScormConcepts">correct response string</a>
            for one <a href="Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Class.htm">InteractionItem</a>.
            The CorrectResponseItem table contains one row in this table per correct response per
            interaction.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>ResponsePattern</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem.ItemTypeName">
            <summary>
            Name of the <Typ>CorrectResponseItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem.Id">
            <summary>
            Name of the Id property on the <Typ>CorrectResponseItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>CorrectResponseItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem.InteractionId">
            <summary>
            Name of the InteractionId property on the <Typ>CorrectResponseItem</Typ> item type.
            <para>InteractionId is the identifier of the interaction for which this is a correct response.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem.ResponsePattern">
            <summary>
            Name of the ResponsePattern property on the <Typ>CorrectResponseItem</Typ> item type.
            <para>ResponsePattern is the pattern of the correct response.</para>
            </summary>
            <remarks>
            Property type: String[1073741822]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem.MaxResponsePatternLength">
            <summary>
            Maximum length of the <Fld>ResponsePattern</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem">
            <summary>
            Contains constants related to the EvaluationCommentItem item type.
            <para>Each item contains a comment from an evaluator (i.e. an instructor grading a
            <a href="SlkConcepts.htm#Assignments">learner assignment</a>) related to one
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Class.htm">InteractionItem</a>.  Only used for e-learning packages in Class Server format.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.ItemTypeName">
            <summary>
            Name of the <Typ>EvaluationCommentItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.Id">
            <summary>
            Name of the Id property on the <Typ>EvaluationCommentItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>EvaluationCommentItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.InteractionId">
            <summary>
            Name of the InteractionId property on the <Typ>EvaluationCommentItem</Typ> item type.
            <para>InteractionId is the identifier of the interaction for which this is a comment.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.Comment">
            <summary>
            Name of the Comment property on the <Typ>EvaluationCommentItem</Typ> item type.
            <para>Comment is the text of the comment.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.MaxCommentLength">
            <summary>
            Maximum length of the <Fld>Comment</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.Location">
            <summary>
            Name of the Location property on the <Typ>EvaluationCommentItem</Typ> item type.
            <para>Location is the text indicating where the comment applies.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.MaxLocationLength">
            <summary>
            Maximum length of the <Fld>Location</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.Ordinal">
            <summary>
            Name of the Ordinal property on the <Typ>EvaluationCommentItem</Typ> item type.
            <para>Ordinal is the identifier for the comment that is unique within the interaction.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.Timestamp">
            <summary>
            Name of the Timestamp property on the <Typ>EvaluationCommentItem</Typ> item type.
            <para>Timestamp is the timestamp (UTC) indicating when comment was created or most recently changed.</para>
            </summary>
            <remarks>
            Property type: String[28]<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem.MaxTimestampLength">
            <summary>
            Maximum length of the <Fld>Timestamp</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem">
            <summary>
            Contains constants related to the ExtensionDataItem item type.
            <para>Each item contains one "extension" <a href="MlcDataModel.htm">data model element</a>.  An "extension" data
            model element is a data model element whose name does not begin with "cmi." or "adl.".</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttachmentGuid</Fld></li>
            <li><Fld>AttachmentValue</Fld></li>
            <li><Fld>AttemptObjectiveId</Fld></li>
            <li><Fld>BoolValue</Fld></li>
            <li><Fld>DateTimeValue</Fld></li>
            <li><Fld>DoubleValue</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>IntValue</Fld></li>
            <li><Fld>Name</Fld></li>
            <li><Fld>StringValue</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.ItemTypeName">
            <summary>
            Name of the <Typ>ExtensionDataItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.Id">
            <summary>
            Name of the Id property on the <Typ>ExtensionDataItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>ExtensionDataItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>ActivityAttemptId is the identifier of the attempt activity associated with this element.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.InteractionId">
            <summary>
            Name of the InteractionId property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>InteractionId is the TODO.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.AttemptObjectiveId">
            <summary>
            Name of the AttemptObjectiveId property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>If this data is related to an objective, AttemptObjectiveId is the related identifier.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.Name">
            <summary>
            Name of the Name property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>Name is the key of the element.</para>
            </summary>
            <remarks>
            Property type: String[256]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.MaxNameLength">
            <summary>
            Maximum length of the <Fld>Name</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.AttachmentGuid">
            <summary>
            Name of the AttachmentGuid property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>AttachmentGuid is the value of an element represented by a GUID (globally unique identifier).</para>
            </summary>
            <remarks>
            Property type: Guid<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.AttachmentValue">
            <summary>
            Name of the AttachmentValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>AttachmentValue is the value of the element represented as an array of bytes.</para>
            </summary>
            <remarks>
            Property type: ByteArray[2147483645]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.MaxAttachmentValueLength">
            <summary>
            Maximum length of the <Fld>AttachmentValue</Fld> property in bytes.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.BoolValue">
            <summary>
            Name of the BoolValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>BoolValue is the value of the element represented as a Boolean.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.DateTimeValue">
            <summary>
            Name of the DateTimeValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>DateTimeValue is the value of the element represented as a DateTime. The value should be UTC.</para>
            </summary>
            <remarks>
            Property type: DateTime<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.DoubleValue">
            <summary>
            Name of the DoubleValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>DoubleValue is the value of the element represented as a Double.</para>
            </summary>
            <remarks>
            Property type: Double<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.IntValue">
            <summary>
            Name of the IntValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>IntValue is the value of the element stored as an Int32.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.StringValue">
            <summary>
            Name of the StringValue property on the <Typ>ExtensionDataItem</Typ> item type.
            <para>StringValue is the value of the element stored as a string.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem.MaxStringValueLength">
            <summary>
            Maximum length of the <Fld>StringValue</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem">
            <summary>
            Contains constants related to the GlobalObjectiveItem item type.
            <para>Each item contains information about one
            <a href="SlkConcepts.htm#ScormConcepts">global objective</a> related to one
            <a href="SlkConcepts.htm#Packages">organization</a> of one e-learning package, or one
            global objective that's not constrained to any one organization of any package.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>Description</Fld></li>
            <li><Fld>Key</Fld></li>
            <li><Fld>OrganizationId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>GlobalObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>GlobalObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>GlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.OrganizationId">
            <summary>
            Name of the OrganizationId property on the <Typ>GlobalObjectiveItem</Typ> item type.
            <para>OrganizationId is the organization which contains a reference to this objective. If null, the objective applies to entire system.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityPackageItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.Key">
            <summary>
            Name of the Key property on the <Typ>GlobalObjectiveItem</Typ> item type.
            <para>Key is an identifier for the global objective. If PackageId is null, this is unique within the table, otherwise, it is unique within the package.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.MaxKeyLength">
            <summary>
            Maximum length of the <Fld>Key</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.Description">
            <summary>
            Name of the Description property on the <Typ>GlobalObjectiveItem</Typ> item type.
            <para>Description is the text description of the objective.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.MaxDescriptionLength">
            <summary>
            Maximum length of the <Fld>Description</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem">
            <summary>
            Contains constants related to the InteractionItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#ScormConcepts">interaction</a> within
            one <a href="SlkConcepts.htm#Packages">activity</a> of one
            <a href="SlkConcepts.htm#Assignments">attempt</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>Description</Fld></li>
            <li><Fld>EvaluationPoints</Fld></li>
            <li><Fld>InteractionIdFromCmi</Fld></li>
            <li><Fld>InteractionType</Fld></li>
            <li><Fld>Latency</Fld></li>
            <li><Fld>LearnerResponseBool</Fld></li>
            <li><Fld>LearnerResponseNumeric</Fld></li>
            <li><Fld>LearnerResponseString</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ResultNumeric</Fld></li>
            <li><Fld>ResultState</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            <li><Fld>Weighting</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.ItemTypeName">
            <summary>
            Name of the <Typ>InteractionItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Id">
            <summary>
            Name of the Id property on the <Typ>InteractionItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId property on the <Typ>InteractionItem</Typ> item type.
            <para>ActivityAttemptId is the identifier for the activity that contains this interaction.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.InteractionIdFromCmi">
            <summary>
            Name of the InteractionIdFromCmi property on the <Typ>InteractionItem</Typ> item type.
            <para>InteractionIdFromCmi is the identifier that is provided by the SCO, through the cmi.interactions.n.id value.</para>
            </summary>
            <remarks>
            Property type: String[4096]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MaxInteractionIdFromCmiLength">
            <summary>
            Maximum length of the <Fld>InteractionIdFromCmi</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.InteractionType">
            <summary>
            Name of the InteractionType property on the <Typ>InteractionItem</Typ> item type.
            <para>InteractionType is the type of interaction (for example, true-false).</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.InteractionType</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Timestamp">
            <summary>
            Name of the Timestamp property on the <Typ>InteractionItem</Typ> item type.
            <para>Timestamp is the point in time (UTC) when the interaction was first made available to the learner.</para>
            </summary>
            <remarks>
            Property type: String[28]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MaxTimestampLength">
            <summary>
            Maximum length of the <Fld>Timestamp</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Weighting">
            <summary>
            Name of the Weighting property on the <Typ>InteractionItem</Typ> item type.
            <para>Weighting is the weight given to the interaction. This is commonly used for calculating the score on the activity.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.ResultState">
            <summary>
            Name of the ResultState property on the <Typ>InteractionItem</Typ> item type.
            <para>ResultState is an analysis of the result of the interaction; for example, "correct".</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.InteractionResultState</Typ><p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.ResultNumeric">
            <summary>
            Name of the ResultNumeric property on the <Typ>InteractionItem</Typ> item type.
            <para>ResultNumeric is the numeric value of the interaction result.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Latency">
            <summary>
            Name of the Latency property on the <Typ>InteractionItem</Typ> item type.
            <para>Latency is the duration of time between the first interaction and the first response.</para>
            </summary>
            <remarks>
            Property type: Double<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Description">
            <summary>
            Name of the Description property on the <Typ>InteractionItem</Typ> item type.
            <para>Description is a brief description of the interaction.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MaxDescriptionLength">
            <summary>
            Maximum length of the <Fld>Description</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.LearnerResponseBool">
            <summary>
            Name of the LearnerResponseBool property on the <Typ>InteractionItem</Typ> item type.
            <para>LearnerResponseBool is the response from the user to a true-false question.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.LearnerResponseString">
            <summary>
            Name of the LearnerResponseString property on the <Typ>InteractionItem</Typ> item type.
            <para>LearnerResponseString is the response from the user to a sequencing, multiple choice or likert question.</para>
            </summary>
            <remarks>
            Property type: String[1073741822]<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MaxLearnerResponseStringLength">
            <summary>
            Maximum length of the <Fld>LearnerResponseString</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.LearnerResponseNumeric">
            <summary>
            Name of the LearnerResponseNumeric property on the <Typ>InteractionItem</Typ> item type.
            <para>LearnerResponseNumeric is the response from the user to a numeric question.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.ScaledScore">
            <summary>
            Name of the ScaledScore property on the <Typ>InteractionItem</Typ> item type.
            <para>ScaledScore is the score that reflects the performance of the learner.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.RawScore">
            <summary>
            Name of the RawScore property on the <Typ>InteractionItem</Typ> item type.
            <para>RawScore is the score that reflects the performance of the learner, between MinScore and MinScore.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MinScore">
            <summary>
            Name of the MinScore property on the <Typ>InteractionItem</Typ> item type.
            <para>MinScore is the minimum score allowed.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.MaxScore">
            <summary>
            Name of the MaxScore property on the <Typ>InteractionItem</Typ> item type.
            <para>MaxScore is the maximum score allowed.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.EvaluationPoints">
            <summary>
            Name of the EvaluationPoints property on the <Typ>InteractionItem</Typ> item type.
            <para>EvaluationPoints is the point value assigned to the interaction within the context of the Evaluation.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem">
            <summary>
            Contains constants related to the InteractionObjectiveItem item type.
            <para>Each item relates one
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem.Class.htm">InteractionItem</a> with one
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem.Class.htm">AttemptObjectiveItem</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>AttemptObjectiveId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>InteractionObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>InteractionObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>InteractionObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem.InteractionId">
            <summary>
            Name of the InteractionId property on the <Typ>InteractionObjectiveItem</Typ> item type.
            <para>InteractionId is the identifier of the interaction for this mapping.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem.AttemptObjectiveId">
            <summary>
            Name of the AttemptObjectiveId property on the <Typ>InteractionObjectiveItem</Typ> item type.
            <para>AttemptObjectiveId is the identifier of the AttemptObjectiveItem related to this objective.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem">
            <summary>
            Contains constants related to the LearnerGlobalObjectiveItem item type.
            <para>Each item contains information about the progress of one learner against a particular
            global objective, across all <a href="SlkConcepts.htm#Packages">activities</a> in all
            e-learning packages.  These objectives may be global to a single package or global to
            the system -- the data in this table does not distinguish between these two
            cases.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>GlobalObjectiveId</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>LearnerGlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.LearnerId">
            <summary>
            Name of the LearnerId property on the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            <para>LearnerId is the identifier of the learner.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>UserItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.GlobalObjectiveId">
            <summary>
            Name of the GlobalObjectiveId property on the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            <para>GlobalObjectiveId is the identifier of the objective.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>GlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.ScaledScore">
            <summary>
            Name of the ScaledScore property on the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            <para>ScaledScore is the measure of result (i.e, a score) for the objective.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem.SuccessStatus">
            <summary>
            Name of the SuccessStatus property on the <Typ>LearnerGlobalObjectiveItem</Typ> item type.
            <para>SuccessStatus indicates whether the objective has been satisfied.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.SuccessStatus.Unknown</Fld><p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem">
            <summary>
            Contains constants related to the MapActivityObjectiveToGlobalObjectiveItem item type.
            <para>Each item contains a mapping between an
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem.Class.htm">ActivityObjectiveItem</a> and a
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem.Class.htm">GlobalObjectiveItem</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityObjectiveId</Fld></li>
            <li><Fld>GlobalObjectiveId</Fld></li>
            <li><Fld>ReadNormalizedMeasure</Fld></li>
            <li><Fld>ReadSatisfiedStatus</Fld></li>
            <li><Fld>WriteNormalizedMeasure</Fld></li>
            <li><Fld>WriteSatisfiedStatus</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.ItemTypeName">
            <summary>
            Name of the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.Id">
            <summary>
            Name of the Id property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.ActivityObjectiveId">
            <summary>
            Name of the ActivityObjectiveId property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>ActivityObjectiveId is the identifier for the activity objective being mapped to a global objective.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.GlobalObjectiveId">
            <summary>
            Name of the GlobalObjectiveId property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>GlobalObjectiveId is the identifier for the global objective being mapped to a local (activity) objective.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>GlobalObjectiveItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.ReadSatisfiedStatus">
            <summary>
            Name of the ReadSatisfiedStatus property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>ReadSatisfiedStatus indicates that the satisfaction status for the identified local objective should be retrieved from the identified shared global objective when the progress for this objective is undefined.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: True<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.ReadNormalizedMeasure">
            <summary>
            Name of the ReadNormalizedMeasure property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>ReadNormalizedMeasure is indicates that the normalized measure for the identified local objective should be retrieved from the identified shared global objective when the measure for this objective is undefined.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: True<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.WriteSatisfiedStatus">
            <summary>
            Name of the WriteSatisfiedStatus property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>WriteSatisfiedStatus indicates that the normalized measure for the this objective should be retrieved from the identified shared global objective when the measure for the this objective is undefined.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem.WriteNormalizedMeasure">
            <summary>
            Name of the WriteNormalizedMeasure property on the <Typ>MapActivityObjectiveToGlobalObjectiveItem</Typ> item type.
            <para>WriteNormalizedMeasure indicates that the normalized measure for the identified local objective should be transferred to the identified shared global objective upon termination of the attempt on the activity.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can not contain null.<p/>
            Default value: False<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem">
            <summary>
            Contains constants related to the PackageItem item type.
            <para>Each item contains information about one <a href="SlkConcepts.htm#Packages">e-learning
            package</a>.  Before a package can be
            <a href="SlkConcepts.htm#Assignments">attempted</a>, a row referring to it must be
            added to this table.  When that happens, detailed information about the package is
            added to other tables in the schema; for example, information about each
            <a href="SlkConcepts.htm#Packages">activity</a> is added to the ActivityPackageItem
            table.  SLK <a href="SlkSchema.xml.htm">extends</a> this item type by adding the <a href="Microsoft.SharePointLearningKit.Schema.PackageItem.Warnings.Field.htm">Warnings</a> property/column.
            </para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Manifest</Fld></li>
            <li><Fld>PackageFormat</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.ItemTypeName">
            <summary>
            Name of the <Typ>PackageItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.Id">
            <summary>
            Name of the Id property on the <Typ>PackageItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>PackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.PackageFormat">
            <summary>
            Name of the PackageFormat property on the <Typ>PackageItem</Typ> item type.
            <para>PackageFormat is the type of content in the package: SCORM 2004, SCORM 1.2, or Class Server format.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.PackageFormat</Typ><p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.Location">
            <summary>
            Name of the Location property on the <Typ>PackageItem</Typ> item type.
            <para>Location is the location of the files within the package. The format of this field is determined by the application.</para>
            </summary>
            <remarks>
            Property type: String[260]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.MaxLocationLength">
            <summary>
            Maximum length of the <Fld>Location</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.PackageItem.Manifest">
            <summary>
            Name of the Manifest property on the <Typ>PackageItem</Typ> item type.
            <para>Manifest is the imsmanifest.xml of the package.</para>
            </summary>
            <remarks>
            Property type: Xml<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem">
            <summary>
            Contains constants related to the RubricItem item type.
            <para>Each item contains information about a rubric that is attached to an
            <a href="SlkConcepts.htm#ScormConcepts">interaction</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>IsSatisfied</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Points</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.ItemTypeName">
            <summary>
            Name of the <Typ>RubricItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.Id">
            <summary>
            Name of the Id property on the <Typ>RubricItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>RubricItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.InteractionId">
            <summary>
            Name of the InteractionId property on the <Typ>RubricItem</Typ> item type.
            <para>InteractionId is the identifier of the interaction that owns this rubric.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>InteractionItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.Ordinal">
            <summary>
            Name of the Ordinal property on the <Typ>RubricItem</Typ> item type.
            <para>Ordinal is the identifier of the rubric. Unique within an interaction.</para>
            </summary>
            <remarks>
            Property type: Int32<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.IsSatisfied">
            <summary>
            Name of the IsSatisfied property on the <Typ>RubricItem</Typ> item type.
            <para>IsSatisfied indicates if the user has satisfied this rubric.</para>
            </summary>
            <remarks>
            Property type: Boolean<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RubricItem.Points">
            <summary>
            Name of the Points property on the <Typ>RubricItem</Typ> item type.
            <para>Points is the point value allowed for this rubric.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can contain null.<p/>
            Default value: null<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem">
            <summary>
            Contains constants related to the ResourceItem item type.
            <para>Each item contains information about <a href="SlkConcepts.htm#ScormConcepts">resources</a> used in
            activities, including the XML of each <tt>&lt;resource&gt;</tt> element in the
            package.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>PackageId</Fld></li>
            <li><Fld>ResourceXml</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem.ItemTypeName">
            <summary>
            Name of the <Typ>ResourceItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem.Id">
            <summary>
            Name of the Id property on the <Typ>ResourceItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>ResourceItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem.PackageId">
            <summary>
            Name of the PackageId property on the <Typ>ResourceItem</Typ> item type.
            <para>PackageId is the identifier of the package that contains this resource.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>PackageItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem.ResourceXml">
            <summary>
            Name of the ResourceXml property on the <Typ>ResourceItem</Typ> item type.
            <para>ResourceXml is the &lt;resources&gt; node from the package corresponding to these resources.</para>
            </summary>
            <remarks>
            Property type: Xml<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem">
            <summary>
            Contains constants related to the SequencingLogEntryItem item type.
            <para>Each item contains one sequencing log entry, related to one
            <a href="SlkConcepts.htm#Packages">activity</a> of one
            <a href="SlkConcepts.htm#Assignments">attempt</a>, or related to an entire
            <a href="SlkConcepts.htm#Assignments">attempt</a>.
            See <a href="Microsoft.LearningComponents.Storage.StoredLearningSession.LoggingOptions.Property.htm">StoredLearningSession.LoggingOptions</a>.</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> Access is granted to no users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>EventType</Fld></li>
            <li><Fld>Message</Fld></li>
            <li><Fld>NavigationCommand</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.ItemTypeName">
            <summary>
            Name of the <Typ>SequencingLogEntryItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.Id">
            <summary>
            Name of the Id property on the <Typ>SequencingLogEntryItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>SequencingLogEntryItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.AttemptId">
            <summary>
            Name of the AttemptId property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>AttemptId is the identifier for the attempt to which the log entry applies.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>AttemptItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            Item will automatically be deleted when the referred-to item is deleted.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>ActivityAttemptId is the identifier of the activity that is active after this log entry was created.</para>
            </summary>
            <remarks>
            Property type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.<p/>
            Property can contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.EventType">
            <summary>
            Name of the EventType property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>EventType is the type of event that caused this entry.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.SequencingEventType</Typ><p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.Message">
            <summary>
            Name of the Message property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>Message is the description that includes why the event happened.</para>
            </summary>
            <remarks>
            Property type: String[1073741822]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.MaxMessageLength">
            <summary>
            Maximum length of the <Fld>Message</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.NavigationCommand">
            <summary>
            Name of the NavigationCommand property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>NavigationCommand is the navigation command that caused this event.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.NavigationCommand</Typ><p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem.Timestamp">
            <summary>
            Name of the Timestamp property on the <Typ>SequencingLogEntryItem</Typ> item type.
            <para>Timestamp is the time (UTC) at which the log entry was created.</para>
            </summary>
            <remarks>
            Property type: DateTime<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.UserItem">
            <summary>
            Contains constants related to the UserItem item type.
            <para>Each item contains information about one user, including a numeric identifier
            (<a href="Microsoft.LearningComponents.Storage.UserItemIdentifier.Class.htm">UserItemIdentifier</a>)
            used elsewhere in the database to refer to the user.  UserItem items contain a
            <a href="Microsoft.LearningComponents.Storage.BaseSchema.UserItem.Key.Field.htm">Key</a>
            property (database column) which, for SLK, contains either the security ID (SID) of the
            user or the user's login name.  (The login name is used for authentication mechanisms
            such as forms-based authentication which don't use security IDs.)</para>
            <para>This <a href="SlkSchema.htm">LearningStore item type</a> is available in both <a href="Default.htm">SLK</a> and <a href="Mlc.htm">MLC</a>.  SLK <a href="SlkSchema.xml.htm">extends</a> this item type by granting access to all users.</para>
            </summary>
            <remarks>
            <para>
            <b><a href="SlkSchema.htm">Default operation-level security</a>:</b> In MLC, access is granted to no users.  In SLK, query access only is granted to all users.</para>
            <para>In MLC, this item type is defined in the namespace Microsoft.LearningComponents.Storage.BaseSchema, in the assembly Microsoft.LearningComponents.Storage.dll.</para><p/>
            Properties on the item type:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>AudioCaptioning</Fld></li>
            <li><Fld>AudioLevel</Fld></li>
            <li><Fld>DeliverySpeed</Fld></li>
            <li><Fld>Key</Fld></li>
            <li><Fld>Language</Fld></li>
            <li><Fld>Name</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.ItemTypeName">
            <summary>
            Name of the <Typ>UserItem</Typ> item type.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.Id">
            <summary>
            Name of the Id property on the <Typ>UserItem</Typ> item type.
            </summary>
            <remarks>
            The value stored in this property is generated automatically when a new item is
            added.  It is unique across all items of the item type.<p/>
            Property type: Reference to a <Typ>UserItem</Typ> item type.<p/>
            Property can not contain null.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.Key">
            <summary>
            Name of the Key property on the <Typ>UserItem</Typ> item type.
            <para>Key is a string that uniquely identifies this user.  The format of the key is defined by the application.  For example, SLK uses a security ID (SID) if available, or a login name for authentication mechanisms (such as forms-based authentication) that don't support SIDs.</para>
            </summary>
            <remarks>
            Property type: String[250]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.MaxKeyLength">
            <summary>
            Maximum length of the <Fld>Key</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.Name">
            <summary>
            Name of the Name property on the <Typ>UserItem</Typ> item type.
            <para>Name is the "friendly name" of the learner -- typically first and last name.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can not contain null.<p/>
            Property does not have a default value.<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.MaxNameLength">
            <summary>
            Maximum length of the <Fld>Name</Fld> property in characters.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.AudioCaptioning">
            <summary>
            Name of the AudioCaptioning property on the <Typ>UserItem</Typ> item type.
            <para>AudioCaptioning specifies whether audio captioning is enabled for this user.</para>
            </summary>
            <remarks>
            Property type: <Typ>/Microsoft.LearningComponents.AudioCaptioning</Typ><p/>
            Property can not contain null.<p/>
            Default value: <Fld>/Microsoft.LearningComponents.AudioCaptioning.NoChange</Fld><p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.AudioLevel">
            <summary>
            Name of the AudioLevel property on the <Typ>UserItem</Typ> item type.
            <para>AudioLevel is the user's preferred audio listening level.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can not contain null.<p/>
            Default value: 1<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.DeliverySpeed">
            <summary>
            Name of the DeliverySpeed property on the <Typ>UserItem</Typ> item type.
            <para>DeliverySpeed is a scale for how fast content is delivered.</para>
            </summary>
            <remarks>
            Property type: Single<p/>
            Property can not contain null.<p/>
            Default value: 1<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.Language">
            <summary>
            Name of the Language property on the <Typ>UserItem</Typ> item type.
            <para>Language is the preferred language of the user.</para>
            </summary>
            <remarks>
            Property type: String[255]<p/>
            Property can not contain null.<p/>
            Default value: ""<p/>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.UserItem.MaxLanguageLength">
            <summary>
            Maximum length of the <Fld>Language</Fld> property in characters.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView">
            <summary>
            Contains constants related to the SeqNavOrganizationGlobalObjectiveView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>Key</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>OrganizationId</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.ViewName">
            <summary>
            Name of the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.OrganizationId">
            <summary>
            Name of the OrganizationId column on the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.Key">
            <summary>
            Name of the Key column on the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.LearnerId">
            <summary>
            Name of the LearnerId column on the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>UserItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.ScaledScore">
            <summary>
            Name of the ScaledScore column on the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavOrganizationGlobalObjectiveView.SuccessStatus">
            <summary>
            Name of the SuccessStatus column on the <Typ>SeqNavOrganizationGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView">
            <summary>
            Contains constants related to the SeqNavLearnerGlobalObjectiveView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>Key</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView.ViewName">
            <summary>
            Name of the <Typ>SeqNavLearnerGlobalObjectiveView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView.LearnerId">
            <summary>
            Name of the LearnerId column on the <Typ>SeqNavLearnerGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>UserItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView.Key">
            <summary>
            Name of the Key column on the <Typ>SeqNavLearnerGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView.ScaledScore">
            <summary>
            Name of the ScaledScore column on the <Typ>SeqNavLearnerGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavLearnerGlobalObjectiveView.SuccessStatus">
            <summary>
            Name of the SuccessStatus column on the <Typ>SeqNavLearnerGlobalObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView">
            <summary>
            Contains constants related to the SeqNavActivityPackageView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>Id</Fld></li>
            <li><Fld>PackageFormat</Fld></li>
            <li><Fld>PackageId</Fld></li>
            <li><Fld>PackagePath</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView.ViewName">
            <summary>
            Name of the <Typ>SeqNavActivityPackageView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView.Id">
            <summary>
            Name of the Id column on the <Typ>SeqNavActivityPackageView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView.PackageId">
            <summary>
            Name of the PackageId column on the <Typ>SeqNavActivityPackageView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>PackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView.PackageFormat">
            <summary>
            Name of the PackageFormat column on the <Typ>SeqNavActivityPackageView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.PackageFormat</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityPackageView.PackagePath">
            <summary>
            Name of the PackagePath column on the <Typ>SeqNavActivityPackageView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView">
            <summary>
            Contains constants related to the SeqNavActivityTreeView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>Id</Fld></li>
            <li><Fld>ObjectivesGlobalToSystem</Fld></li>
            <li><Fld>ParentActivityId</Fld></li>
            <li><Fld>RootActivityId</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.ViewName">
            <summary>
            Name of the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.Id">
            <summary>
            Name of the Id column on the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.ParentActivityId">
            <summary>
            Name of the ParentActivityId column on the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.DataModelCache">
            <summary>
            Name of the DataModelCache column on the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.RootActivityId">
            <summary>
            Name of the RootActivityId column on the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityTreeView.ObjectivesGlobalToSystem">
            <summary>
            Name of the ObjectivesGlobalToSystem column on the <Typ>SeqNavActivityTreeView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView">
            <summary>
            Contains constants related to the SeqNavAttemptView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptStatus</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>CurrentActivityId</Fld></li>
            <li><Fld>FinishedTimestamp</Fld></li>
            <li><Fld>Id</Fld></li>
            <li><Fld>LearnerAudioCaptioning</Fld></li>
            <li><Fld>LearnerAudioLevel</Fld></li>
            <li><Fld>LearnerDeliverySpeed</Fld></li>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>LearnerLanguage</Fld></li>
            <li><Fld>LearnerName</Fld></li>
            <li><Fld>LogDetailSequencing</Fld></li>
            <li><Fld>LogFinalSequencing</Fld></li>
            <li><Fld>LogRollup</Fld></li>
            <li><Fld>PackageFormat</Fld></li>
            <li><Fld>PackageId</Fld></li>
            <li><Fld>PackagePath</Fld></li>
            <li><Fld>RootActivityId</Fld></li>
            <li><Fld>StartedTimestamp</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            <li><Fld>SuspendedActivityId</Fld></li>
            <li><Fld>TotalPoints</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.Id">
            <summary>
            Name of the Id column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.AttemptStatus">
            <summary>
            Name of the AttemptStatus column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.AttemptStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LogDetailSequencing">
            <summary>
            Name of the LogDetailSequencing column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LogFinalSequencing">
            <summary>
            Name of the LogFinalSequencing column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LogRollup">
            <summary>
            Name of the LogRollup column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.CurrentActivityId">
            <summary>
            Name of the CurrentActivityId column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.SuspendedActivityId">
            <summary>
            Name of the SuspendedActivityId column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.RootActivityId">
            <summary>
            Name of the RootActivityId column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.PackageId">
            <summary>
            Name of the PackageId column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>PackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.PackageFormat">
            <summary>
            Name of the PackageFormat column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.PackageFormat</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.PackagePath">
            <summary>
            Name of the PackagePath column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerId">
            <summary>
            Name of the LearnerId column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>UserItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerName">
            <summary>
            Name of the LearnerName column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerAudioCaptioning">
            <summary>
            Name of the LearnerAudioCaptioning column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.AudioCaptioning</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerAudioLevel">
            <summary>
            Name of the LearnerAudioLevel column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerDeliverySpeed">
            <summary>
            Name of the LearnerDeliverySpeed column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.LearnerLanguage">
            <summary>
            Name of the LearnerLanguage column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.StartedTimestamp">
            <summary>
            Name of the StartedTimestamp column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.FinishedTimestamp">
            <summary>
            Name of the FinishedTimestamp column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.TotalPoints">
            <summary>
            Name of the TotalPoints column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.SuccessStatus">
            <summary>
            Name of the SuccessStatus column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptView.CompletionStatus">
            <summary>
            Name of the CompletionStatus column on the <Typ>SeqNavAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView">
            <summary>
            Contains constants related to the SeqNavActivityAttemptView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>ActivityPackageId</Fld></li>
            <li><Fld>AttemptCount</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>EvaluationPoints</Fld></li>
            <li><Fld>Exit</Fld></li>
            <li><Fld>Id</Fld></li>
            <li><Fld>LessonStatus</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>ObjectivesGlobalToSystem</Fld></li>
            <li><Fld>ParentId</Fld></li>
            <li><Fld>ProgressMeasure</Fld></li>
            <li><Fld>RandomPlacement</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SequencingDataCache</Fld></li>
            <li><Fld>SessionStartTimestamp</Fld></li>
            <li><Fld>SessionTime</Fld></li>
            <li><Fld>StaticDataModelCache</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            <li><Fld>SuspendData</Fld></li>
            <li><Fld>TotalTime</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ViewName">
            <summary>
            Name of the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.Id">
            <summary>
            Name of the Id column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.DataModelCache">
            <summary>
            Name of the DataModelCache column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.SequencingDataCache">
            <summary>
            Name of the SequencingDataCache column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.RandomPlacement">
            <summary>
            Name of the RandomPlacement column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ActivityPackageId">
            <summary>
            Name of the ActivityPackageId column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.StaticDataModelCache">
            <summary>
            Name of the StaticDataModelCache column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ParentId">
            <summary>
            Name of the ParentId column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ObjectivesGlobalToSystem">
            <summary>
            Name of the ObjectivesGlobalToSystem column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.CompletionStatus">
            <summary>
            Name of the CompletionStatus column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.AttemptCount">
            <summary>
            Name of the AttemptCount column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.EvaluationPoints">
            <summary>
            Name of the EvaluationPoints column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.Exit">
            <summary>
            Name of the Exit column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.ExitMode</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.LessonStatus">
            <summary>
            Name of the LessonStatus column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.LessonStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.Location">
            <summary>
            Name of the Location column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.MinScore">
            <summary>
            Name of the MinScore column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.MaxScore">
            <summary>
            Name of the MaxScore column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ProgressMeasure">
            <summary>
            Name of the ProgressMeasure column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.RawScore">
            <summary>
            Name of the RawScore column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.ScaledScore">
            <summary>
            Name of the ScaledScore column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.SessionStartTimestamp">
            <summary>
            Name of the SessionStartTimestamp column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.SessionTime">
            <summary>
            Name of the SessionTime column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.SuccessStatus">
            <summary>
            Name of the SuccessStatus column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.SuspendData">
            <summary>
            Name of the SuspendData column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavActivityAttemptView.TotalTime">
            <summary>
            Name of the TotalTime column on the <Typ>SeqNavActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView">
            <summary>
            Contains constants related to the SeqNavCurrentActivityAttemptView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>Credit</Fld></li>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>Id</Fld></li>
            <li><Fld>ObjectivesGlobalToSystem</Fld></li>
            <li><Fld>RandomPlacement</Fld></li>
            <li><Fld>SequencingDataCache</Fld></li>
            <li><Fld>StaticDataModelCache</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.ViewName">
            <summary>
            Name of the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.Id">
            <summary>
            Name of the Id column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.DataModelCache">
            <summary>
            Name of the DataModelCache column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.SequencingDataCache">
            <summary>
            Name of the SequencingDataCache column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.RandomPlacement">
            <summary>
            Name of the RandomPlacement column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.StaticDataModelCache">
            <summary>
            Name of the StaticDataModelCache column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.ObjectivesGlobalToSystem">
            <summary>
            Name of the ObjectivesGlobalToSystem column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentActivityAttemptView.Credit">
            <summary>
            Name of the Credit column on the <Typ>SeqNavCurrentActivityAttemptView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView">
            <summary>
            Contains constants related to the SeqNavCurrentCommentFromLmsView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>DataModelCache</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.ViewName">
            <summary>
            Name of the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.Comment">
            <summary>
            Name of the Comment column on the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.Location">
            <summary>
            Name of the Location column on the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.Timestamp">
            <summary>
            Name of the Timestamp column on the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.DataModelCache">
            <summary>
            Name of the DataModelCache column on the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
            <remarks>
            Column type: Xml
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavCurrentCommentFromLmsView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavCurrentCommentFromLmsView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView">
            <summary>
            Contains constants related to the SeqNavAttemptObjectiveView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>AttemptObjectiveId</Fld></li>
            <li><Fld>CompletionStatus</Fld></li>
            <li><Fld>Description</Fld></li>
            <li><Fld>IsPrimaryObjective</Fld></li>
            <li><Fld>Key</Fld></li>
            <li><Fld>LessonStatus</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>ProgressMeasure</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>SuccessStatus</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.AttemptObjectiveId">
            <summary>
            Name of the AttemptObjectiveId column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.CompletionStatus">
            <summary>
            Name of the CompletionStatus column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.CompletionStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.Description">
            <summary>
            Name of the Description column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.IsPrimaryObjective">
            <summary>
            Name of the IsPrimaryObjective column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.Key">
            <summary>
            Name of the Key column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.LessonStatus">
            <summary>
            Name of the LessonStatus column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.LessonStatus</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.RawScore">
            <summary>
            Name of the RawScore column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.MinScore">
            <summary>
            Name of the MinScore column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.MaxScore">
            <summary>
            Name of the MaxScore column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.ProgressMeasure">
            <summary>
            Name of the ProgressMeasure column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.ScaledScore">
            <summary>
            Name of the ScaledScore column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveView.SuccessStatus">
            <summary>
            Name of the SuccessStatus column on the <Typ>SeqNavAttemptObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.SuccessStatus</Typ>
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView">
            <summary>
            Contains constants related to the SeqNavAttemptCommentFromLearnerView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>CommentFromLearnerId</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.CommentFromLearnerId">
            <summary>
            Name of the CommentFromLearnerId column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>CommentFromLearnerItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.Comment">
            <summary>
            Name of the Comment column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.Location">
            <summary>
            Name of the Location column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.Timestamp">
            <summary>
            Name of the Timestamp column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCommentFromLearnerView.Ordinal">
            <summary>
            Name of the Ordinal column on the <Typ>SeqNavAttemptCommentFromLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView">
            <summary>
            Contains constants related to the SeqNavAttemptInteractionView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>Description</Fld></li>
            <li><Fld>EvaluationPoints</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>InteractionIdFromCmi</Fld></li>
            <li><Fld>InteractionType</Fld></li>
            <li><Fld>Latency</Fld></li>
            <li><Fld>LearnerResponseBool</Fld></li>
            <li><Fld>LearnerResponseNumeric</Fld></li>
            <li><Fld>LearnerResponseString</Fld></li>
            <li><Fld>MaxScore</Fld></li>
            <li><Fld>MinScore</Fld></li>
            <li><Fld>RawScore</Fld></li>
            <li><Fld>ResultNumeric</Fld></li>
            <li><Fld>ResultState</Fld></li>
            <li><Fld>ScaledScore</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            <li><Fld>Weighting</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.InteractionIdFromCmi">
            <summary>
            Name of the InteractionIdFromCmi column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.InteractionType">
            <summary>
            Name of the InteractionType column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.InteractionType</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.Timestamp">
            <summary>
            Name of the Timestamp column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.Weighting">
            <summary>
            Name of the Weighting column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.ResultState">
            <summary>
            Name of the ResultState column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: <Typ>/Microsoft.LearningComponents.InteractionResultState</Typ>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.ResultNumeric">
            <summary>
            Name of the ResultNumeric column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.Latency">
            <summary>
            Name of the Latency column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.Description">
            <summary>
            Name of the Description column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.LearnerResponseBool">
            <summary>
            Name of the LearnerResponseBool column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.LearnerResponseString">
            <summary>
            Name of the LearnerResponseString column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.LearnerResponseNumeric">
            <summary>
            Name of the LearnerResponseNumeric column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.ScaledScore">
            <summary>
            Name of the ScaledScore column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.RawScore">
            <summary>
            Name of the RawScore column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.MinScore">
            <summary>
            Name of the MinScore column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.MaxScore">
            <summary>
            Name of the MaxScore column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionView.EvaluationPoints">
            <summary>
            Name of the EvaluationPoints column on the <Typ>SeqNavAttemptInteractionView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView">
            <summary>
            Contains constants related to the SeqNavAttemptEvaluationCommentLearnerView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>Comment</Fld></li>
            <li><Fld>EvaluationCommentId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>Location</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Timestamp</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.EvaluationCommentId">
            <summary>
            Name of the EvaluationCommentId column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>EvaluationCommentItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.Comment">
            <summary>
            Name of the Comment column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.Location">
            <summary>
            Name of the Location column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.Timestamp">
            <summary>
            Name of the Timestamp column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptEvaluationCommentLearnerView.Ordinal">
            <summary>
            Name of the Ordinal column on the <Typ>SeqNavAttemptEvaluationCommentLearnerView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView">
            <summary>
            Contains constants related to the SeqNavAttemptCorrectResponseView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>CorrectResponseId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>ResponsePattern</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptCorrectResponseView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptCorrectResponseView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView.CorrectResponseId">
            <summary>
            Name of the CorrectResponseId column on the <Typ>SeqNavAttemptCorrectResponseView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>CorrectResponseItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptCorrectResponseView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptCorrectResponseView.ResponsePattern">
            <summary>
            Name of the ResponsePattern column on the <Typ>SeqNavAttemptCorrectResponseView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView">
            <summary>
            Contains constants related to the SeqNavAttemptInteractionObjectiveView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>AttemptObjectiveId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>InteractionObjectiveId</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptInteractionObjectiveView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptInteractionObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView.InteractionObjectiveId">
            <summary>
            Name of the InteractionObjectiveId column on the <Typ>SeqNavAttemptInteractionObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionObjectiveItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptInteractionObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionObjectiveView.AttemptObjectiveId">
            <summary>
            Name of the AttemptObjectiveId column on the <Typ>SeqNavAttemptInteractionObjectiveView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView">
            <summary>
            Contains constants related to the SeqNavAttemptExtensionDataView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>ActivityAttemptId</Fld></li>
            <li><Fld>AttachmentGuid</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>BoolValue</Fld></li>
            <li><Fld>DateTimeValue</Fld></li>
            <li><Fld>DoubleValue</Fld></li>
            <li><Fld>ExtensionDataId</Fld></li>
            <li><Fld>IntValue</Fld></li>
            <li><Fld>Name</Fld></li>
            <li><Fld>StringValue</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.ActivityAttemptId">
            <summary>
            Name of the ActivityAttemptId column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ActivityAttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.ExtensionDataId">
            <summary>
            Name of the ExtensionDataId column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ExtensionDataItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.Name">
            <summary>
            Name of the Name column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.StringValue">
            <summary>
            Name of the StringValue column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.IntValue">
            <summary>
            Name of the IntValue column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.BoolValue">
            <summary>
            Name of the BoolValue column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.DoubleValue">
            <summary>
            Name of the DoubleValue column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.DateTimeValue">
            <summary>
            Name of the DateTimeValue column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptExtensionDataView.AttachmentGuid">
            <summary>
            Name of the AttachmentGuid column on the <Typ>SeqNavAttemptExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Guid
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView">
            <summary>
            Contains constants related to the SeqNavAttemptObjectiveExtensionDataView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttachmentGuid</Fld></li>
            <li><Fld>AttachmentValue</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>AttemptObjectiveId</Fld></li>
            <li><Fld>BoolValue</Fld></li>
            <li><Fld>DateTimeValue</Fld></li>
            <li><Fld>DoubleValue</Fld></li>
            <li><Fld>ExtensionDataId</Fld></li>
            <li><Fld>IntValue</Fld></li>
            <li><Fld>Name</Fld></li>
            <li><Fld>StringValue</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.ExtensionDataId">
            <summary>
            Name of the ExtensionDataId column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ExtensionDataItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.AttemptObjectiveId">
            <summary>
            Name of the AttemptObjectiveId column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptObjectiveItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.Name">
            <summary>
            Name of the Name column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.StringValue">
            <summary>
            Name of the StringValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.IntValue">
            <summary>
            Name of the IntValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.BoolValue">
            <summary>
            Name of the BoolValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.DoubleValue">
            <summary>
            Name of the DoubleValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.DateTimeValue">
            <summary>
            Name of the DateTimeValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.AttachmentGuid">
            <summary>
            Name of the AttachmentGuid column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Guid
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptObjectiveExtensionDataView.AttachmentValue">
            <summary>
            Name of the AttachmentValue column on the <Typ>SeqNavAttemptObjectiveExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: ByteArray[]
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView">
            <summary>
            Contains constants related to the SeqNavAttemptInteractionExtensionDataView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttachmentGuid</Fld></li>
            <li><Fld>AttachmentValue</Fld></li>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>BoolValue</Fld></li>
            <li><Fld>DateTimeValue</Fld></li>
            <li><Fld>DoubleValue</Fld></li>
            <li><Fld>ExtensionDataId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>IntValue</Fld></li>
            <li><Fld>Name</Fld></li>
            <li><Fld>StringValue</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.ExtensionDataId">
            <summary>
            Name of the ExtensionDataId column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>ExtensionDataItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.Name">
            <summary>
            Name of the Name column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.StringValue">
            <summary>
            Name of the StringValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: String[]
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.IntValue">
            <summary>
            Name of the IntValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.BoolValue">
            <summary>
            Name of the BoolValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.DoubleValue">
            <summary>
            Name of the DoubleValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Double
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.DateTimeValue">
            <summary>
            Name of the DateTimeValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: DateTime
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.AttachmentGuid">
            <summary>
            Name of the AttachmentGuid column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: Guid
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptInteractionExtensionDataView.AttachmentValue">
            <summary>
            Name of the AttachmentValue column on the <Typ>SeqNavAttemptInteractionExtensionDataView</Typ> view.
            </summary>
            <remarks>
            Column type: ByteArray[]
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView">
            <summary>
            Contains constants related to the SeqNavAttemptRubricView view.
            </summary>
            <remarks>
            Columns in the view:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            <li><Fld>InteractionId</Fld></li>
            <li><Fld>IsSatisfied</Fld></li>
            <li><Fld>Ordinal</Fld></li>
            <li><Fld>Points</Fld></li>
            <li><Fld>RubricItemId</Fld></li>
            </ul>
            Parameters in the view:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.ViewName">
            <summary>
            Name of the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.AttemptId">
            <summary>
            Name of the AttemptId column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.RubricItemId">
            <summary>
            Name of the RubricItemId column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>RubricItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.InteractionId">
            <summary>
            Name of the InteractionId column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Reference to a <Typ>InteractionItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.Ordinal">
            <summary>
            Name of the Ordinal column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Int32
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.IsSatisfied">
            <summary>
            Name of the IsSatisfied column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Boolean
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.SeqNavAttemptRubricView.Points">
            <summary>
            Name of the Points column on the <Typ>SeqNavAttemptRubricView</Typ> view.
            </summary>
            <remarks>
            Column type: Single
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.AddPackageReferenceRight">
            <summary>
            Contains constants related to the AddPackageReferenceRight right.
            </summary>
            <remarks>
            Parameters in the right:
            None
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.AddPackageReferenceRight.RightName">
            <summary>
            Name of the <Typ>AddPackageReferenceRight</Typ> right.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.RemovePackageReferenceRight">
            <summary>
            Contains constants related to the RemovePackageReferenceRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>PackageId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RemovePackageReferenceRight.RightName">
            <summary>
            Name of the <Typ>RemovePackageReferenceRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RemovePackageReferenceRight.PackageId">
            <summary>
            Name of the PackageId parameter on the <Typ>RemovePackageReferenceRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>PackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ReadPackageRight">
            <summary>
            Contains constants related to the ReadPackageRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>PackageId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ReadPackageRight.RightName">
            <summary>
            Name of the <Typ>ReadPackageRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ReadPackageRight.PackageId">
            <summary>
            Name of the PackageId parameter on the <Typ>ReadPackageRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>PackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.CreateAttemptRight">
            <summary>
            Contains constants related to the CreateAttemptRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>LearnerId</Fld></li>
            <li><Fld>RootActivityId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CreateAttemptRight.RightName">
            <summary>
            Name of the <Typ>CreateAttemptRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CreateAttemptRight.RootActivityId">
            <summary>
            Name of the RootActivityId parameter on the <Typ>CreateAttemptRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>ActivityPackageItem</Typ> item type.
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.CreateAttemptRight.LearnerId">
            <summary>
            Name of the LearnerId parameter on the <Typ>CreateAttemptRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>UserItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.DeleteAttemptRight">
            <summary>
            Contains constants related to the DeleteAttemptRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.DeleteAttemptRight.RightName">
            <summary>
            Name of the <Typ>DeleteAttemptRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.DeleteAttemptRight.AttemptId">
            <summary>
            Name of the AttemptId parameter on the <Typ>DeleteAttemptRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ExecuteSessionRight">
            <summary>
            Contains constants related to the ExecuteSessionRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExecuteSessionRight.RightName">
            <summary>
            Name of the <Typ>ExecuteSessionRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ExecuteSessionRight.AttemptId">
            <summary>
            Name of the AttemptId parameter on the <Typ>ExecuteSessionRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.ReviewSessionRight">
            <summary>
            Contains constants related to the ReviewSessionRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ReviewSessionRight.RightName">
            <summary>
            Name of the <Typ>ReviewSessionRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.ReviewSessionRight.AttemptId">
            <summary>
            Name of the AttemptId parameter on the <Typ>ReviewSessionRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.BaseSchema.RandomAccessSessionRight">
            <summary>
            Contains constants related to the RandomAccessSessionRight right.
            </summary>
            <remarks>
            Parameters in the right:
            <ul>
            <li><Fld>AttemptId</Fld></li>
            </ul>
            </remarks>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RandomAccessSessionRight.RightName">
            <summary>
            Name of the <Typ>RandomAccessSessionRight</Typ> right.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.BaseSchema.RandomAccessSessionRight.AttemptId">
            <summary>
            Name of the AttemptId parameter on the <Typ>RandomAccessSessionRight</Typ> right.
            </summary>
            <remarks>
            Parameter type: Reference to a <Typ>AttemptItem</Typ> item type.
            </remarks>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ActivityAttemptItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.ActivityAttemptItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityAttemptItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the ActivityAttemptItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityAttemptItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the ActivityAttemptItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a ActivityAttemptItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ActivityObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.ActivityObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the ActivityObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the ActivityObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a ActivityObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ActivityPackageItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.ActivityPackageItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityPackageItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the ActivityPackageItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ActivityPackageItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the ActivityPackageItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a ActivityPackageItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageGlobalObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.PackageGlobalObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageGlobalObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the PackageGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageGlobalObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the PackageGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a PackageGlobalObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.AttemptItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.AttemptItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttemptItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the AttemptItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttemptItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the AttemptItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a AttemptItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.AttemptObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.AttemptObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttemptObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the AttemptObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.AttemptObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the AttemptObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a AttemptObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.CommentFromLearnerItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLearnerItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CommentFromLearnerItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the CommentFromLearnerItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CommentFromLearnerItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the CommentFromLearnerItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a CommentFromLearnerItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.CommentFromLmsItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.CommentFromLmsItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CommentFromLmsItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the CommentFromLmsItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CommentFromLmsItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the CommentFromLmsItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a CommentFromLmsItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.CorrectResponseItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.CorrectResponseItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CorrectResponseItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the CorrectResponseItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.CorrectResponseItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the CorrectResponseItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a CorrectResponseItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.EvaluationCommentItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.EvaluationCommentItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.EvaluationCommentItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the EvaluationCommentItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.EvaluationCommentItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the EvaluationCommentItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a EvaluationCommentItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ExtensionDataItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.ExtensionDataItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExtensionDataItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the ExtensionDataItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ExtensionDataItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the ExtensionDataItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a ExtensionDataItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.GlobalObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.GlobalObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.GlobalObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the GlobalObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.GlobalObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the GlobalObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a GlobalObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.InteractionItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.InteractionItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.InteractionItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the InteractionItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.InteractionItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the InteractionItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a InteractionItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.InteractionObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.InteractionObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.InteractionObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the InteractionObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.InteractionObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the InteractionObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a InteractionObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearnerGlobalObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.LearnerGlobalObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearnerGlobalObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the LearnerGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearnerGlobalObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the LearnerGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a LearnerGlobalObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.MapActivityObjectiveToGlobalObjectiveItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.MapActivityObjectiveToGlobalObjectiveItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.MapActivityObjectiveToGlobalObjectiveItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the MapActivityObjectiveToGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.MapActivityObjectiveToGlobalObjectiveItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the MapActivityObjectiveToGlobalObjectiveItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a MapActivityObjectiveToGlobalObjectiveItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.PackageItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the PackageItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.PackageItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the PackageItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a PackageItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.RubricItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.RubricItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RubricItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the RubricItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RubricItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the RubricItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a RubricItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.ResourceItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.ResourceItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ResourceItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the ResourceItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.ResourceItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the ResourceItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a ResourceItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.SequencingLogEntryItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.SequencingLogEntryItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SequencingLogEntryItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the SequencingLogEntryItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.SequencingLogEntryItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the SequencingLogEntryItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a SequencingLogEntryItem identifier.</exception>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.UserItemIdentifier">
            <summary>
            Represents an identifier to a <Typ>/Microsoft.LearningComponents.Storage.BaseSchema.UserItem</Typ> in a store.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.UserItemIdentifier.#ctor(System.Int64)">
            <summary>
            Create a new instance of the UserItemIdentifier class.
            </summary>
            <param name="key">The unique integer value assigned to the item.  This must be a positive integer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="key"/> is not a valid positive integer.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.UserItemIdentifier.#ctor(Microsoft.LearningComponents.Storage.LearningStoreItemIdentifier)">
            <summary>
            Create a new instance of the UserItemIdentifier class.
            </summary>
            <param name="id">Identifier that should be copied.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is a null refrence.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id"/> does not contain
            a UserItem identifier.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.#ctor(Microsoft.LearningComponents.Storage.LearningStore,System.Int64)">
            <summary>
            Initializes a new <Typ>RandomAccessNavigator</Typ> object.
            </summary>
            <param name="store">A <Typ>LearningStore</Typ> object that references the database to use.</param>
            <param name="attemptId">The unique identifier of the attempt item in the database.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.LoadTableOfContents(System.Boolean)">
            <summary>
            Loads the table of contents into memory and verifies which elements are valid to navigate to.
            </summary>
            <param name="evaluateSequencingRules">This parameter has no affect on this type of navigator,
            because all activities are always valid to navigate to.</param>
            <returns>The root table of contents element.</returns>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.IsNavigationValid(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Determines if the passed navigation command is valid to execute or not.
            </summary>
            <param name="command">The navigation command to test.</param>
            <returns>True if the navigation would succeed, false otherwise.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The command passed is not a valid enumeration value, or is not equal to NavigationCommand.Continue or NavigationCommand.Previous.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.IsNavigationToValid(System.String)">
            <summary>
            Determines if a choice navigation to the activity identified by the string identifier passed will succeed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.IsNavigationToValid(System.Int64)">
            <summary>
            Determines if a choice navigation to the activity identified by the unique identifier passed will succeed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <returns>True if a choice navigation will succeed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.LoadLearningDataModel">
            <summary>
            Loads data for the current activity and its data model into memory.  If this data
            is already in memory, this call does nothing.
            </summary>
            <remarks>
            This method and <Mth>LoadActivityTree</Mth> (and <Mth>CreateExecuteNavigator</Mth>, which is 
            equivalent) are the only two methods that load Navigator data from the database.  This method
            specifically does not load the entire activity tree, and a subsequent call to LoadActivityTree
            will still result in a database access.  The reverse is not true - if LoadActivityTree is called
            first, this method will do nothing.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.LoadActivityTree">
            <summary>
            Loads the entire activity tree from the database, if it is not already in memory.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the attempt ID is invalid.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.ReadGlobalObjectivesAsNecessary">
            <summary>
            Reads global objective information when the activity is to be "delivered".
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.Navigate(Microsoft.LearningComponents.NavigationCommand)">
            <summary>
            Performs a Continue or Previous navigation command.  Any other command will throw.
            </summary>
            <param name="command">Navigation command to execute.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The command passed is not a valid enumeration value, or is not equal to NavigationCommand.Continue or NavigationCommand.Previous.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.NavigateTo(System.String)">
            <summary>
            Performs a choice navigation to the activity identified by the string identifier passed.
            </summary>
            <param name="destination">String identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.InvalidOperationException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.NavigateTo(System.Int64)">
            <summary>
            Performs a choice navigation to the activity identified by the unique identifier passed.
            </summary>
            <param name="id">Unique identifier of the activity to navigate to.</param>
            <exception cref="T:Microsoft.LearningComponents.SequencingException">Thrown if the navigation fails because a sequencing rule failed.</exception>
            <exception cref="T:System.InvalidOperationException">The destination passed is not a valid activity in this activity tree.</exception>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.Save">
            <summary>
            Saves any data that has been changed to the database, if necessary.  Specifically excludes saving
            data to the AttemptItem.
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.RandomAccessNavigator.ProcessDataModelNavigation">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.PackageResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.FSPS_BasePathDirNotFound">
            <summary>
              Looks up a localized string similar to The folder &apos;{0}&apos; must exist prior to calling this method..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.FSPS_CouldNotFindDirectory">
            <summary>
              Looks up a localized string similar to Could not find a unique directory name to use for the files..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.FSPS_InvalidPackageId">
            <summary>
              Looks up a localized string similar to The LearningStoreItemIdentifier {0} does not represent a package in LearningStore..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.PS_InvalidManifest">
            <summary>
              Looks up a localized string similar to The package cannot be added to LearningStore because the manifest in the package cannot be read..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.PS_NoOrganization">
            <summary>
              Looks up a localized string similar to The package must contain at least one organization and one item in order to be added to LearningStore..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.PackageResources.PS_ValidationFailed">
            <summary>
              Looks up a localized string similar to The package cannot be added to the store because it contains at least one error..
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.SessionResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_AbandonCurrentActivityNotValid">
            <summary>
              Looks up a localized string similar to The current activity cannot be abandoned. There must be a current activity in an active session in order to abandon it. .
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_AbandonNotValid">
            <summary>
              Looks up a localized string similar to The session cannot be abandoned in its current state. In Execute view, only Active sessions may be abandoned. Sessions may not be abandoned in other views..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_AttemptEndTimeNotValid">
            <summary>
              Looks up a localized string similar to The attempt associated with this session has not ended..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_AttemptHasStarted">
            <summary>
              Looks up a localized string similar to The attempt has already started. You may not call Start more than once..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_CommitChangesNotValid">
            <summary>
              Looks up a localized string similar to The changes to the current session cannot be committed. The session may not be in Review view when calling this method. .
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_CouldNotFindFirstActivity">
            <summary>
              Looks up a localized string similar to An initial activity could not be identified in the session..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ExitCurrentActivityNotValid">
            <summary>
              Looks up a localized string similar to The current activity cannot be exited. There must be a current activity in an active session in order to exit it. .
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ExitNotValid">
            <summary>
              Looks up a localized string similar to The session cannot be exited in its current state. In Execute view, only Active sessions which have been started may be exited. Sessions may not be exited in other views..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_InvalidateSessionCacheNotValid">
            <summary>
              Looks up a localized string similar to The session cache cannot be cleared because the current session contains an active attempt. .
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_LoggingFlagsSetNotValid">
            <summary>
              Looks up a localized string similar to The LoggingOptions property may not be set when reviewing a session..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_MoveToActivityNotValid">
            <summary>
              Looks up a localized string similar to The session is not in a state where a new activity may be selected. In Execute view, only Active sessions may navigate to a selected activity..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_MoveToNextNotValid">
            <summary>
              Looks up a localized string similar to Moving to the next activity is not valid. In Execute view, only Active sessions with a current activity may navigate to the next activity..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_MoveToPreviousNotValid">
            <summary>
              Looks up a localized string similar to Moving to the previous activity is not valid. In Execute view, only Active sessions with a current activity may navigate to the next activity..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ProcessNavigationRequestsNotValid">
            <summary>
              Looks up a localized string similar to Navigation requests cannot be processed. In an ExecuteView, the AttemptStatus must be Active. This call is not valid in RandomAccess and Review views..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ReactivateNotValid">
            <summary>
              Looks up a localized string similar to It is not valid to reactivate the current session. Only a completed or abandoned session may be reactivated, and only in RandomAccess view..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_RenderNotValid">
            <summary>
              Looks up a localized string similar to The content cannot be rendered. In Execute view, the session must have an AttemptStatus of Active..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ResourceNotFound">
            <summary>
              Looks up a localized string similar to The current activity in the session does not have an associated resource. The content cannot be displayed..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_ResumeNotValid">
            <summary>
              Looks up a localized string similar to The session cannot be resumed in its current state. In Execute view, only Suspended sessions may be resumed. Sessions may not be resumed in other views..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_StartNotValid">
            <summary>
              Looks up a localized string similar to A session may only be started on an active attempt in ExecuteView. The session may not be in Review or RandomAccess view when calling this method..
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.SessionResources.SLS_SuspendNotValid">
            <summary>
              Looks up a localized string similar to The session cannot be suspended in its current state. In Execute view, only Active sessions may be suspended. Sessions may not be suspended in other views..
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreSortDirection">
            <summary>
            Specifies how to sort the results of a query
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSortDirection.Ascending">
            <summary>
            Ascending
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreSortDirection.Descending">
            <summary>
            Descending
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator">
            <summary>
            Condition operator
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.Equal">
            <summary>
            Condition evaluates to "true" if the value is
            equal to a constant.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.GreaterThan">
            <summary>
            Condition evaluates to "true" if the value is
            greater than a constant.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.GreaterThanEqual">
            <summary>
            Condition evaluates to "true" if the value is
            greater than or equal to a constant.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.LessThan">
            <summary>
            Condition evaluates to "true" if the value is 
            less than a constant.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.LessThanEqual">
            <summary>
            Condition evaluates to "true" if the value is
            less then or equal to a constant.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreConditionOperator.NotEqual">
            <summary>
            Condition evaluates to "true" if the value is
            not equal to a constant.
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreCondition">
            <summary>
            Represents a condition in a LearningStoreQuery
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreCondition.m_column">
            <summary>
            Column that should be compared
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreCondition.m_conditionOperator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreCondition.m_conditionValue">
            <summary>
            Value to be compared against
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreCondition.#ctor(Microsoft.LearningComponents.Storage.LearningStoreViewColumn,Microsoft.LearningComponents.Storage.LearningStoreConditionOperator,System.Object)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreCondition</Typ> class.
            </summary>
            <param name="column"></param>
            <param name="conditionOperator"></param>
            <param name="conditionValue"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreCondition.Column">
            <summary>
            Column that should be compared
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreCondition.ConditionOperator">
            <summary>
            Comparison operator
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreCondition.ConditionValue">
            <summary>
            Value to be compared against
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue">
            <summary>
            Represents a parameter value in a LearningStoreQuery
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue.m_parameter">
            <summary>
            Parameter
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue.m_value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue.#ctor(Microsoft.LearningComponents.Storage.LearningStoreViewParameter,System.Object)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreQueryParameter</Typ> class.
            </summary>
            <param name="parameter"></param>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue.Parameter">
            <summary>
            Parameter
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQueryParameterValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreQuerySort">
            <summary>
            Represents a sort in a LearningStoreQuery
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuerySort.m_column">
            <summary>
            Column that should be sorted
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuerySort.m_direction">
            <summary>
            Direction of sort
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuerySort.#ctor(Microsoft.LearningComponents.Storage.LearningStoreViewColumn,Microsoft.LearningComponents.Storage.LearningStoreSortDirection)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreQuerySort</Typ> class.
            </summary>
            <param name="column"></param>
            <param name="direction"></param>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuerySort.Column">
            <summary>
            Column that should be sorted
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuerySort.Direction">
            <summary>
            Direction of sort
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreQuery">
            <summary>
            Represents a query that can be used to retrieve information from the database.
            </summary>
            <remarks>
            Steps required to perform a query on a store:<ol>
            <li>Create a <Typ>LearningStoreQuery</Typ> object on the store using
            <Mth>../LearningStore.CreateQuery</Mth>.</li>
            <li>Call methods on the <Typ>LearningStoreQuery</Typ> to finish defining the query.
            Add parameter values, output columns, conditions, and/or sorting information.</li>
            <li>Call <Mth>../LearningStoreJob.PerformQuery</Mth> to add the "perform query"
            operation to a job on the store.</li>
            <li>Execute the job.  A <Typ>/System.Data.DataTable</Typ> is returned
            as a result.  See the <Mth>../LearningStoreJob.PerformQuery</Mth> documentation
            for more information about the results returned.</li>
            </ol>
            <p/>
            The definition of an query includes:<ul>
            <li>A view or item type that has been defined in the schema.  This is specified when calling
            <Mth>../LearningStore.CreateQuery</Mth>.  If an item type
            is specified, then the default view for the item type is used.</li>
            <li>A value for each parameter defined in the view.  These are set by calling
            the <Mth>SetParameter</Mth> method.  If a parameter isn't set, it will have
            a value of null.</li>
            <li>A set of output columns.  These are added to a query by calling the
            <Mth>AddColumn</Mth> method.  For a view, these columns were specified in the
            schema.  For an item type, one column exists for each property on the item
            type.</li>
            <li>A set of conditions.  These are added to the query by calling the
            <Mth>AddCondition</Mth> method.  The conditions are "anded" together.</li>
            <li>A set of sort operations.  These are added to the query by calling
            the <Mth>AddSort</Mth> method.</li>
            </ul>
            Here's a very simple query:
            <code language="C#">
            LearningStoreQuery query = store.CreateQuery("UserItem");
            query.AddColumn("Name");
            </code>
            The query above will return the names of all the users in the store.
            The output DataTable will contain one row for each UserItem.  The output
            DataTable will contain one column named "Name."  That column will
            contain the value of the "Name" property on the corresponding UserItem.
            Here's a more complicated query:
            <code language="C#">
            LearningStoreQuery query = store.CreateQuery("UserItem");
            query.AddColumn("Id");
            query.AddColumn("Name");
            query.AddCondition("Name", LearningStoreConditionOperator.LessThan, "Joe");
            query.AddSort("Name", LearningStoreSortDirection.Ascending);
            </code>
            This query will return the Ids and names of all the users having a
            name less than "Joe."  The DataTable will again contain one row for each
            UserItem.  The DataTable will contain two columns.  The first
            column will be named "Id" and will contain the Id of the corresponding
            UserItem.  The second column will be named "Name" and will
            contain the Name of the corresponding UserItem.  The users will be
            sorted in ascending order by their name.
            </remarks>
            
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_store">
            <summary>
            Store on which the query object was created
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_view">
            <summary>
            View for the query
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_locale">
            <summary>
            Locale used for conversion to/from strings
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_columns">
            <summary>
            Columns in the query
            </summary>        
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_sorts">
            <summary>
            Sorts in the query
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_parameterValues">
            <summary>
            Parameters in the query
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreQuery.m_conditions">
            <summary>
            Conditions in the query
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuery.#ctor(Microsoft.LearningComponents.Storage.LearningStore,Microsoft.LearningComponents.Storage.LearningStoreView,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreQuerySort</Typ> class.
            </summary>
            <param name="store">Store on which the query is created on.</param>
            <param name="view">View for the query.</param>
            <param name="locale">Locale used for conversion to/from strings.</param>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuery.AddColumn(System.String)">
            <summary>
            Add a new output column in the result.
            </summary>
            <param name="columnName">Name of the column that should be returned in the result.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnName"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">
                The column has already been added, or the column name wasn't found in the view.</exception>
            <remarks>
            See the <Typ>LearningStoreQuery</Typ> documentation for more
            information about creating and executing queries.
            </remarks>
            <example>
            The following code creates a new query and adds two
            output columns:
            <code language="C#">
            LearningStoreQuery query = store.CreateQuery("UserItem");
            query.AddColumn("Id");
            query.AddColumn("Name");
            </code>
            The result of the query will be a DataTable with two
            columns: "Id" (containing the Id of the user) and
            "Name" (containing the name of the user).  One row
            will exist in the table for each user.
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuery.SetParameter(System.String,System.Object)">
            <summary>
            Sets the value for a parameter in a query.
            </summary>
            <param name="parameterName">Name of the parameter</param>
            <param name="value">Value of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parameterName"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Invalid
                <paramref name="value"/> value.</exception>
            <remarks>
            See the <Typ>LearningStoreQuery</Typ> documentation for more
            information about creating and executing queries.
            <p/>
            <paramref name="value"/> must contain a value
                that is valid based on the type of the parameter specified by
                <paramref name="parameterName"/>:
            <ul>
            <li><b>Boolean:</b> A System.Boolean, or an object that can be converted into
                a System.Boolean using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>ByteArray</b> A System.Byte array.</li>
            <li><b>DateTime:</b> A System.DateTime, or an object that can be converted into
                a System.DateTime using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Double:</b> A System.Double, or an object that can be converted into
                a System.Double using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Enumeration:</b> An System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Guid</b> A System.Guid or a string representing a Guid.</li>
            <li><b>Item identifier:</b> A <Typ>LearningStoreItemIdentifier</Typ> 
                of the associated item type.</li>
            <li><b>Int32:</b> A System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Single:</b> A System.Single, or an object that can be converted into
                a System.Single using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>String:</b> A System.String, or an object that can be converted into
                a System.String using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Xml:</b> A <Typ>LearningStoreXml</Typ>.</li>
            </ul>
            <p/>
            <paramref name="value"/> must not contain a <Typ>LearningStoreItemIdentifier</Typ> returned
                from <Mth>../LearningStoreJob.AddItem</Mth>.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuery.AddCondition(System.String,Microsoft.LearningComponents.Storage.LearningStoreConditionOperator,System.Object)">
            <summary>
            Add a condition that restricts the data returned in a query.
            </summary>
            <param name="columnName">Name of the column to be compared</param>
            <param name="conditionOperator">Condition operator</param>
            <param name="conditionValue">Value to be compared against.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnName"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="conditionOperator"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">
                Invalid comparison, the column name wasn't found in the view, or an invalid
                <paramref name="conditionValue"/> value.</exception>
            <remarks>
            See the <Typ>LearningStoreQuery</Typ> documentation for more
            information about creating and executing queries.
            <p/>
            <paramref name="conditionValue"/> must contain a value
                that is valid based on the type of the column specified by
                <paramref name="columnName"/>:
            <ul>
            <li><b>Boolean:</b> A System.Boolean, or an object that can be converted into
                a System.Boolean using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>ByteArray</b> A System.Byte array.</li>
            <li><b>DateTime:</b> A System.DateTime, or an object that can be converted into
                a System.DateTime using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Double:</b> A System.Double, or an object that can be converted into
                a System.Double using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Enumeration:</b> An System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Guid</b> A System.Guid or a string representing a Guid.</li>
            <li><b>Item identifier:</b> A <Typ>LearningStoreItemIdentifier</Typ> 
                of the associated item type.</li>
            <li><b>Int32:</b> A System.Int32, or an object that can be converted into
                a System.Int32 using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Single:</b> A System.Single, or an object that can be converted into
                a System.Single using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>String:</b> A System.String, or an object that can be converted into
                a System.String using <Typ>/System.IConvertible</Typ>.</li>
            <li><b>Xml:</b> A <Typ>LearningStoreXml</Typ>.</li>
            </ul>
            <p/>
            <paramref name="conditionValue"/> must not contain a <Typ>LearningStoreItemIdentifier</Typ> returned
                from <Mth>../LearningStoreJob.AddItem</Mth>.
            <p/>
            If <paramref name="columnName"/> refers to an XML column, then the following restrictions apply:
            <ul>
            <li><paramref name="conditionOperator"/> must be <Fld>../LearningStoreConditionOperator.Equal</Fld> or
                <Fld>../LearningStoreConditionOperator.NotEqual</Fld></li>
            <li><paramref name="conditionValue"/> must be null.</li>
            </ul>
            <p/>
            If <paramref name="columnName"/> refers to an Guid column, then the following restrictions apply:
            <ul>
            <li><paramref name="conditionOperator"/> must be <Fld>../LearningStoreConditionOperator.Equal</Fld> or
                <Fld>../LearningStoreConditionOperator.NotEqual</Fld></li>
            </ul>
            <p/>
            If <paramref name="conditionOperator"/> is <Fld>../LearningStoreConditionOperator.GreaterThan</Fld>,
                <Fld>../LearningStoreConditionOperator.GreaterThanEqual</Fld>,
                <Fld>../LearningStoreConditionOperator.LessThan</Fld>, or 
                <Fld>../LearningStoreConditionOperator.LessThanEqual</Fld>, then
                <paramref name="conditionValue"/> must not contain null.
            <p/>
            Care must be taken when null is involved in a comparison.  In
            particular:<ul>
            <li>null == null: True</li>
            <li>null != null: False</li>
            <li>null == any other value: False</li>
            <li>null != any other value: True</li>
            <li>null &lt; any other value: False</li>
            <li>null &gt; any other value: False</li>
            </ul>
            </remarks>
            <example>
            The following code creates a new query that returns the id and name
            of the users with a name less than "Joe":
            <code language="C#">
            LearningStoreQuery query = store.CreateQuery("UserItem");
            query.AddColumn("Id");
            query.AddColumn("Name");
            query.AddCondition("Name", LearningStoreConditionOperator.LessThan, "Joe");
            </code>
            </example>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreQuery.AddSort(System.String,Microsoft.LearningComponents.Storage.LearningStoreSortDirection)">
            <summary>
            Add a sort order for the returned data
            </summary>
            <param name="columnName">Name of the column to be sorted on.  This must
                refer to a non-XML, non-Guid column.</param>
            <param name="direction">Direction for the sort.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="columnName"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="direction"/> is invalid.</exception>
            <exception cref="T:System.InvalidOperationException">
                The column was not found or is not sortable</exception>
            <example>
            The following code creates a new query that returns the names of
            all the users in the system sorted by name:
            <code language="C#">
            LearningStoreQuery query = store.CreateQuery("UserItemView");
            query.AddColumn("Name");
            query.AddSort("Name", LearningStoreSortDirection.Ascending);
            </code>
            </example>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.Store">
            <summary>
            Store on which the query was created
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.View">
            <summary>
            View for the query
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.ParameterValues">
            <summary>
            Parameter values in the query
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.Columns">
            <summary>
            Columns in the query
            </summary>        
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.Conditions">
            <summary>
            Conditions in the query
            </summary>        
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreQuery.Sorts">
            <summary>
            Sorts in the query
            </summary>        
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope">
            <summary>
            Makes the LearningStore-related operations in a code block transactional.
            </summary>
            <remarks>
            By default, <Mth>../LearningStoreJob.Execute</Mth> creates a new
            transaction every time it is called. If <Mth>../LearningStoreJob.Execute</Mth>
            is called on several different jobs, then each job executes within a
            different transaction.  
            To execute multiple jobs within the same transaction, execute the jobs
            within a LearningStoreTransactionScope (that is, between the initialization
            of a LearningStoreTransactionScope object and the calling of its
            <Mth>Dispose</Mth> method).  The initialization method will create the
            transaction, and the <Mth>Dispose</Mth> method will commit or rollback
            the transaction.<p/>
            When your application completes all work it wants to perform in a scope,
            you should call the <Mth>Complete</Mth> method only once to specify that 
            it is acceptable to commit the transaction.  If this method is not called,
            the transaction is rolled back when the scope exits.<p/>
            Transaction scopes can be nested.  However, nested scopes use the
            transaction from the containing scope.  Any options specified when
            creating nested scopes must be compatible with the outermost scope.
            See <Mth>LearningStoreTransactionScope</Mth> for more details.<p/>
            LearningStoreTransactionScope is, in some ways, similar to
            <Typ>/System.Transactions.TransactionScope</Typ>.  The major differences
            include:
            <ul>
            <li>LearningStoreTransactionScope is independent of ambient transactions.  In
                other words, it only affects LearningStore-related operations.</li>
            <li>LearningStoreTransactionScope, together with <Mth>../LearningStoreJob.Execute</Mth>,
                attempts to reuse connections where possible within a transaction.  This
                improves performance when multiple jobs are executed within a transaction.</li>
            <li>LearningStoreTransactionScope has fewer options.</li>
            </ul>
            </remarks>
            <example>
            The following code finds the user with the name "John Doe" and deletes him
            within a single transaction:
            <code language="C#">
            using(LearningStoreTransactionScope scope = new LearningStoreTransactionScope())
            {
                // Create the query
                LearningStoreQuery query = store.CreateQuery("UserItem");
            
                // Add output columns to the query
                query.AddColumn("Id");
            
                // Add a condition
                query.AddCondition("Name", LearningStoreConditionOperator.Equal, "John Doe");
            
                // Create a job and add the "perform query" operation
                LearningStoreJob job = store.CreateJob();
                job.PerformQuery(query);
            
                // Execute the job
                DataTable result = job.Execute&lt;DataTable&gt;();
            
                // Get the Id
                LearningStoreItemIdentifier id = (LearningStoreItemIdentifier)(result[0][0]);
            
                // Create a new job and add the "delete" operation
                job = store.CreateJob();
                job.DeleteItem(id);
            
                // Execute the job
                job.Execute();
            
                // Specify that the operations have succeeded
                scope.Complete();
            }
            </code>
            </example>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.s_currentScope">
            <summary>
            Scope for the current thread
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_scopeThread">
            <summary>
            Thread that created the scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_priorScope">
            <summary>
            Prior scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_nextScope">
            <summary>
            Next scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_committableTransaction">
            <summary>
            Transaction that should be committed when the scope
            is exited if Complete() is called on the scope.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_dependentTransaction">
            <summary>
            Transaction on which Complete() should be called
            when the scope is exited if Complete() is called
            on the scope.
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_transaction">
            <summary>
            "Root" transaction for the scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_createdConnections">
            <summary>
            Connections that should be disposed when the scope
            is exited
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_connections">
            <summary>
            Connections being used
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_disposed">
            <summary>
            True if disposed
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.m_complete">
            <summary>
            Has Complete() been called?
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.#ctor">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreTransactionScope</Typ> class.
            </summary>
            <remarks>
            See <Typ>LearningStoreTransactionScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.#ctor(System.Transactions.TransactionOptions)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreTransactionScope</Typ> class with
            the specified options.
            </summary>
            <param name="transactionOptions">The transaction options to use if a new transaction is created (i.e.,
                if this is the outermost scope).  If a new transaction is not created (i.e., this scope is nested
                inside another), then the isolation level must either be unspecified or identical to the
                currently-existing transaction, and the timeout value must be zero.
                </param>
            <exception cref="T:System.InvalidOperationException">The transaction options specified are invalid.</exception>
            <remarks>
            See <Typ>LearningStoreTransactionScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.#ctor(System.Transactions.Transaction)">
            <summary>
            Initializes a new instance of the <Typ>LearningStoreTransactionScope</Typ> class.  LearningStore
            jobs executed within the scope use the specified transaction.
            </summary>
            <param name="transaction">Transaction used by LearningStore operations within the scope.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="transaction"/> is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">A transaction already exists in this scope (i.e.,
                this scope is nested inside another).</exception>
            <remarks>
            See <Typ>LearningStoreTransactionScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.Dispose">
            <summary>
            Ends the transaction scope.
            </summary>
            <exception cref="T:System.InvalidOperationException">A thread other than the creating thread
                is disposing the object.</exception>
            <remarks>
            See <Typ>LearningStoreTransactionScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.Complete">
            <summary>
            Indicates that all operations within the scope have completed successfully. 
            </summary>
            <exception cref="T:System.InvalidOperationException">This method has already been called.</exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <remarks>
            When you are satisfied that all operations within the scope have completed successfully,
            you should call this method only once to specify that the transaction can be committed.
            Failing to call this method aborts the transaction.<p/>
            See <Typ>LearningStoreTransactionScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.GetConnection(System.String)">
            <summary>
            Get the connection for a particular connection string
            </summary>
            <param name="connectionString">Connection string</param>
            <returns>Cached or new connection</returns>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.Current">
            <summary>
            Current scope
            </summary>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStoreTransactionScope.Transaction">
            <summary>
            Transaction
            </summary>
        </member>
        <member name="T:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope">
            <summary>
            Marks LearningStore-related operations in a code block as
            privileged, which means that security checks are not performed
            </summary>
            <remarks>
            To execute a set of LearningStore-related operations without security
            checks, add the commands to the job within a LearningStorePrivilegedScope
            (that is, between the initialization of a LearningStorePrivilegedScope
            object and the calling of its <Mth>Dispose</Mth> method).<p/>
            Privileged scopes can be nested.
            </remarks>
            <example>
            The following code adds a new user item to the store specified by "store"
            with security checks turned off:
            <code language="C#">
            // Create the property values
            Dictionary&lt;string,object&gt; propertyValues = new Dictionary&lt;string,object&gt;();
            propertyValues["Name"] = "John Doe";
            propertyValues["Key"] = "Company\JohnDoe";
            
            // Create a job and add the "add item" operation
            LearningStoreJob job = store.CreateJob();
            
            using(LearningStorePrivilegedScope scope = new LearningStorePrivilegedScope())
            {
                // add the "add item" operation"
                job.AddItem("UserItem", propertyValues, false);
            }
            
            // Execute the job
            job.Execute();
            </code>
            </example>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.s_currentScope">
            <summary>
            Scope for the current thread
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.m_priorScope">
            <summary>
            Prior scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.m_nextScope">
            <summary>
            Next scope
            </summary>
        </member>
        <member name="F:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.m_disposed">
            <summary>
            True if disposed
            </summary>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.#ctor">
            <summary>
            Initializes a new instance of the <c>LearningStorePrivilegedScope</c>
            </summary>
            <remarks>
            See <Typ>LearningStorePrivilegedScope</Typ> for more information.
            </remarks>
        </member>
        <member name="M:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.Dispose">
            <summary>
            Ends the privileged scope.
            </summary>
            <remarks>
            See <Typ>LearningStorePrivilegedScope</Typ> for more information.
            </remarks>
        </member>
        <member name="P:Microsoft.LearningComponents.Storage.LearningStorePrivilegedScope.Current">
            <summary>
            Current scope
            </summary>
        </member>
    </members>
</doc>
